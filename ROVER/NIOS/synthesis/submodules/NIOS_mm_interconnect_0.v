// NIOS_mm_interconnect_0.v

// This file was auto-generated from altera_merlin_interconnect_wrapper_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 182 at 2019.09.20.11:25:05

`timescale 1 ps / 1 ps
module NIOS_mm_interconnect_0 (
		input  wire        clk_50_clk_clk,                                                   //                                           clk_50_clk.clk
		input  wire        sys_clk_clk_clk,                                                  //                                          sys_clk_clk.clk
		input  wire        CPU_reset_n_reset_bridge_in_reset_reset,                          //                    CPU_reset_n_reset_bridge_in_reset.reset
		input  wire        sys_pll_inclk_interface_reset_reset_bridge_in_reset_reset,        //  sys_pll_inclk_interface_reset_reset_bridge_in_reset.reset
		input  wire [26:0] CPU_data_master_address,                                          //                                      CPU_data_master.address
		output wire        CPU_data_master_waitrequest,                                      //                                                     .waitrequest
		input  wire [3:0]  CPU_data_master_byteenable,                                       //                                                     .byteenable
		input  wire        CPU_data_master_read,                                             //                                                     .read
		output wire [31:0] CPU_data_master_readdata,                                         //                                                     .readdata
		input  wire        CPU_data_master_write,                                            //                                                     .write
		input  wire [31:0] CPU_data_master_writedata,                                        //                                                     .writedata
		input  wire        CPU_data_master_debugaccess,                                      //                                                     .debugaccess
		input  wire [26:0] CPU_instruction_master_address,                                   //                               CPU_instruction_master.address
		output wire        CPU_instruction_master_waitrequest,                               //                                                     .waitrequest
		input  wire        CPU_instruction_master_read,                                      //                                                     .read
		output wire [31:0] CPU_instruction_master_readdata,                                  //                                                     .readdata
		output wire        CPU_instruction_master_readdatavalid,                             //                                                     .readdatavalid
		output wire [0:0]  ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_address,     // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave.address
		output wire        ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_write,       //                                                     .write
		output wire        ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_read,        //                                                     .read
		input  wire [7:0]  ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_readdata,    //                                                     .readdata
		output wire [7:0]  ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_writedata,   //                                                     .writedata
		output wire [0:0]  ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_byteenable,  //                                                     .byteenable
		input  wire        ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_waitrequest, //                                                     .waitrequest
		output wire [2:0]  ADC_DE0_adc_slave_address,                                        //                                    ADC_DE0_adc_slave.address
		output wire        ADC_DE0_adc_slave_write,                                          //                                                     .write
		output wire        ADC_DE0_adc_slave_read,                                           //                                                     .read
		input  wire [31:0] ADC_DE0_adc_slave_readdata,                                       //                                                     .readdata
		output wire [31:0] ADC_DE0_adc_slave_writedata,                                      //                                                     .writedata
		input  wire        ADC_DE0_adc_slave_waitrequest,                                    //                                                     .waitrequest
		output wire [8:0]  CPU_jtag_debug_module_address,                                    //                                CPU_jtag_debug_module.address
		output wire        CPU_jtag_debug_module_write,                                      //                                                     .write
		output wire        CPU_jtag_debug_module_read,                                       //                                                     .read
		input  wire [31:0] CPU_jtag_debug_module_readdata,                                   //                                                     .readdata
		output wire [31:0] CPU_jtag_debug_module_writedata,                                  //                                                     .writedata
		output wire [3:0]  CPU_jtag_debug_module_byteenable,                                 //                                                     .byteenable
		input  wire        CPU_jtag_debug_module_waitrequest,                                //                                                     .waitrequest
		output wire        CPU_jtag_debug_module_debugaccess,                                //                                                     .debugaccess
		output wire [1:0]  CTRL_I2C_s1_address,                                              //                                          CTRL_I2C_s1.address
		output wire        CTRL_I2C_s1_write,                                                //                                                     .write
		input  wire [31:0] CTRL_I2C_s1_readdata,                                             //                                                     .readdata
		output wire [31:0] CTRL_I2C_s1_writedata,                                            //                                                     .writedata
		output wire        CTRL_I2C_s1_chipselect,                                           //                                                     .chipselect
		output wire [1:0]  DATA_IN_I2C_s1_address,                                           //                                       DATA_IN_I2C_s1.address
		input  wire [31:0] DATA_IN_I2C_s1_readdata,                                          //                                                     .readdata
		output wire [1:0]  DATA_OUT_I2C_s1_address,                                          //                                      DATA_OUT_I2C_s1.address
		output wire        DATA_OUT_I2C_s1_write,                                            //                                                     .write
		input  wire [31:0] DATA_OUT_I2C_s1_readdata,                                         //                                                     .readdata
		output wire [31:0] DATA_OUT_I2C_s1_writedata,                                        //                                                     .writedata
		output wire        DATA_OUT_I2C_s1_chipselect,                                       //                                                     .chipselect
		output wire [2:0]  DIST1_s1_address,                                                 //                                             DIST1_s1.address
		output wire        DIST1_s1_write,                                                   //                                                     .write
		output wire        DIST1_s1_read,                                                    //                                                     .read
		input  wire [15:0] DIST1_s1_readdata,                                                //                                                     .readdata
		output wire [15:0] DIST1_s1_writedata,                                               //                                                     .writedata
		output wire        DIST1_s1_begintransfer,                                           //                                                     .begintransfer
		output wire        DIST1_s1_chipselect,                                              //                                                     .chipselect
		output wire [2:0]  DIST2_s1_address,                                                 //                                             DIST2_s1.address
		output wire        DIST2_s1_write,                                                   //                                                     .write
		output wire        DIST2_s1_read,                                                    //                                                     .read
		input  wire [15:0] DIST2_s1_readdata,                                                //                                                     .readdata
		output wire [15:0] DIST2_s1_writedata,                                               //                                                     .writedata
		output wire        DIST2_s1_begintransfer,                                           //                                                     .begintransfer
		output wire        DIST2_s1_chipselect,                                              //                                                     .chipselect
		output wire [2:0]  DIST3_s1_address,                                                 //                                             DIST3_s1.address
		output wire        DIST3_s1_write,                                                   //                                                     .write
		output wire        DIST3_s1_read,                                                    //                                                     .read
		input  wire [15:0] DIST3_s1_readdata,                                                //                                                     .readdata
		output wire [15:0] DIST3_s1_writedata,                                               //                                                     .writedata
		output wire        DIST3_s1_begintransfer,                                           //                                                     .begintransfer
		output wire        DIST3_s1_chipselect,                                              //                                                     .chipselect
		output wire [2:0]  DIST4_s1_address,                                                 //                                             DIST4_s1.address
		output wire        DIST4_s1_write,                                                   //                                                     .write
		output wire        DIST4_s1_read,                                                    //                                                     .read
		input  wire [15:0] DIST4_s1_readdata,                                                //                                                     .readdata
		output wire [15:0] DIST4_s1_writedata,                                               //                                                     .writedata
		output wire        DIST4_s1_begintransfer,                                           //                                                     .begintransfer
		output wire        DIST4_s1_chipselect,                                              //                                                     .chipselect
		output wire [2:0]  DIST5_s1_address,                                                 //                                             DIST5_s1.address
		output wire        DIST5_s1_write,                                                   //                                                     .write
		output wire        DIST5_s1_read,                                                    //                                                     .read
		input  wire [15:0] DIST5_s1_readdata,                                                //                                                     .readdata
		output wire [15:0] DIST5_s1_writedata,                                               //                                                     .writedata
		output wire        DIST5_s1_begintransfer,                                           //                                                     .begintransfer
		output wire        DIST5_s1_chipselect,                                              //                                                     .chipselect
		output wire [2:0]  DIST6_s1_address,                                                 //                                             DIST6_s1.address
		output wire        DIST6_s1_write,                                                   //                                                     .write
		output wire        DIST6_s1_read,                                                    //                                                     .read
		input  wire [15:0] DIST6_s1_readdata,                                                //                                                     .readdata
		output wire [15:0] DIST6_s1_writedata,                                               //                                                     .writedata
		output wire        DIST6_s1_begintransfer,                                           //                                                     .begintransfer
		output wire        DIST6_s1_chipselect,                                              //                                                     .chipselect
		output wire [2:0]  DIST7_s1_address,                                                 //                                             DIST7_s1.address
		output wire        DIST7_s1_write,                                                   //                                                     .write
		output wire        DIST7_s1_read,                                                    //                                                     .read
		input  wire [15:0] DIST7_s1_readdata,                                                //                                                     .readdata
		output wire [15:0] DIST7_s1_writedata,                                               //                                                     .writedata
		output wire        DIST7_s1_begintransfer,                                           //                                                     .begintransfer
		output wire        DIST7_s1_chipselect,                                              //                                                     .chipselect
		output wire [2:0]  DIST8_s1_address,                                                 //                                             DIST8_s1.address
		output wire        DIST8_s1_write,                                                   //                                                     .write
		output wire        DIST8_s1_read,                                                    //                                                     .read
		input  wire [15:0] DIST8_s1_readdata,                                                //                                                     .readdata
		output wire [15:0] DIST8_s1_writedata,                                               //                                                     .writedata
		output wire        DIST8_s1_begintransfer,                                           //                                                     .begintransfer
		output wire        DIST8_s1_chipselect,                                              //                                                     .chipselect
		output wire [1:0]  ENCODER_INT_s1_address,                                           //                                       ENCODER_INT_s1.address
		output wire        ENCODER_INT_s1_write,                                             //                                                     .write
		input  wire [31:0] ENCODER_INT_s1_readdata,                                          //                                                     .readdata
		output wire [31:0] ENCODER_INT_s1_writedata,                                         //                                                     .writedata
		output wire        ENCODER_INT_s1_chipselect,                                        //                                                     .chipselect
		output wire [1:0]  ENCODER_NORMAL_s1_address,                                        //                                    ENCODER_NORMAL_s1.address
		input  wire [31:0] ENCODER_NORMAL_s1_readdata,                                       //                                                     .readdata
		output wire [8:0]  EPCS_epcs_control_port_address,                                   //                               EPCS_epcs_control_port.address
		output wire        EPCS_epcs_control_port_write,                                     //                                                     .write
		output wire        EPCS_epcs_control_port_read,                                      //                                                     .read
		input  wire [31:0] EPCS_epcs_control_port_readdata,                                  //                                                     .readdata
		output wire [31:0] EPCS_epcs_control_port_writedata,                                 //                                                     .writedata
		output wire        EPCS_epcs_control_port_chipselect,                                //                                                     .chipselect
		output wire [1:0]  FLAG_I2C_s1_address,                                              //                                          FLAG_I2C_s1.address
		input  wire [31:0] FLAG_I2C_s1_readdata,                                             //                                                     .readdata
		output wire [2:0]  GPS_s1_address,                                                   //                                               GPS_s1.address
		output wire        GPS_s1_write,                                                     //                                                     .write
		output wire        GPS_s1_read,                                                      //                                                     .read
		input  wire [15:0] GPS_s1_readdata,                                                  //                                                     .readdata
		output wire [15:0] GPS_s1_writedata,                                                 //                                                     .writedata
		output wire        GPS_s1_begintransfer,                                             //                                                     .begintransfer
		output wire        GPS_s1_chipselect,                                                //                                                     .chipselect
		output wire [0:0]  JTAG_avalon_jtag_slave_address,                                   //                               JTAG_avalon_jtag_slave.address
		output wire        JTAG_avalon_jtag_slave_write,                                     //                                                     .write
		output wire        JTAG_avalon_jtag_slave_read,                                      //                                                     .read
		input  wire [31:0] JTAG_avalon_jtag_slave_readdata,                                  //                                                     .readdata
		output wire [31:0] JTAG_avalon_jtag_slave_writedata,                                 //                                                     .writedata
		input  wire        JTAG_avalon_jtag_slave_waitrequest,                               //                                                     .waitrequest
		output wire        JTAG_avalon_jtag_slave_chipselect,                                //                                                     .chipselect
		output wire [1:0]  KEY_s1_address,                                                   //                                               KEY_s1.address
		output wire        KEY_s1_write,                                                     //                                                     .write
		input  wire [31:0] KEY_s1_readdata,                                                  //                                                     .readdata
		output wire [31:0] KEY_s1_writedata,                                                 //                                                     .writedata
		output wire        KEY_s1_chipselect,                                                //                                                     .chipselect
		output wire [1:0]  LED_s1_address,                                                   //                                               LED_s1.address
		output wire        LED_s1_write,                                                     //                                                     .write
		input  wire [31:0] LED_s1_readdata,                                                  //                                                     .readdata
		output wire [31:0] LED_s1_writedata,                                                 //                                                     .writedata
		output wire        LED_s1_chipselect,                                                //                                                     .chipselect
		output wire [1:0]  MOTORES_s1_address,                                               //                                           MOTORES_s1.address
		output wire        MOTORES_s1_write,                                                 //                                                     .write
		input  wire [31:0] MOTORES_s1_readdata,                                              //                                                     .readdata
		output wire [31:0] MOTORES_s1_writedata,                                             //                                                     .writedata
		output wire        MOTORES_s1_chipselect,                                            //                                                     .chipselect
		output wire [1:0]  PWM1_s1_address,                                                  //                                              PWM1_s1.address
		output wire        PWM1_s1_write,                                                    //                                                     .write
		input  wire [31:0] PWM1_s1_readdata,                                                 //                                                     .readdata
		output wire [31:0] PWM1_s1_writedata,                                                //                                                     .writedata
		output wire        PWM1_s1_chipselect,                                               //                                                     .chipselect
		output wire [1:0]  PWM2_s1_address,                                                  //                                              PWM2_s1.address
		output wire        PWM2_s1_write,                                                    //                                                     .write
		input  wire [31:0] PWM2_s1_readdata,                                                 //                                                     .readdata
		output wire [31:0] PWM2_s1_writedata,                                                //                                                     .writedata
		output wire        PWM2_s1_chipselect,                                               //                                                     .chipselect
		output wire [23:0] SDRAM_s1_address,                                                 //                                             SDRAM_s1.address
		output wire        SDRAM_s1_write,                                                   //                                                     .write
		output wire        SDRAM_s1_read,                                                    //                                                     .read
		input  wire [15:0] SDRAM_s1_readdata,                                                //                                                     .readdata
		output wire [15:0] SDRAM_s1_writedata,                                               //                                                     .writedata
		output wire [1:0]  SDRAM_s1_byteenable,                                              //                                                     .byteenable
		input  wire        SDRAM_s1_readdatavalid,                                           //                                                     .readdatavalid
		input  wire        SDRAM_s1_waitrequest,                                             //                                                     .waitrequest
		output wire        SDRAM_s1_chipselect,                                              //                                                     .chipselect
		output wire [1:0]  SW_s1_address,                                                    //                                                SW_s1.address
		input  wire [31:0] SW_s1_readdata,                                                   //                                                     .readdata
		output wire [0:0]  sys_id_control_slave_address,                                     //                                 sys_id_control_slave.address
		input  wire [31:0] sys_id_control_slave_readdata,                                    //                                                     .readdata
		output wire [1:0]  sys_pll_pll_slave_address,                                        //                                    sys_pll_pll_slave.address
		output wire        sys_pll_pll_slave_write,                                          //                                                     .write
		output wire        sys_pll_pll_slave_read,                                           //                                                     .read
		input  wire [31:0] sys_pll_pll_slave_readdata,                                       //                                                     .readdata
		output wire [31:0] sys_pll_pll_slave_writedata,                                      //                                                     .writedata
		output wire [2:0]  sys_timer_s1_address,                                             //                                         sys_timer_s1.address
		output wire        sys_timer_s1_write,                                               //                                                     .write
		input  wire [15:0] sys_timer_s1_readdata,                                            //                                                     .readdata
		output wire [15:0] sys_timer_s1_writedata,                                           //                                                     .writedata
		output wire        sys_timer_s1_chipselect,                                          //                                                     .chipselect
		output wire [2:0]  XBEE_s1_address,                                                  //                                              XBEE_s1.address
		output wire        XBEE_s1_write,                                                    //                                                     .write
		output wire        XBEE_s1_read,                                                     //                                                     .read
		input  wire [15:0] XBEE_s1_readdata,                                                 //                                                     .readdata
		output wire [15:0] XBEE_s1_writedata,                                                //                                                     .writedata
		output wire        XBEE_s1_begintransfer,                                            //                                                     .begintransfer
		output wire        XBEE_s1_chipselect                                                //                                                     .chipselect
	);

	wire          cpu_instruction_master_translator_avalon_universal_master_0_waitrequest;                                                   // CPU_instruction_master_translator_avalon_universal_master_0_agent:av_waitrequest -> CPU_instruction_master_translator:uav_waitrequest
	wire    [2:0] cpu_instruction_master_translator_avalon_universal_master_0_burstcount;                                                    // CPU_instruction_master_translator:uav_burstcount -> CPU_instruction_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire   [31:0] cpu_instruction_master_translator_avalon_universal_master_0_writedata;                                                     // CPU_instruction_master_translator:uav_writedata -> CPU_instruction_master_translator_avalon_universal_master_0_agent:av_writedata
	wire   [26:0] cpu_instruction_master_translator_avalon_universal_master_0_address;                                                       // CPU_instruction_master_translator:uav_address -> CPU_instruction_master_translator_avalon_universal_master_0_agent:av_address
	wire          cpu_instruction_master_translator_avalon_universal_master_0_lock;                                                          // CPU_instruction_master_translator:uav_lock -> CPU_instruction_master_translator_avalon_universal_master_0_agent:av_lock
	wire          cpu_instruction_master_translator_avalon_universal_master_0_write;                                                         // CPU_instruction_master_translator:uav_write -> CPU_instruction_master_translator_avalon_universal_master_0_agent:av_write
	wire          cpu_instruction_master_translator_avalon_universal_master_0_read;                                                          // CPU_instruction_master_translator:uav_read -> CPU_instruction_master_translator_avalon_universal_master_0_agent:av_read
	wire   [31:0] cpu_instruction_master_translator_avalon_universal_master_0_readdata;                                                      // CPU_instruction_master_translator_avalon_universal_master_0_agent:av_readdata -> CPU_instruction_master_translator:uav_readdata
	wire          cpu_instruction_master_translator_avalon_universal_master_0_debugaccess;                                                   // CPU_instruction_master_translator:uav_debugaccess -> CPU_instruction_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire    [3:0] cpu_instruction_master_translator_avalon_universal_master_0_byteenable;                                                    // CPU_instruction_master_translator:uav_byteenable -> CPU_instruction_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire          cpu_instruction_master_translator_avalon_universal_master_0_readdatavalid;                                                 // CPU_instruction_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> CPU_instruction_master_translator:uav_readdatavalid
	wire          cpu_data_master_translator_avalon_universal_master_0_waitrequest;                                                          // CPU_data_master_translator_avalon_universal_master_0_agent:av_waitrequest -> CPU_data_master_translator:uav_waitrequest
	wire    [2:0] cpu_data_master_translator_avalon_universal_master_0_burstcount;                                                           // CPU_data_master_translator:uav_burstcount -> CPU_data_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire   [31:0] cpu_data_master_translator_avalon_universal_master_0_writedata;                                                            // CPU_data_master_translator:uav_writedata -> CPU_data_master_translator_avalon_universal_master_0_agent:av_writedata
	wire   [26:0] cpu_data_master_translator_avalon_universal_master_0_address;                                                              // CPU_data_master_translator:uav_address -> CPU_data_master_translator_avalon_universal_master_0_agent:av_address
	wire          cpu_data_master_translator_avalon_universal_master_0_lock;                                                                 // CPU_data_master_translator:uav_lock -> CPU_data_master_translator_avalon_universal_master_0_agent:av_lock
	wire          cpu_data_master_translator_avalon_universal_master_0_write;                                                                // CPU_data_master_translator:uav_write -> CPU_data_master_translator_avalon_universal_master_0_agent:av_write
	wire          cpu_data_master_translator_avalon_universal_master_0_read;                                                                 // CPU_data_master_translator:uav_read -> CPU_data_master_translator_avalon_universal_master_0_agent:av_read
	wire   [31:0] cpu_data_master_translator_avalon_universal_master_0_readdata;                                                             // CPU_data_master_translator_avalon_universal_master_0_agent:av_readdata -> CPU_data_master_translator:uav_readdata
	wire          cpu_data_master_translator_avalon_universal_master_0_debugaccess;                                                          // CPU_data_master_translator:uav_debugaccess -> CPU_data_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire    [3:0] cpu_data_master_translator_avalon_universal_master_0_byteenable;                                                           // CPU_data_master_translator:uav_byteenable -> CPU_data_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire          cpu_data_master_translator_avalon_universal_master_0_readdatavalid;                                                        // CPU_data_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> CPU_data_master_translator:uav_readdatavalid
	wire          rsp_xbar_mux_001_src_endofpacket;                                                                                          // rsp_xbar_mux_001:src_endofpacket -> CPU_data_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire          rsp_xbar_mux_001_src_valid;                                                                                                // rsp_xbar_mux_001:src_valid -> CPU_data_master_translator_avalon_universal_master_0_agent:rp_valid
	wire          rsp_xbar_mux_001_src_startofpacket;                                                                                        // rsp_xbar_mux_001:src_startofpacket -> CPU_data_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [106:0] rsp_xbar_mux_001_src_data;                                                                                                 // rsp_xbar_mux_001:src_data -> CPU_data_master_translator_avalon_universal_master_0_agent:rp_data
	wire   [30:0] rsp_xbar_mux_001_src_channel;                                                                                              // rsp_xbar_mux_001:src_channel -> CPU_data_master_translator_avalon_universal_master_0_agent:rp_channel
	wire          rsp_xbar_mux_001_src_ready;                                                                                                // CPU_data_master_translator_avalon_universal_master_0_agent:rp_ready -> rsp_xbar_mux_001:src_ready
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                            // CPU_jtag_debug_module_translator:uav_waitrequest -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount;                                             // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_burstcount -> CPU_jtag_debug_module_translator:uav_burstcount
	wire   [31:0] cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata;                                              // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_writedata -> CPU_jtag_debug_module_translator:uav_writedata
	wire   [26:0] cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address;                                                // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_address -> CPU_jtag_debug_module_translator:uav_address
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write;                                                  // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_write -> CPU_jtag_debug_module_translator:uav_write
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock;                                                   // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_lock -> CPU_jtag_debug_module_translator:uav_lock
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read;                                                   // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_read -> CPU_jtag_debug_module_translator:uav_read
	wire   [31:0] cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata;                                               // CPU_jtag_debug_module_translator:uav_readdata -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                          // CPU_jtag_debug_module_translator:uav_readdatavalid -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                            // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_debugaccess -> CPU_jtag_debug_module_translator:uav_debugaccess
	wire    [3:0] cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable;                                             // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_byteenable -> CPU_jtag_debug_module_translator:uav_byteenable
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                     // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid;                                           // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_valid -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                   // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data;                                            // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_data -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready;                                           // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                  // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                        // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                         // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                        // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_ready -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                      // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                       // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                      // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_src_endofpacket;                                                                                              // cmd_xbar_mux:src_endofpacket -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_src_valid;                                                                                                    // cmd_xbar_mux:src_valid -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_src_startofpacket;                                                                                            // cmd_xbar_mux:src_startofpacket -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_src_data;                                                                                                     // cmd_xbar_mux:src_data -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_src_channel;                                                                                                  // cmd_xbar_mux:src_channel -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_src_ready;                                                                                                    // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux:src_ready
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                         // SDRAM_s1_translator:uav_waitrequest -> SDRAM_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [1:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                          // SDRAM_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> SDRAM_s1_translator:uav_burstcount
	wire   [15:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                           // SDRAM_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> SDRAM_s1_translator:uav_writedata
	wire   [26:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                             // SDRAM_s1_translator_avalon_universal_slave_0_agent:m0_address -> SDRAM_s1_translator:uav_address
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                               // SDRAM_s1_translator_avalon_universal_slave_0_agent:m0_write -> SDRAM_s1_translator:uav_write
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                                // SDRAM_s1_translator_avalon_universal_slave_0_agent:m0_lock -> SDRAM_s1_translator:uav_lock
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                                // SDRAM_s1_translator_avalon_universal_slave_0_agent:m0_read -> SDRAM_s1_translator:uav_read
	wire   [15:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                            // SDRAM_s1_translator:uav_readdata -> SDRAM_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                       // SDRAM_s1_translator:uav_readdatavalid -> SDRAM_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                         // SDRAM_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> SDRAM_s1_translator:uav_debugaccess
	wire    [1:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                          // SDRAM_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> SDRAM_s1_translator:uav_byteenable
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                  // SDRAM_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> SDRAM_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                        // SDRAM_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> SDRAM_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                                // SDRAM_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> SDRAM_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire   [89:0] sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                         // SDRAM_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> SDRAM_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                        // SDRAM_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> SDRAM_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                               // SDRAM_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> SDRAM_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                     // SDRAM_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> SDRAM_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                             // SDRAM_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> SDRAM_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire   [89:0] sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                      // SDRAM_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> SDRAM_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                     // SDRAM_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> SDRAM_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                   // SDRAM_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> SDRAM_s1_translator_avalon_universal_slave_0_agent_rdata_fifo:in_valid
	wire   [17:0] sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                    // SDRAM_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> SDRAM_s1_translator_avalon_universal_slave_0_agent_rdata_fifo:in_data
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                   // SDRAM_s1_translator_avalon_universal_slave_0_agent_rdata_fifo:in_ready -> SDRAM_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid;                                                   // SDRAM_s1_translator_avalon_universal_slave_0_agent_rdata_fifo:out_valid -> SDRAM_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [17:0] sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data;                                                    // SDRAM_s1_translator_avalon_universal_slave_0_agent_rdata_fifo:out_data -> SDRAM_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready;                                                   // SDRAM_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> SDRAM_s1_translator_avalon_universal_slave_0_agent_rdata_fifo:out_ready
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                           // EPCS_epcs_control_port_translator:uav_waitrequest -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_burstcount;                                            // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:m0_burstcount -> EPCS_epcs_control_port_translator:uav_burstcount
	wire   [31:0] epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_writedata;                                             // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:m0_writedata -> EPCS_epcs_control_port_translator:uav_writedata
	wire   [26:0] epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_address;                                               // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:m0_address -> EPCS_epcs_control_port_translator:uav_address
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_write;                                                 // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:m0_write -> EPCS_epcs_control_port_translator:uav_write
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_lock;                                                  // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:m0_lock -> EPCS_epcs_control_port_translator:uav_lock
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_read;                                                  // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:m0_read -> EPCS_epcs_control_port_translator:uav_read
	wire   [31:0] epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_readdata;                                              // EPCS_epcs_control_port_translator:uav_readdata -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                         // EPCS_epcs_control_port_translator:uav_readdatavalid -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                           // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:m0_debugaccess -> EPCS_epcs_control_port_translator:uav_debugaccess
	wire    [3:0] epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_byteenable;                                            // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:m0_byteenable -> EPCS_epcs_control_port_translator:uav_byteenable
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                    // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rf_source_valid;                                          // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rf_source_valid -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                  // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rf_source_data;                                           // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rf_source_data -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rf_source_ready;                                          // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                 // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                       // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                               // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                        // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                       // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rf_sink_ready -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                     // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                      // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                     // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_002_src_endofpacket;                                                                                          // cmd_xbar_mux_002:src_endofpacket -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_002_src_valid;                                                                                                // cmd_xbar_mux_002:src_valid -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_002_src_startofpacket;                                                                                        // cmd_xbar_mux_002:src_startofpacket -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_002_src_data;                                                                                                 // cmd_xbar_mux_002:src_data -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_002_src_channel;                                                                                              // cmd_xbar_mux_002:src_channel -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_002_src_ready;                                                                                                // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_002:src_ready
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                             // sys_id_control_slave_translator:uav_waitrequest -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;                                              // sys_id_control_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> sys_id_control_slave_translator:uav_burstcount
	wire   [31:0] sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata;                                               // sys_id_control_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> sys_id_control_slave_translator:uav_writedata
	wire   [26:0] sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_address;                                                 // sys_id_control_slave_translator_avalon_universal_slave_0_agent:m0_address -> sys_id_control_slave_translator:uav_address
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_write;                                                   // sys_id_control_slave_translator_avalon_universal_slave_0_agent:m0_write -> sys_id_control_slave_translator:uav_write
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_lock;                                                    // sys_id_control_slave_translator_avalon_universal_slave_0_agent:m0_lock -> sys_id_control_slave_translator:uav_lock
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_read;                                                    // sys_id_control_slave_translator_avalon_universal_slave_0_agent:m0_read -> sys_id_control_slave_translator:uav_read
	wire   [31:0] sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                                                // sys_id_control_slave_translator:uav_readdata -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                           // sys_id_control_slave_translator:uav_readdatavalid -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                             // sys_id_control_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sys_id_control_slave_translator:uav_debugaccess
	wire    [3:0] sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;                                              // sys_id_control_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> sys_id_control_slave_translator:uav_byteenable
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                      // sys_id_control_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;                                            // sys_id_control_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                    // sys_id_control_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] sys_id_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data;                                             // sys_id_control_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;                                            // sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                   // sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                         // sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                 // sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                          // sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                         // sys_id_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                       // sys_id_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] sys_id_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                        // sys_id_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                       // sys_id_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_003_src_endofpacket;                                                                                          // cmd_xbar_mux_003:src_endofpacket -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_003_src_valid;                                                                                                // cmd_xbar_mux_003:src_valid -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_003_src_startofpacket;                                                                                        // cmd_xbar_mux_003:src_startofpacket -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_003_src_data;                                                                                                 // cmd_xbar_mux_003:src_data -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_003_src_channel;                                                                                              // cmd_xbar_mux_003:src_channel -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_003_src_ready;                                                                                                // sys_id_control_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_003:src_ready
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                     // sys_timer_s1_translator:uav_waitrequest -> sys_timer_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                      // sys_timer_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> sys_timer_s1_translator:uav_burstcount
	wire   [31:0] sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                       // sys_timer_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> sys_timer_s1_translator:uav_writedata
	wire   [26:0] sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                         // sys_timer_s1_translator_avalon_universal_slave_0_agent:m0_address -> sys_timer_s1_translator:uav_address
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                           // sys_timer_s1_translator_avalon_universal_slave_0_agent:m0_write -> sys_timer_s1_translator:uav_write
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                            // sys_timer_s1_translator_avalon_universal_slave_0_agent:m0_lock -> sys_timer_s1_translator:uav_lock
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                            // sys_timer_s1_translator_avalon_universal_slave_0_agent:m0_read -> sys_timer_s1_translator:uav_read
	wire   [31:0] sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                        // sys_timer_s1_translator:uav_readdata -> sys_timer_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                   // sys_timer_s1_translator:uav_readdatavalid -> sys_timer_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                     // sys_timer_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sys_timer_s1_translator:uav_debugaccess
	wire    [3:0] sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                      // sys_timer_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> sys_timer_s1_translator:uav_byteenable
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                              // sys_timer_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                    // sys_timer_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                            // sys_timer_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] sys_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                     // sys_timer_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                    // sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sys_timer_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                           // sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sys_timer_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                 // sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sys_timer_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                         // sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sys_timer_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                  // sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sys_timer_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                 // sys_timer_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                               // sys_timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sys_timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] sys_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                // sys_timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sys_timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                               // sys_timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sys_timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_004_src_endofpacket;                                                                                          // cmd_xbar_mux_004:src_endofpacket -> sys_timer_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_004_src_valid;                                                                                                // cmd_xbar_mux_004:src_valid -> sys_timer_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_004_src_startofpacket;                                                                                        // cmd_xbar_mux_004:src_startofpacket -> sys_timer_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_004_src_data;                                                                                                 // cmd_xbar_mux_004:src_data -> sys_timer_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_004_src_channel;                                                                                              // cmd_xbar_mux_004:src_channel -> sys_timer_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_004_src_ready;                                                                                                // sys_timer_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_004:src_ready
	wire          led_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                           // LED_s1_translator:uav_waitrequest -> LED_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] led_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                            // LED_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> LED_s1_translator:uav_burstcount
	wire   [31:0] led_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                             // LED_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> LED_s1_translator:uav_writedata
	wire   [26:0] led_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                               // LED_s1_translator_avalon_universal_slave_0_agent:m0_address -> LED_s1_translator:uav_address
	wire          led_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                                 // LED_s1_translator_avalon_universal_slave_0_agent:m0_write -> LED_s1_translator:uav_write
	wire          led_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                                  // LED_s1_translator_avalon_universal_slave_0_agent:m0_lock -> LED_s1_translator:uav_lock
	wire          led_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                                  // LED_s1_translator_avalon_universal_slave_0_agent:m0_read -> LED_s1_translator:uav_read
	wire   [31:0] led_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                              // LED_s1_translator:uav_readdata -> LED_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          led_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                         // LED_s1_translator:uav_readdatavalid -> LED_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          led_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                           // LED_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> LED_s1_translator:uav_debugaccess
	wire    [3:0] led_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                            // LED_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> LED_s1_translator:uav_byteenable
	wire          led_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                    // LED_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> LED_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          led_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                          // LED_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> LED_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          led_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                                  // LED_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> LED_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] led_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                           // LED_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> LED_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          led_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                          // LED_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> LED_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          led_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                                 // LED_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> LED_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          led_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                       // LED_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> LED_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          led_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                               // LED_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> LED_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] led_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                        // LED_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> LED_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          led_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                       // LED_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> LED_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          led_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                     // LED_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> LED_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] led_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                      // LED_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> LED_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          led_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                     // LED_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> LED_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_005_src_endofpacket;                                                                                          // cmd_xbar_mux_005:src_endofpacket -> LED_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_005_src_valid;                                                                                                // cmd_xbar_mux_005:src_valid -> LED_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_005_src_startofpacket;                                                                                        // cmd_xbar_mux_005:src_startofpacket -> LED_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_005_src_data;                                                                                                 // cmd_xbar_mux_005:src_data -> LED_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_005_src_channel;                                                                                              // cmd_xbar_mux_005:src_channel -> LED_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_005_src_ready;                                                                                                // LED_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_005:src_ready
	wire          sw_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                            // SW_s1_translator:uav_waitrequest -> SW_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] sw_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                             // SW_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> SW_s1_translator:uav_burstcount
	wire   [31:0] sw_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                              // SW_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> SW_s1_translator:uav_writedata
	wire   [26:0] sw_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                                // SW_s1_translator_avalon_universal_slave_0_agent:m0_address -> SW_s1_translator:uav_address
	wire          sw_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                                  // SW_s1_translator_avalon_universal_slave_0_agent:m0_write -> SW_s1_translator:uav_write
	wire          sw_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                                   // SW_s1_translator_avalon_universal_slave_0_agent:m0_lock -> SW_s1_translator:uav_lock
	wire          sw_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                                   // SW_s1_translator_avalon_universal_slave_0_agent:m0_read -> SW_s1_translator:uav_read
	wire   [31:0] sw_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                               // SW_s1_translator:uav_readdata -> SW_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          sw_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                          // SW_s1_translator:uav_readdatavalid -> SW_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          sw_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                            // SW_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> SW_s1_translator:uav_debugaccess
	wire    [3:0] sw_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                             // SW_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> SW_s1_translator:uav_byteenable
	wire          sw_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                     // SW_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> SW_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          sw_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                           // SW_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> SW_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          sw_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                                   // SW_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> SW_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] sw_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                            // SW_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> SW_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          sw_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                           // SW_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> SW_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                                  // SW_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> SW_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                        // SW_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> SW_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                                // SW_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> SW_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                         // SW_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> SW_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                        // SW_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> SW_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                      // SW_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> SW_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                       // SW_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> SW_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                      // SW_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> SW_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_006_src_endofpacket;                                                                                          // cmd_xbar_mux_006:src_endofpacket -> SW_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_006_src_valid;                                                                                                // cmd_xbar_mux_006:src_valid -> SW_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_006_src_startofpacket;                                                                                        // cmd_xbar_mux_006:src_startofpacket -> SW_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_006_src_data;                                                                                                 // cmd_xbar_mux_006:src_data -> SW_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_006_src_channel;                                                                                              // cmd_xbar_mux_006:src_channel -> SW_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_006_src_ready;                                                                                                // SW_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_006:src_ready
	wire          key_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                           // KEY_s1_translator:uav_waitrequest -> KEY_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] key_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                            // KEY_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> KEY_s1_translator:uav_burstcount
	wire   [31:0] key_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                             // KEY_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> KEY_s1_translator:uav_writedata
	wire   [26:0] key_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                               // KEY_s1_translator_avalon_universal_slave_0_agent:m0_address -> KEY_s1_translator:uav_address
	wire          key_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                                 // KEY_s1_translator_avalon_universal_slave_0_agent:m0_write -> KEY_s1_translator:uav_write
	wire          key_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                                  // KEY_s1_translator_avalon_universal_slave_0_agent:m0_lock -> KEY_s1_translator:uav_lock
	wire          key_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                                  // KEY_s1_translator_avalon_universal_slave_0_agent:m0_read -> KEY_s1_translator:uav_read
	wire   [31:0] key_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                              // KEY_s1_translator:uav_readdata -> KEY_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          key_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                         // KEY_s1_translator:uav_readdatavalid -> KEY_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          key_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                           // KEY_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> KEY_s1_translator:uav_debugaccess
	wire    [3:0] key_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                            // KEY_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> KEY_s1_translator:uav_byteenable
	wire          key_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                    // KEY_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> KEY_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          key_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                          // KEY_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> KEY_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          key_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                                  // KEY_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> KEY_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] key_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                           // KEY_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> KEY_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          key_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                          // KEY_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> KEY_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                                 // KEY_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> KEY_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                       // KEY_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> KEY_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                               // KEY_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> KEY_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                        // KEY_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> KEY_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                       // KEY_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> KEY_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                     // KEY_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> KEY_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                      // KEY_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> KEY_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                     // KEY_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> KEY_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_007_src_endofpacket;                                                                                          // cmd_xbar_mux_007:src_endofpacket -> KEY_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_007_src_valid;                                                                                                // cmd_xbar_mux_007:src_valid -> KEY_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_007_src_startofpacket;                                                                                        // cmd_xbar_mux_007:src_startofpacket -> KEY_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_007_src_data;                                                                                                 // cmd_xbar_mux_007:src_data -> KEY_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_007_src_channel;                                                                                              // cmd_xbar_mux_007:src_channel -> KEY_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_007_src_ready;                                                                                                // KEY_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_007:src_ready
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                           // JTAG_avalon_jtag_slave_translator:uav_waitrequest -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;                                            // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> JTAG_avalon_jtag_slave_translator:uav_burstcount
	wire   [31:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata;                                             // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> JTAG_avalon_jtag_slave_translator:uav_writedata
	wire   [26:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address;                                               // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_address -> JTAG_avalon_jtag_slave_translator:uav_address
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write;                                                 // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_write -> JTAG_avalon_jtag_slave_translator:uav_write
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock;                                                  // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_lock -> JTAG_avalon_jtag_slave_translator:uav_lock
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read;                                                  // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_read -> JTAG_avalon_jtag_slave_translator:uav_read
	wire   [31:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                                              // JTAG_avalon_jtag_slave_translator:uav_readdata -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                         // JTAG_avalon_jtag_slave_translator:uav_readdatavalid -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                           // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> JTAG_avalon_jtag_slave_translator:uav_debugaccess
	wire    [3:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;                                            // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> JTAG_avalon_jtag_slave_translator:uav_byteenable
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                    // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;                                          // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                  // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data;                                           // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;                                          // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                 // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                       // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                               // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                        // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                       // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                     // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                      // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                     // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_008_src_endofpacket;                                                                                          // cmd_xbar_mux_008:src_endofpacket -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_008_src_valid;                                                                                                // cmd_xbar_mux_008:src_valid -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_008_src_startofpacket;                                                                                        // cmd_xbar_mux_008:src_startofpacket -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_008_src_data;                                                                                                 // cmd_xbar_mux_008:src_data -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_008_src_channel;                                                                                              // cmd_xbar_mux_008:src_channel -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_008_src_ready;                                                                                                // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_008:src_ready
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                // sys_pll_pll_slave_translator:uav_waitrequest -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                 // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> sys_pll_pll_slave_translator:uav_burstcount
	wire   [31:0] sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_writedata;                                                  // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> sys_pll_pll_slave_translator:uav_writedata
	wire   [26:0] sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_address;                                                    // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_address -> sys_pll_pll_slave_translator:uav_address
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_write;                                                      // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_write -> sys_pll_pll_slave_translator:uav_write
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_lock;                                                       // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_lock -> sys_pll_pll_slave_translator:uav_lock
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_read;                                                       // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_read -> sys_pll_pll_slave_translator:uav_read
	wire   [31:0] sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                                                   // sys_pll_pll_slave_translator:uav_readdata -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                              // sys_pll_pll_slave_translator:uav_readdatavalid -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sys_pll_pll_slave_translator:uav_debugaccess
	wire    [3:0] sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                 // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> sys_pll_pll_slave_translator:uav_byteenable
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                         // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;                                               // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                       // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_data;                                                // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;                                               // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                      // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                            // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                    // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                             // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                            // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                          // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo:in_valid
	wire   [33:0] sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                           // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo:in_data
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                          // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo:in_ready -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid;                                          // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo:out_valid -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data;                                           // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo:out_data -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready;                                          // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo:out_ready
	wire          cmd_xbar_mux_009_src_endofpacket;                                                                                          // cmd_xbar_mux_009:src_endofpacket -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_009_src_valid;                                                                                                // cmd_xbar_mux_009:src_valid -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_009_src_startofpacket;                                                                                        // cmd_xbar_mux_009:src_startofpacket -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_009_src_data;                                                                                                 // cmd_xbar_mux_009:src_data -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_009_src_channel;                                                                                              // cmd_xbar_mux_009:src_channel -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_009_src_ready;                                                                                                // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_009:src_ready
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;             // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator:uav_waitrequest -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [0:0] acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;              // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator:uav_burstcount
	wire    [7:0] acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_writedata;               // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator:uav_writedata
	wire   [26:0] acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_address;                 // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:m0_address -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator:uav_address
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_write;                   // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:m0_write -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator:uav_write
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_lock;                    // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:m0_lock -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator:uav_lock
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_read;                    // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:m0_read -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator:uav_read
	wire    [7:0] acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator:uav_readdata -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;           // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator:uav_readdatavalid -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;             // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator:uav_debugaccess
	wire    [0:0] acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;              // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator:uav_byteenable
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;      // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;            // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;    // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire   [80:0] acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rf_source_data;             // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;            // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;   // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;         // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket; // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire   [80:0] acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;          // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;         // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;       // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire    [9:0] acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;        // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;       // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                // ADC_DE0_adc_slave_translator:uav_waitrequest -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                 // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> ADC_DE0_adc_slave_translator:uav_burstcount
	wire   [31:0] adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_writedata;                                                  // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> ADC_DE0_adc_slave_translator:uav_writedata
	wire   [26:0] adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_address;                                                    // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:m0_address -> ADC_DE0_adc_slave_translator:uav_address
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_write;                                                      // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:m0_write -> ADC_DE0_adc_slave_translator:uav_write
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_lock;                                                       // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:m0_lock -> ADC_DE0_adc_slave_translator:uav_lock
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_read;                                                       // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:m0_read -> ADC_DE0_adc_slave_translator:uav_read
	wire   [31:0] adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                                                   // ADC_DE0_adc_slave_translator:uav_readdata -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                              // ADC_DE0_adc_slave_translator:uav_readdatavalid -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> ADC_DE0_adc_slave_translator:uav_debugaccess
	wire    [3:0] adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                 // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> ADC_DE0_adc_slave_translator:uav_byteenable
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                         // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;                                               // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                       // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rf_source_data;                                                // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;                                               // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                      // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                            // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                    // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                             // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                            // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                          // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                           // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                          // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_011_src_endofpacket;                                                                                          // cmd_xbar_mux_011:src_endofpacket -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_011_src_valid;                                                                                                // cmd_xbar_mux_011:src_valid -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_011_src_startofpacket;                                                                                        // cmd_xbar_mux_011:src_startofpacket -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_011_src_data;                                                                                                 // cmd_xbar_mux_011:src_data -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_011_src_channel;                                                                                              // cmd_xbar_mux_011:src_channel -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_011_src_ready;                                                                                                // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_011:src_ready
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                   // ENCODER_INT_s1_translator:uav_waitrequest -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                    // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> ENCODER_INT_s1_translator:uav_burstcount
	wire   [31:0] encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                     // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> ENCODER_INT_s1_translator:uav_writedata
	wire   [26:0] encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                       // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:m0_address -> ENCODER_INT_s1_translator:uav_address
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                         // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:m0_write -> ENCODER_INT_s1_translator:uav_write
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                          // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:m0_lock -> ENCODER_INT_s1_translator:uav_lock
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                          // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:m0_read -> ENCODER_INT_s1_translator:uav_read
	wire   [31:0] encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                      // ENCODER_INT_s1_translator:uav_readdata -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                 // ENCODER_INT_s1_translator:uav_readdatavalid -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                   // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> ENCODER_INT_s1_translator:uav_debugaccess
	wire    [3:0] encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                    // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> ENCODER_INT_s1_translator:uav_byteenable
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                            // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                  // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                          // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] encoder_int_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                   // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                  // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                         // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                               // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                       // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] encoder_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                               // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                             // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] encoder_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                              // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                             // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_012_src_endofpacket;                                                                                          // cmd_xbar_mux_012:src_endofpacket -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_012_src_valid;                                                                                                // cmd_xbar_mux_012:src_valid -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_012_src_startofpacket;                                                                                        // cmd_xbar_mux_012:src_startofpacket -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_012_src_data;                                                                                                 // cmd_xbar_mux_012:src_data -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_012_src_channel;                                                                                              // cmd_xbar_mux_012:src_channel -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_012_src_ready;                                                                                                // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_012:src_ready
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                // ENCODER_NORMAL_s1_translator:uav_waitrequest -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                 // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> ENCODER_NORMAL_s1_translator:uav_burstcount
	wire   [31:0] encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                  // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> ENCODER_NORMAL_s1_translator:uav_writedata
	wire   [26:0] encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                    // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:m0_address -> ENCODER_NORMAL_s1_translator:uav_address
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                      // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:m0_write -> ENCODER_NORMAL_s1_translator:uav_write
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                       // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:m0_lock -> ENCODER_NORMAL_s1_translator:uav_lock
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                       // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:m0_read -> ENCODER_NORMAL_s1_translator:uav_read
	wire   [31:0] encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                   // ENCODER_NORMAL_s1_translator:uav_readdata -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                              // ENCODER_NORMAL_s1_translator:uav_readdatavalid -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> ENCODER_NORMAL_s1_translator:uav_debugaccess
	wire    [3:0] encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                 // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> ENCODER_NORMAL_s1_translator:uav_byteenable
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                         // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                               // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                       // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] encoder_normal_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                               // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                      // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                            // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                    // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] encoder_normal_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                             // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                            // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                          // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] encoder_normal_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                           // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                          // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_013_src_endofpacket;                                                                                          // cmd_xbar_mux_013:src_endofpacket -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_013_src_valid;                                                                                                // cmd_xbar_mux_013:src_valid -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_013_src_startofpacket;                                                                                        // cmd_xbar_mux_013:src_startofpacket -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_013_src_data;                                                                                                 // cmd_xbar_mux_013:src_data -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_013_src_channel;                                                                                              // cmd_xbar_mux_013:src_channel -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_013_src_ready;                                                                                                // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_013:src_ready
	wire          motores_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                       // MOTORES_s1_translator:uav_waitrequest -> MOTORES_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] motores_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                        // MOTORES_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> MOTORES_s1_translator:uav_burstcount
	wire   [31:0] motores_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                         // MOTORES_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> MOTORES_s1_translator:uav_writedata
	wire   [26:0] motores_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                           // MOTORES_s1_translator_avalon_universal_slave_0_agent:m0_address -> MOTORES_s1_translator:uav_address
	wire          motores_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                             // MOTORES_s1_translator_avalon_universal_slave_0_agent:m0_write -> MOTORES_s1_translator:uav_write
	wire          motores_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                              // MOTORES_s1_translator_avalon_universal_slave_0_agent:m0_lock -> MOTORES_s1_translator:uav_lock
	wire          motores_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                              // MOTORES_s1_translator_avalon_universal_slave_0_agent:m0_read -> MOTORES_s1_translator:uav_read
	wire   [31:0] motores_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                          // MOTORES_s1_translator:uav_readdata -> MOTORES_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          motores_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                     // MOTORES_s1_translator:uav_readdatavalid -> MOTORES_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          motores_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                       // MOTORES_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> MOTORES_s1_translator:uav_debugaccess
	wire    [3:0] motores_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                        // MOTORES_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> MOTORES_s1_translator:uav_byteenable
	wire          motores_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                // MOTORES_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> MOTORES_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          motores_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                      // MOTORES_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> MOTORES_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          motores_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                              // MOTORES_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> MOTORES_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] motores_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                       // MOTORES_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> MOTORES_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          motores_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                      // MOTORES_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> MOTORES_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          motores_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                             // MOTORES_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> MOTORES_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          motores_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                   // MOTORES_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> MOTORES_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          motores_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                           // MOTORES_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> MOTORES_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] motores_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                    // MOTORES_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> MOTORES_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          motores_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                   // MOTORES_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> MOTORES_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          motores_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                 // MOTORES_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> MOTORES_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] motores_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                  // MOTORES_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> MOTORES_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          motores_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                 // MOTORES_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> MOTORES_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_014_src_endofpacket;                                                                                          // cmd_xbar_mux_014:src_endofpacket -> MOTORES_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_014_src_valid;                                                                                                // cmd_xbar_mux_014:src_valid -> MOTORES_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_014_src_startofpacket;                                                                                        // cmd_xbar_mux_014:src_startofpacket -> MOTORES_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_014_src_data;                                                                                                 // cmd_xbar_mux_014:src_data -> MOTORES_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_014_src_channel;                                                                                              // cmd_xbar_mux_014:src_channel -> MOTORES_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_014_src_ready;                                                                                                // MOTORES_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_014:src_ready
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                          // PWM1_s1_translator:uav_waitrequest -> PWM1_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] pwm1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                           // PWM1_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> PWM1_s1_translator:uav_burstcount
	wire   [31:0] pwm1_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                            // PWM1_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> PWM1_s1_translator:uav_writedata
	wire   [26:0] pwm1_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                              // PWM1_s1_translator_avalon_universal_slave_0_agent:m0_address -> PWM1_s1_translator:uav_address
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                                // PWM1_s1_translator_avalon_universal_slave_0_agent:m0_write -> PWM1_s1_translator:uav_write
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                                 // PWM1_s1_translator_avalon_universal_slave_0_agent:m0_lock -> PWM1_s1_translator:uav_lock
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                                 // PWM1_s1_translator_avalon_universal_slave_0_agent:m0_read -> PWM1_s1_translator:uav_read
	wire   [31:0] pwm1_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                             // PWM1_s1_translator:uav_readdata -> PWM1_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                        // PWM1_s1_translator:uav_readdatavalid -> PWM1_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                          // PWM1_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> PWM1_s1_translator:uav_debugaccess
	wire    [3:0] pwm1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                           // PWM1_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> PWM1_s1_translator:uav_byteenable
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                   // PWM1_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> PWM1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                         // PWM1_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> PWM1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                                 // PWM1_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> PWM1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] pwm1_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                          // PWM1_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> PWM1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                         // PWM1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> PWM1_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                                // PWM1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> PWM1_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                      // PWM1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> PWM1_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                              // PWM1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> PWM1_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] pwm1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                       // PWM1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> PWM1_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                      // PWM1_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> PWM1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                    // PWM1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> PWM1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] pwm1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                     // PWM1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> PWM1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                    // PWM1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> PWM1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_015_src_endofpacket;                                                                                          // cmd_xbar_mux_015:src_endofpacket -> PWM1_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_015_src_valid;                                                                                                // cmd_xbar_mux_015:src_valid -> PWM1_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_015_src_startofpacket;                                                                                        // cmd_xbar_mux_015:src_startofpacket -> PWM1_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_015_src_data;                                                                                                 // cmd_xbar_mux_015:src_data -> PWM1_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_015_src_channel;                                                                                              // cmd_xbar_mux_015:src_channel -> PWM1_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_015_src_ready;                                                                                                // PWM1_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_015:src_ready
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                          // PWM2_s1_translator:uav_waitrequest -> PWM2_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] pwm2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                           // PWM2_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> PWM2_s1_translator:uav_burstcount
	wire   [31:0] pwm2_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                            // PWM2_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> PWM2_s1_translator:uav_writedata
	wire   [26:0] pwm2_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                              // PWM2_s1_translator_avalon_universal_slave_0_agent:m0_address -> PWM2_s1_translator:uav_address
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                                // PWM2_s1_translator_avalon_universal_slave_0_agent:m0_write -> PWM2_s1_translator:uav_write
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                                 // PWM2_s1_translator_avalon_universal_slave_0_agent:m0_lock -> PWM2_s1_translator:uav_lock
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                                 // PWM2_s1_translator_avalon_universal_slave_0_agent:m0_read -> PWM2_s1_translator:uav_read
	wire   [31:0] pwm2_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                             // PWM2_s1_translator:uav_readdata -> PWM2_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                        // PWM2_s1_translator:uav_readdatavalid -> PWM2_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                          // PWM2_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> PWM2_s1_translator:uav_debugaccess
	wire    [3:0] pwm2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                           // PWM2_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> PWM2_s1_translator:uav_byteenable
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                   // PWM2_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> PWM2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                         // PWM2_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> PWM2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                                 // PWM2_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> PWM2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] pwm2_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                          // PWM2_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> PWM2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                         // PWM2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> PWM2_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                                // PWM2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> PWM2_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                      // PWM2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> PWM2_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                              // PWM2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> PWM2_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] pwm2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                       // PWM2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> PWM2_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                      // PWM2_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> PWM2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                    // PWM2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> PWM2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] pwm2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                     // PWM2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> PWM2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                    // PWM2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> PWM2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_016_src_endofpacket;                                                                                          // cmd_xbar_mux_016:src_endofpacket -> PWM2_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_016_src_valid;                                                                                                // cmd_xbar_mux_016:src_valid -> PWM2_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_016_src_startofpacket;                                                                                        // cmd_xbar_mux_016:src_startofpacket -> PWM2_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_016_src_data;                                                                                                 // cmd_xbar_mux_016:src_data -> PWM2_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_016_src_channel;                                                                                              // cmd_xbar_mux_016:src_channel -> PWM2_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_016_src_ready;                                                                                                // PWM2_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_016:src_ready
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                      // CTRL_I2C_s1_translator:uav_waitrequest -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                       // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> CTRL_I2C_s1_translator:uav_burstcount
	wire   [31:0] ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                        // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> CTRL_I2C_s1_translator:uav_writedata
	wire   [26:0] ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                          // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:m0_address -> CTRL_I2C_s1_translator:uav_address
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                            // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:m0_write -> CTRL_I2C_s1_translator:uav_write
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                             // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:m0_lock -> CTRL_I2C_s1_translator:uav_lock
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                             // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:m0_read -> CTRL_I2C_s1_translator:uav_read
	wire   [31:0] ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                         // CTRL_I2C_s1_translator:uav_readdata -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                    // CTRL_I2C_s1_translator:uav_readdatavalid -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                      // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> CTRL_I2C_s1_translator:uav_debugaccess
	wire    [3:0] ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                       // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> CTRL_I2C_s1_translator:uav_byteenable
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                               // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                     // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                             // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                      // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                     // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                            // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                  // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                          // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                   // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                  // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                 // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_017_src_endofpacket;                                                                                          // cmd_xbar_mux_017:src_endofpacket -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_017_src_valid;                                                                                                // cmd_xbar_mux_017:src_valid -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_017_src_startofpacket;                                                                                        // cmd_xbar_mux_017:src_startofpacket -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_017_src_data;                                                                                                 // cmd_xbar_mux_017:src_data -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_017_src_channel;                                                                                              // cmd_xbar_mux_017:src_channel -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_017_src_ready;                                                                                                // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_017:src_ready
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                  // DATA_OUT_I2C_s1_translator:uav_waitrequest -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                   // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> DATA_OUT_I2C_s1_translator:uav_burstcount
	wire   [31:0] data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                    // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> DATA_OUT_I2C_s1_translator:uav_writedata
	wire   [26:0] data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                      // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:m0_address -> DATA_OUT_I2C_s1_translator:uav_address
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                        // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:m0_write -> DATA_OUT_I2C_s1_translator:uav_write
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                         // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:m0_lock -> DATA_OUT_I2C_s1_translator:uav_lock
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                         // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:m0_read -> DATA_OUT_I2C_s1_translator:uav_read
	wire   [31:0] data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                     // DATA_OUT_I2C_s1_translator:uav_readdata -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                // DATA_OUT_I2C_s1_translator:uav_readdatavalid -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                  // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> DATA_OUT_I2C_s1_translator:uav_debugaccess
	wire    [3:0] data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                   // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> DATA_OUT_I2C_s1_translator:uav_byteenable
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                           // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                 // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                         // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                  // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                 // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                        // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                              // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                      // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                               // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                              // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                            // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                             // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                            // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_018_src_endofpacket;                                                                                          // cmd_xbar_mux_018:src_endofpacket -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_018_src_valid;                                                                                                // cmd_xbar_mux_018:src_valid -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_018_src_startofpacket;                                                                                        // cmd_xbar_mux_018:src_startofpacket -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_018_src_data;                                                                                                 // cmd_xbar_mux_018:src_data -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_018_src_channel;                                                                                              // cmd_xbar_mux_018:src_channel -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_018_src_ready;                                                                                                // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_018:src_ready
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                   // DATA_IN_I2C_s1_translator:uav_waitrequest -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                    // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> DATA_IN_I2C_s1_translator:uav_burstcount
	wire   [31:0] data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                     // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> DATA_IN_I2C_s1_translator:uav_writedata
	wire   [26:0] data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                       // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:m0_address -> DATA_IN_I2C_s1_translator:uav_address
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                         // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:m0_write -> DATA_IN_I2C_s1_translator:uav_write
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                          // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:m0_lock -> DATA_IN_I2C_s1_translator:uav_lock
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                          // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:m0_read -> DATA_IN_I2C_s1_translator:uav_read
	wire   [31:0] data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                      // DATA_IN_I2C_s1_translator:uav_readdata -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                 // DATA_IN_I2C_s1_translator:uav_readdatavalid -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                   // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> DATA_IN_I2C_s1_translator:uav_debugaccess
	wire    [3:0] data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                    // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> DATA_IN_I2C_s1_translator:uav_byteenable
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                            // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                  // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                          // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                   // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                  // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                         // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                               // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                       // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                               // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                             // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                              // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                             // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_019_src_endofpacket;                                                                                          // cmd_xbar_mux_019:src_endofpacket -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_019_src_valid;                                                                                                // cmd_xbar_mux_019:src_valid -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_019_src_startofpacket;                                                                                        // cmd_xbar_mux_019:src_startofpacket -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_019_src_data;                                                                                                 // cmd_xbar_mux_019:src_data -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_019_src_channel;                                                                                              // cmd_xbar_mux_019:src_channel -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_019_src_ready;                                                                                                // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_019:src_ready
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                      // FLAG_I2C_s1_translator:uav_waitrequest -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                       // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> FLAG_I2C_s1_translator:uav_burstcount
	wire   [31:0] flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                        // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> FLAG_I2C_s1_translator:uav_writedata
	wire   [26:0] flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                          // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:m0_address -> FLAG_I2C_s1_translator:uav_address
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                            // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:m0_write -> FLAG_I2C_s1_translator:uav_write
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                             // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:m0_lock -> FLAG_I2C_s1_translator:uav_lock
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                             // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:m0_read -> FLAG_I2C_s1_translator:uav_read
	wire   [31:0] flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                         // FLAG_I2C_s1_translator:uav_readdata -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                    // FLAG_I2C_s1_translator:uav_readdatavalid -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                      // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> FLAG_I2C_s1_translator:uav_debugaccess
	wire    [3:0] flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                       // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> FLAG_I2C_s1_translator:uav_byteenable
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                               // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                     // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                             // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] flag_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                      // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                     // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                            // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                  // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                          // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] flag_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                   // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                  // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] flag_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                 // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_020_src_endofpacket;                                                                                          // cmd_xbar_mux_020:src_endofpacket -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_020_src_valid;                                                                                                // cmd_xbar_mux_020:src_valid -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_020_src_startofpacket;                                                                                        // cmd_xbar_mux_020:src_startofpacket -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_020_src_data;                                                                                                 // cmd_xbar_mux_020:src_data -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_020_src_channel;                                                                                              // cmd_xbar_mux_020:src_channel -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_020_src_ready;                                                                                                // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_020:src_ready
	wire          gps_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                           // GPS_s1_translator:uav_waitrequest -> GPS_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] gps_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                            // GPS_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> GPS_s1_translator:uav_burstcount
	wire   [31:0] gps_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                             // GPS_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> GPS_s1_translator:uav_writedata
	wire   [26:0] gps_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                               // GPS_s1_translator_avalon_universal_slave_0_agent:m0_address -> GPS_s1_translator:uav_address
	wire          gps_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                                 // GPS_s1_translator_avalon_universal_slave_0_agent:m0_write -> GPS_s1_translator:uav_write
	wire          gps_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                                  // GPS_s1_translator_avalon_universal_slave_0_agent:m0_lock -> GPS_s1_translator:uav_lock
	wire          gps_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                                  // GPS_s1_translator_avalon_universal_slave_0_agent:m0_read -> GPS_s1_translator:uav_read
	wire   [31:0] gps_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                              // GPS_s1_translator:uav_readdata -> GPS_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          gps_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                         // GPS_s1_translator:uav_readdatavalid -> GPS_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          gps_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                           // GPS_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> GPS_s1_translator:uav_debugaccess
	wire    [3:0] gps_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                            // GPS_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> GPS_s1_translator:uav_byteenable
	wire          gps_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                    // GPS_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> GPS_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          gps_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                          // GPS_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> GPS_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          gps_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                                  // GPS_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> GPS_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] gps_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                           // GPS_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> GPS_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          gps_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                          // GPS_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> GPS_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          gps_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                                 // GPS_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> GPS_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          gps_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                       // GPS_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> GPS_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          gps_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                               // GPS_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> GPS_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] gps_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                        // GPS_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> GPS_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          gps_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                       // GPS_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> GPS_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          gps_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                     // GPS_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> GPS_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] gps_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                      // GPS_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> GPS_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          gps_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                     // GPS_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> GPS_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_021_src_endofpacket;                                                                                          // cmd_xbar_mux_021:src_endofpacket -> GPS_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_021_src_valid;                                                                                                // cmd_xbar_mux_021:src_valid -> GPS_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_021_src_startofpacket;                                                                                        // cmd_xbar_mux_021:src_startofpacket -> GPS_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_021_src_data;                                                                                                 // cmd_xbar_mux_021:src_data -> GPS_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_021_src_channel;                                                                                              // cmd_xbar_mux_021:src_channel -> GPS_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_021_src_ready;                                                                                                // GPS_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_021:src_ready
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                          // XBEE_s1_translator:uav_waitrequest -> XBEE_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] xbee_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                           // XBEE_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> XBEE_s1_translator:uav_burstcount
	wire   [31:0] xbee_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                            // XBEE_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> XBEE_s1_translator:uav_writedata
	wire   [26:0] xbee_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                              // XBEE_s1_translator_avalon_universal_slave_0_agent:m0_address -> XBEE_s1_translator:uav_address
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                                // XBEE_s1_translator_avalon_universal_slave_0_agent:m0_write -> XBEE_s1_translator:uav_write
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                                 // XBEE_s1_translator_avalon_universal_slave_0_agent:m0_lock -> XBEE_s1_translator:uav_lock
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                                 // XBEE_s1_translator_avalon_universal_slave_0_agent:m0_read -> XBEE_s1_translator:uav_read
	wire   [31:0] xbee_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                             // XBEE_s1_translator:uav_readdata -> XBEE_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                        // XBEE_s1_translator:uav_readdatavalid -> XBEE_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                          // XBEE_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> XBEE_s1_translator:uav_debugaccess
	wire    [3:0] xbee_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                           // XBEE_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> XBEE_s1_translator:uav_byteenable
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                   // XBEE_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> XBEE_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                         // XBEE_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> XBEE_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                                 // XBEE_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> XBEE_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] xbee_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                          // XBEE_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> XBEE_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                         // XBEE_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> XBEE_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                                // XBEE_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> XBEE_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                      // XBEE_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> XBEE_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                              // XBEE_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> XBEE_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] xbee_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                       // XBEE_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> XBEE_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                      // XBEE_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> XBEE_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                    // XBEE_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> XBEE_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] xbee_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                     // XBEE_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> XBEE_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                    // XBEE_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> XBEE_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_022_src_endofpacket;                                                                                          // cmd_xbar_mux_022:src_endofpacket -> XBEE_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_022_src_valid;                                                                                                // cmd_xbar_mux_022:src_valid -> XBEE_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_022_src_startofpacket;                                                                                        // cmd_xbar_mux_022:src_startofpacket -> XBEE_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_022_src_data;                                                                                                 // cmd_xbar_mux_022:src_data -> XBEE_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_022_src_channel;                                                                                              // cmd_xbar_mux_022:src_channel -> XBEE_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_022_src_ready;                                                                                                // XBEE_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_022:src_ready
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                         // DIST1_s1_translator:uav_waitrequest -> DIST1_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] dist1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                          // DIST1_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> DIST1_s1_translator:uav_burstcount
	wire   [31:0] dist1_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                           // DIST1_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> DIST1_s1_translator:uav_writedata
	wire   [26:0] dist1_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                             // DIST1_s1_translator_avalon_universal_slave_0_agent:m0_address -> DIST1_s1_translator:uav_address
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                               // DIST1_s1_translator_avalon_universal_slave_0_agent:m0_write -> DIST1_s1_translator:uav_write
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                                // DIST1_s1_translator_avalon_universal_slave_0_agent:m0_lock -> DIST1_s1_translator:uav_lock
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                                // DIST1_s1_translator_avalon_universal_slave_0_agent:m0_read -> DIST1_s1_translator:uav_read
	wire   [31:0] dist1_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                            // DIST1_s1_translator:uav_readdata -> DIST1_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                       // DIST1_s1_translator:uav_readdatavalid -> DIST1_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                         // DIST1_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> DIST1_s1_translator:uav_debugaccess
	wire    [3:0] dist1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                          // DIST1_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> DIST1_s1_translator:uav_byteenable
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                  // DIST1_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> DIST1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                        // DIST1_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> DIST1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                                // DIST1_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> DIST1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] dist1_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                         // DIST1_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> DIST1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                        // DIST1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> DIST1_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                               // DIST1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> DIST1_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                     // DIST1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> DIST1_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                             // DIST1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> DIST1_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] dist1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                      // DIST1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> DIST1_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                     // DIST1_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> DIST1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                   // DIST1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> DIST1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] dist1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                    // DIST1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> DIST1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                   // DIST1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> DIST1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_023_src_endofpacket;                                                                                          // cmd_xbar_mux_023:src_endofpacket -> DIST1_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_023_src_valid;                                                                                                // cmd_xbar_mux_023:src_valid -> DIST1_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_023_src_startofpacket;                                                                                        // cmd_xbar_mux_023:src_startofpacket -> DIST1_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_023_src_data;                                                                                                 // cmd_xbar_mux_023:src_data -> DIST1_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_023_src_channel;                                                                                              // cmd_xbar_mux_023:src_channel -> DIST1_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_023_src_ready;                                                                                                // DIST1_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_023:src_ready
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                         // DIST2_s1_translator:uav_waitrequest -> DIST2_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] dist2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                          // DIST2_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> DIST2_s1_translator:uav_burstcount
	wire   [31:0] dist2_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                           // DIST2_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> DIST2_s1_translator:uav_writedata
	wire   [26:0] dist2_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                             // DIST2_s1_translator_avalon_universal_slave_0_agent:m0_address -> DIST2_s1_translator:uav_address
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                               // DIST2_s1_translator_avalon_universal_slave_0_agent:m0_write -> DIST2_s1_translator:uav_write
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                                // DIST2_s1_translator_avalon_universal_slave_0_agent:m0_lock -> DIST2_s1_translator:uav_lock
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                                // DIST2_s1_translator_avalon_universal_slave_0_agent:m0_read -> DIST2_s1_translator:uav_read
	wire   [31:0] dist2_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                            // DIST2_s1_translator:uav_readdata -> DIST2_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                       // DIST2_s1_translator:uav_readdatavalid -> DIST2_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                         // DIST2_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> DIST2_s1_translator:uav_debugaccess
	wire    [3:0] dist2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                          // DIST2_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> DIST2_s1_translator:uav_byteenable
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                  // DIST2_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> DIST2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                        // DIST2_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> DIST2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                                // DIST2_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> DIST2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] dist2_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                         // DIST2_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> DIST2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                        // DIST2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> DIST2_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                               // DIST2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> DIST2_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                     // DIST2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> DIST2_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                             // DIST2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> DIST2_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] dist2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                      // DIST2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> DIST2_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                     // DIST2_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> DIST2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                   // DIST2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> DIST2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] dist2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                    // DIST2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> DIST2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                   // DIST2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> DIST2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_024_src_endofpacket;                                                                                          // cmd_xbar_mux_024:src_endofpacket -> DIST2_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_024_src_valid;                                                                                                // cmd_xbar_mux_024:src_valid -> DIST2_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_024_src_startofpacket;                                                                                        // cmd_xbar_mux_024:src_startofpacket -> DIST2_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_024_src_data;                                                                                                 // cmd_xbar_mux_024:src_data -> DIST2_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_024_src_channel;                                                                                              // cmd_xbar_mux_024:src_channel -> DIST2_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_024_src_ready;                                                                                                // DIST2_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_024:src_ready
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                         // DIST3_s1_translator:uav_waitrequest -> DIST3_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] dist3_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                          // DIST3_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> DIST3_s1_translator:uav_burstcount
	wire   [31:0] dist3_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                           // DIST3_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> DIST3_s1_translator:uav_writedata
	wire   [26:0] dist3_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                             // DIST3_s1_translator_avalon_universal_slave_0_agent:m0_address -> DIST3_s1_translator:uav_address
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                               // DIST3_s1_translator_avalon_universal_slave_0_agent:m0_write -> DIST3_s1_translator:uav_write
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                                // DIST3_s1_translator_avalon_universal_slave_0_agent:m0_lock -> DIST3_s1_translator:uav_lock
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                                // DIST3_s1_translator_avalon_universal_slave_0_agent:m0_read -> DIST3_s1_translator:uav_read
	wire   [31:0] dist3_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                            // DIST3_s1_translator:uav_readdata -> DIST3_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                       // DIST3_s1_translator:uav_readdatavalid -> DIST3_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                         // DIST3_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> DIST3_s1_translator:uav_debugaccess
	wire    [3:0] dist3_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                          // DIST3_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> DIST3_s1_translator:uav_byteenable
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                  // DIST3_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> DIST3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                        // DIST3_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> DIST3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                                // DIST3_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> DIST3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] dist3_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                         // DIST3_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> DIST3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                        // DIST3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> DIST3_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                               // DIST3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> DIST3_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                     // DIST3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> DIST3_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                             // DIST3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> DIST3_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] dist3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                      // DIST3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> DIST3_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                     // DIST3_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> DIST3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                   // DIST3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> DIST3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] dist3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                    // DIST3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> DIST3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                   // DIST3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> DIST3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_025_src_endofpacket;                                                                                          // cmd_xbar_mux_025:src_endofpacket -> DIST3_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_025_src_valid;                                                                                                // cmd_xbar_mux_025:src_valid -> DIST3_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_025_src_startofpacket;                                                                                        // cmd_xbar_mux_025:src_startofpacket -> DIST3_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_025_src_data;                                                                                                 // cmd_xbar_mux_025:src_data -> DIST3_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_025_src_channel;                                                                                              // cmd_xbar_mux_025:src_channel -> DIST3_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_025_src_ready;                                                                                                // DIST3_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_025:src_ready
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                         // DIST4_s1_translator:uav_waitrequest -> DIST4_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] dist4_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                          // DIST4_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> DIST4_s1_translator:uav_burstcount
	wire   [31:0] dist4_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                           // DIST4_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> DIST4_s1_translator:uav_writedata
	wire   [26:0] dist4_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                             // DIST4_s1_translator_avalon_universal_slave_0_agent:m0_address -> DIST4_s1_translator:uav_address
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                               // DIST4_s1_translator_avalon_universal_slave_0_agent:m0_write -> DIST4_s1_translator:uav_write
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                                // DIST4_s1_translator_avalon_universal_slave_0_agent:m0_lock -> DIST4_s1_translator:uav_lock
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                                // DIST4_s1_translator_avalon_universal_slave_0_agent:m0_read -> DIST4_s1_translator:uav_read
	wire   [31:0] dist4_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                            // DIST4_s1_translator:uav_readdata -> DIST4_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                       // DIST4_s1_translator:uav_readdatavalid -> DIST4_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                         // DIST4_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> DIST4_s1_translator:uav_debugaccess
	wire    [3:0] dist4_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                          // DIST4_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> DIST4_s1_translator:uav_byteenable
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                  // DIST4_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> DIST4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                        // DIST4_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> DIST4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                                // DIST4_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> DIST4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] dist4_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                         // DIST4_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> DIST4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                        // DIST4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> DIST4_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                               // DIST4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> DIST4_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                     // DIST4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> DIST4_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                             // DIST4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> DIST4_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] dist4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                      // DIST4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> DIST4_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                     // DIST4_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> DIST4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                   // DIST4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> DIST4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] dist4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                    // DIST4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> DIST4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                   // DIST4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> DIST4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_026_src_endofpacket;                                                                                          // cmd_xbar_mux_026:src_endofpacket -> DIST4_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_026_src_valid;                                                                                                // cmd_xbar_mux_026:src_valid -> DIST4_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_026_src_startofpacket;                                                                                        // cmd_xbar_mux_026:src_startofpacket -> DIST4_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_026_src_data;                                                                                                 // cmd_xbar_mux_026:src_data -> DIST4_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_026_src_channel;                                                                                              // cmd_xbar_mux_026:src_channel -> DIST4_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_026_src_ready;                                                                                                // DIST4_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_026:src_ready
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                         // DIST5_s1_translator:uav_waitrequest -> DIST5_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] dist5_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                          // DIST5_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> DIST5_s1_translator:uav_burstcount
	wire   [31:0] dist5_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                           // DIST5_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> DIST5_s1_translator:uav_writedata
	wire   [26:0] dist5_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                             // DIST5_s1_translator_avalon_universal_slave_0_agent:m0_address -> DIST5_s1_translator:uav_address
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                               // DIST5_s1_translator_avalon_universal_slave_0_agent:m0_write -> DIST5_s1_translator:uav_write
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                                // DIST5_s1_translator_avalon_universal_slave_0_agent:m0_lock -> DIST5_s1_translator:uav_lock
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                                // DIST5_s1_translator_avalon_universal_slave_0_agent:m0_read -> DIST5_s1_translator:uav_read
	wire   [31:0] dist5_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                            // DIST5_s1_translator:uav_readdata -> DIST5_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                       // DIST5_s1_translator:uav_readdatavalid -> DIST5_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                         // DIST5_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> DIST5_s1_translator:uav_debugaccess
	wire    [3:0] dist5_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                          // DIST5_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> DIST5_s1_translator:uav_byteenable
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                  // DIST5_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> DIST5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                        // DIST5_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> DIST5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                                // DIST5_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> DIST5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] dist5_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                         // DIST5_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> DIST5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                        // DIST5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> DIST5_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                               // DIST5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> DIST5_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                     // DIST5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> DIST5_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                             // DIST5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> DIST5_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] dist5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                      // DIST5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> DIST5_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                     // DIST5_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> DIST5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                   // DIST5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> DIST5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] dist5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                    // DIST5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> DIST5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                   // DIST5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> DIST5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_027_src_endofpacket;                                                                                          // cmd_xbar_mux_027:src_endofpacket -> DIST5_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_027_src_valid;                                                                                                // cmd_xbar_mux_027:src_valid -> DIST5_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_027_src_startofpacket;                                                                                        // cmd_xbar_mux_027:src_startofpacket -> DIST5_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_027_src_data;                                                                                                 // cmd_xbar_mux_027:src_data -> DIST5_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_027_src_channel;                                                                                              // cmd_xbar_mux_027:src_channel -> DIST5_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_027_src_ready;                                                                                                // DIST5_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_027:src_ready
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                         // DIST6_s1_translator:uav_waitrequest -> DIST6_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] dist6_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                          // DIST6_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> DIST6_s1_translator:uav_burstcount
	wire   [31:0] dist6_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                           // DIST6_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> DIST6_s1_translator:uav_writedata
	wire   [26:0] dist6_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                             // DIST6_s1_translator_avalon_universal_slave_0_agent:m0_address -> DIST6_s1_translator:uav_address
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                               // DIST6_s1_translator_avalon_universal_slave_0_agent:m0_write -> DIST6_s1_translator:uav_write
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                                // DIST6_s1_translator_avalon_universal_slave_0_agent:m0_lock -> DIST6_s1_translator:uav_lock
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                                // DIST6_s1_translator_avalon_universal_slave_0_agent:m0_read -> DIST6_s1_translator:uav_read
	wire   [31:0] dist6_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                            // DIST6_s1_translator:uav_readdata -> DIST6_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                       // DIST6_s1_translator:uav_readdatavalid -> DIST6_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                         // DIST6_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> DIST6_s1_translator:uav_debugaccess
	wire    [3:0] dist6_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                          // DIST6_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> DIST6_s1_translator:uav_byteenable
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                  // DIST6_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> DIST6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                        // DIST6_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> DIST6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                                // DIST6_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> DIST6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] dist6_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                         // DIST6_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> DIST6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                        // DIST6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> DIST6_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                               // DIST6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> DIST6_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                     // DIST6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> DIST6_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                             // DIST6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> DIST6_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] dist6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                      // DIST6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> DIST6_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                     // DIST6_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> DIST6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                   // DIST6_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> DIST6_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] dist6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                    // DIST6_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> DIST6_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                   // DIST6_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> DIST6_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_028_src_endofpacket;                                                                                          // cmd_xbar_mux_028:src_endofpacket -> DIST6_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_028_src_valid;                                                                                                // cmd_xbar_mux_028:src_valid -> DIST6_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_028_src_startofpacket;                                                                                        // cmd_xbar_mux_028:src_startofpacket -> DIST6_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_028_src_data;                                                                                                 // cmd_xbar_mux_028:src_data -> DIST6_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_028_src_channel;                                                                                              // cmd_xbar_mux_028:src_channel -> DIST6_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_028_src_ready;                                                                                                // DIST6_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_028:src_ready
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                         // DIST7_s1_translator:uav_waitrequest -> DIST7_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] dist7_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                          // DIST7_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> DIST7_s1_translator:uav_burstcount
	wire   [31:0] dist7_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                           // DIST7_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> DIST7_s1_translator:uav_writedata
	wire   [26:0] dist7_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                             // DIST7_s1_translator_avalon_universal_slave_0_agent:m0_address -> DIST7_s1_translator:uav_address
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                               // DIST7_s1_translator_avalon_universal_slave_0_agent:m0_write -> DIST7_s1_translator:uav_write
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                                // DIST7_s1_translator_avalon_universal_slave_0_agent:m0_lock -> DIST7_s1_translator:uav_lock
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                                // DIST7_s1_translator_avalon_universal_slave_0_agent:m0_read -> DIST7_s1_translator:uav_read
	wire   [31:0] dist7_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                            // DIST7_s1_translator:uav_readdata -> DIST7_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                       // DIST7_s1_translator:uav_readdatavalid -> DIST7_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                         // DIST7_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> DIST7_s1_translator:uav_debugaccess
	wire    [3:0] dist7_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                          // DIST7_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> DIST7_s1_translator:uav_byteenable
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                  // DIST7_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> DIST7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                        // DIST7_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> DIST7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                                // DIST7_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> DIST7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] dist7_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                         // DIST7_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> DIST7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                        // DIST7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> DIST7_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                               // DIST7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> DIST7_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                     // DIST7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> DIST7_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                             // DIST7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> DIST7_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] dist7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                      // DIST7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> DIST7_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                     // DIST7_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> DIST7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                   // DIST7_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> DIST7_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] dist7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                    // DIST7_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> DIST7_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                   // DIST7_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> DIST7_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_029_src_endofpacket;                                                                                          // cmd_xbar_mux_029:src_endofpacket -> DIST7_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_029_src_valid;                                                                                                // cmd_xbar_mux_029:src_valid -> DIST7_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_029_src_startofpacket;                                                                                        // cmd_xbar_mux_029:src_startofpacket -> DIST7_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_029_src_data;                                                                                                 // cmd_xbar_mux_029:src_data -> DIST7_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_029_src_channel;                                                                                              // cmd_xbar_mux_029:src_channel -> DIST7_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_029_src_ready;                                                                                                // DIST7_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_029:src_ready
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                                         // DIST8_s1_translator:uav_waitrequest -> DIST8_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] dist8_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                                          // DIST8_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> DIST8_s1_translator:uav_burstcount
	wire   [31:0] dist8_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                                           // DIST8_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> DIST8_s1_translator:uav_writedata
	wire   [26:0] dist8_s1_translator_avalon_universal_slave_0_agent_m0_address;                                                             // DIST8_s1_translator_avalon_universal_slave_0_agent:m0_address -> DIST8_s1_translator:uav_address
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_m0_write;                                                               // DIST8_s1_translator_avalon_universal_slave_0_agent:m0_write -> DIST8_s1_translator:uav_write
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                                                // DIST8_s1_translator_avalon_universal_slave_0_agent:m0_lock -> DIST8_s1_translator:uav_lock
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_m0_read;                                                                // DIST8_s1_translator_avalon_universal_slave_0_agent:m0_read -> DIST8_s1_translator:uav_read
	wire   [31:0] dist8_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                                            // DIST8_s1_translator:uav_readdata -> DIST8_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                                       // DIST8_s1_translator:uav_readdatavalid -> DIST8_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                                         // DIST8_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> DIST8_s1_translator:uav_debugaccess
	wire    [3:0] dist8_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                                          // DIST8_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> DIST8_s1_translator:uav_byteenable
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                                                  // DIST8_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> DIST8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                                        // DIST8_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> DIST8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                                                // DIST8_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> DIST8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [107:0] dist8_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                                         // DIST8_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> DIST8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                                        // DIST8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> DIST8_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                                               // DIST8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> DIST8_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                                                     // DIST8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> DIST8_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                                             // DIST8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> DIST8_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [107:0] dist8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                                      // DIST8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> DIST8_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                                                     // DIST8_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> DIST8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                                                   // DIST8_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> DIST8_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] dist8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                                                    // DIST8_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> DIST8_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                                                   // DIST8_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> DIST8_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_030_src_endofpacket;                                                                                          // cmd_xbar_mux_030:src_endofpacket -> DIST8_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_030_src_valid;                                                                                                // cmd_xbar_mux_030:src_valid -> DIST8_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_030_src_startofpacket;                                                                                        // cmd_xbar_mux_030:src_startofpacket -> DIST8_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [106:0] cmd_xbar_mux_030_src_data;                                                                                                 // cmd_xbar_mux_030:src_data -> DIST8_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire   [30:0] cmd_xbar_mux_030_src_channel;                                                                                              // cmd_xbar_mux_030:src_channel -> DIST8_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_030_src_ready;                                                                                                // DIST8_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_030:src_ready
	wire          cpu_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket;                                          // CPU_instruction_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router:sink_endofpacket
	wire          cpu_instruction_master_translator_avalon_universal_master_0_agent_cp_valid;                                                // CPU_instruction_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router:sink_valid
	wire          cpu_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket;                                        // CPU_instruction_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router:sink_startofpacket
	wire  [106:0] cpu_instruction_master_translator_avalon_universal_master_0_agent_cp_data;                                                 // CPU_instruction_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router:sink_data
	wire          cpu_instruction_master_translator_avalon_universal_master_0_agent_cp_ready;                                                // addr_router:sink_ready -> CPU_instruction_master_translator_avalon_universal_master_0_agent:cp_ready
	wire          cpu_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket;                                                 // CPU_data_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router_001:sink_endofpacket
	wire          cpu_data_master_translator_avalon_universal_master_0_agent_cp_valid;                                                       // CPU_data_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router_001:sink_valid
	wire          cpu_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket;                                               // CPU_data_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router_001:sink_startofpacket
	wire  [106:0] cpu_data_master_translator_avalon_universal_master_0_agent_cp_data;                                                        // CPU_data_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router_001:sink_data
	wire          cpu_data_master_translator_avalon_universal_master_0_agent_cp_ready;                                                       // addr_router_001:sink_ready -> CPU_data_master_translator_avalon_universal_master_0_agent:cp_ready
	wire          addr_router_001_src_endofpacket;                                                                                           // addr_router_001:src_endofpacket -> cmd_xbar_demux_001:sink_endofpacket
	wire          addr_router_001_src_valid;                                                                                                 // addr_router_001:src_valid -> cmd_xbar_demux_001:sink_valid
	wire          addr_router_001_src_startofpacket;                                                                                         // addr_router_001:src_startofpacket -> cmd_xbar_demux_001:sink_startofpacket
	wire  [106:0] addr_router_001_src_data;                                                                                                  // addr_router_001:src_data -> cmd_xbar_demux_001:sink_data
	wire   [30:0] addr_router_001_src_channel;                                                                                               // addr_router_001:src_channel -> cmd_xbar_demux_001:sink_channel
	wire          addr_router_001_src_ready;                                                                                                 // cmd_xbar_demux_001:sink_ready -> addr_router_001:src_ready
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                            // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router:sink_endofpacket
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid;                                                  // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_valid -> id_router:sink_valid
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                          // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router:sink_startofpacket
	wire  [106:0] cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data;                                                   // CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_data -> id_router:sink_data
	wire          cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready;                                                  // id_router:sink_ready -> CPU_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_src_endofpacket;                                                                                                 // id_router:src_endofpacket -> rsp_xbar_demux:sink_endofpacket
	wire          id_router_src_valid;                                                                                                       // id_router:src_valid -> rsp_xbar_demux:sink_valid
	wire          id_router_src_startofpacket;                                                                                               // id_router:src_startofpacket -> rsp_xbar_demux:sink_startofpacket
	wire  [106:0] id_router_src_data;                                                                                                        // id_router:src_data -> rsp_xbar_demux:sink_data
	wire   [30:0] id_router_src_channel;                                                                                                     // id_router:src_channel -> rsp_xbar_demux:sink_channel
	wire          id_router_src_ready;                                                                                                       // rsp_xbar_demux:sink_ready -> id_router:src_ready
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                         // SDRAM_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_001:sink_endofpacket
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                               // SDRAM_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_001:sink_valid
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                       // SDRAM_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_001:sink_startofpacket
	wire   [88:0] sdram_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                                // SDRAM_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_001:sink_data
	wire          sdram_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                               // id_router_001:sink_ready -> SDRAM_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                           // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_002:sink_endofpacket
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rp_valid;                                                 // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_002:sink_valid
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                         // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_002:sink_startofpacket
	wire  [106:0] epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rp_data;                                                  // EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rp_data -> id_router_002:sink_data
	wire          epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rp_ready;                                                 // id_router_002:sink_ready -> EPCS_epcs_control_port_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_002_src_endofpacket;                                                                                             // id_router_002:src_endofpacket -> rsp_xbar_demux_002:sink_endofpacket
	wire          id_router_002_src_valid;                                                                                                   // id_router_002:src_valid -> rsp_xbar_demux_002:sink_valid
	wire          id_router_002_src_startofpacket;                                                                                           // id_router_002:src_startofpacket -> rsp_xbar_demux_002:sink_startofpacket
	wire  [106:0] id_router_002_src_data;                                                                                                    // id_router_002:src_data -> rsp_xbar_demux_002:sink_data
	wire   [30:0] id_router_002_src_channel;                                                                                                 // id_router_002:src_channel -> rsp_xbar_demux_002:sink_channel
	wire          id_router_002_src_ready;                                                                                                   // rsp_xbar_demux_002:sink_ready -> id_router_002:src_ready
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                             // sys_id_control_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_003:sink_endofpacket
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_rp_valid;                                                   // sys_id_control_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_003:sink_valid
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                           // sys_id_control_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_003:sink_startofpacket
	wire  [106:0] sys_id_control_slave_translator_avalon_universal_slave_0_agent_rp_data;                                                    // sys_id_control_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_003:sink_data
	wire          sys_id_control_slave_translator_avalon_universal_slave_0_agent_rp_ready;                                                   // id_router_003:sink_ready -> sys_id_control_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_003_src_endofpacket;                                                                                             // id_router_003:src_endofpacket -> rsp_xbar_demux_003:sink_endofpacket
	wire          id_router_003_src_valid;                                                                                                   // id_router_003:src_valid -> rsp_xbar_demux_003:sink_valid
	wire          id_router_003_src_startofpacket;                                                                                           // id_router_003:src_startofpacket -> rsp_xbar_demux_003:sink_startofpacket
	wire  [106:0] id_router_003_src_data;                                                                                                    // id_router_003:src_data -> rsp_xbar_demux_003:sink_data
	wire   [30:0] id_router_003_src_channel;                                                                                                 // id_router_003:src_channel -> rsp_xbar_demux_003:sink_channel
	wire          id_router_003_src_ready;                                                                                                   // rsp_xbar_demux_003:sink_ready -> id_router_003:src_ready
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                     // sys_timer_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_004:sink_endofpacket
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                           // sys_timer_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_004:sink_valid
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                   // sys_timer_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_004:sink_startofpacket
	wire  [106:0] sys_timer_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                            // sys_timer_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_004:sink_data
	wire          sys_timer_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                           // id_router_004:sink_ready -> sys_timer_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_004_src_endofpacket;                                                                                             // id_router_004:src_endofpacket -> rsp_xbar_demux_004:sink_endofpacket
	wire          id_router_004_src_valid;                                                                                                   // id_router_004:src_valid -> rsp_xbar_demux_004:sink_valid
	wire          id_router_004_src_startofpacket;                                                                                           // id_router_004:src_startofpacket -> rsp_xbar_demux_004:sink_startofpacket
	wire  [106:0] id_router_004_src_data;                                                                                                    // id_router_004:src_data -> rsp_xbar_demux_004:sink_data
	wire   [30:0] id_router_004_src_channel;                                                                                                 // id_router_004:src_channel -> rsp_xbar_demux_004:sink_channel
	wire          id_router_004_src_ready;                                                                                                   // rsp_xbar_demux_004:sink_ready -> id_router_004:src_ready
	wire          led_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                           // LED_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_005:sink_endofpacket
	wire          led_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                                 // LED_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_005:sink_valid
	wire          led_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                         // LED_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_005:sink_startofpacket
	wire  [106:0] led_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                                  // LED_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_005:sink_data
	wire          led_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                                 // id_router_005:sink_ready -> LED_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_005_src_endofpacket;                                                                                             // id_router_005:src_endofpacket -> rsp_xbar_demux_005:sink_endofpacket
	wire          id_router_005_src_valid;                                                                                                   // id_router_005:src_valid -> rsp_xbar_demux_005:sink_valid
	wire          id_router_005_src_startofpacket;                                                                                           // id_router_005:src_startofpacket -> rsp_xbar_demux_005:sink_startofpacket
	wire  [106:0] id_router_005_src_data;                                                                                                    // id_router_005:src_data -> rsp_xbar_demux_005:sink_data
	wire   [30:0] id_router_005_src_channel;                                                                                                 // id_router_005:src_channel -> rsp_xbar_demux_005:sink_channel
	wire          id_router_005_src_ready;                                                                                                   // rsp_xbar_demux_005:sink_ready -> id_router_005:src_ready
	wire          sw_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                            // SW_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_006:sink_endofpacket
	wire          sw_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                                  // SW_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_006:sink_valid
	wire          sw_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                          // SW_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_006:sink_startofpacket
	wire  [106:0] sw_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                                   // SW_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_006:sink_data
	wire          sw_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                                  // id_router_006:sink_ready -> SW_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_006_src_endofpacket;                                                                                             // id_router_006:src_endofpacket -> rsp_xbar_demux_006:sink_endofpacket
	wire          id_router_006_src_valid;                                                                                                   // id_router_006:src_valid -> rsp_xbar_demux_006:sink_valid
	wire          id_router_006_src_startofpacket;                                                                                           // id_router_006:src_startofpacket -> rsp_xbar_demux_006:sink_startofpacket
	wire  [106:0] id_router_006_src_data;                                                                                                    // id_router_006:src_data -> rsp_xbar_demux_006:sink_data
	wire   [30:0] id_router_006_src_channel;                                                                                                 // id_router_006:src_channel -> rsp_xbar_demux_006:sink_channel
	wire          id_router_006_src_ready;                                                                                                   // rsp_xbar_demux_006:sink_ready -> id_router_006:src_ready
	wire          key_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                           // KEY_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_007:sink_endofpacket
	wire          key_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                                 // KEY_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_007:sink_valid
	wire          key_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                         // KEY_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_007:sink_startofpacket
	wire  [106:0] key_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                                  // KEY_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_007:sink_data
	wire          key_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                                 // id_router_007:sink_ready -> KEY_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_007_src_endofpacket;                                                                                             // id_router_007:src_endofpacket -> rsp_xbar_demux_007:sink_endofpacket
	wire          id_router_007_src_valid;                                                                                                   // id_router_007:src_valid -> rsp_xbar_demux_007:sink_valid
	wire          id_router_007_src_startofpacket;                                                                                           // id_router_007:src_startofpacket -> rsp_xbar_demux_007:sink_startofpacket
	wire  [106:0] id_router_007_src_data;                                                                                                    // id_router_007:src_data -> rsp_xbar_demux_007:sink_data
	wire   [30:0] id_router_007_src_channel;                                                                                                 // id_router_007:src_channel -> rsp_xbar_demux_007:sink_channel
	wire          id_router_007_src_ready;                                                                                                   // rsp_xbar_demux_007:sink_ready -> id_router_007:src_ready
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                           // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_008:sink_endofpacket
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid;                                                 // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_008:sink_valid
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                         // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_008:sink_startofpacket
	wire  [106:0] jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data;                                                  // JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_008:sink_data
	wire          jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready;                                                 // id_router_008:sink_ready -> JTAG_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_008_src_endofpacket;                                                                                             // id_router_008:src_endofpacket -> rsp_xbar_demux_008:sink_endofpacket
	wire          id_router_008_src_valid;                                                                                                   // id_router_008:src_valid -> rsp_xbar_demux_008:sink_valid
	wire          id_router_008_src_startofpacket;                                                                                           // id_router_008:src_startofpacket -> rsp_xbar_demux_008:sink_startofpacket
	wire  [106:0] id_router_008_src_data;                                                                                                    // id_router_008:src_data -> rsp_xbar_demux_008:sink_data
	wire   [30:0] id_router_008_src_channel;                                                                                                 // id_router_008:src_channel -> rsp_xbar_demux_008:sink_channel
	wire          id_router_008_src_ready;                                                                                                   // rsp_xbar_demux_008:sink_ready -> id_router_008:src_ready
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_009:sink_endofpacket
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_valid;                                                      // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_009:sink_valid
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                              // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_009:sink_startofpacket
	wire  [106:0] sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_data;                                                       // sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_009:sink_data
	wire          sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_ready;                                                      // id_router_009:sink_ready -> sys_pll_pll_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_009_src_endofpacket;                                                                                             // id_router_009:src_endofpacket -> rsp_xbar_demux_009:sink_endofpacket
	wire          id_router_009_src_valid;                                                                                                   // id_router_009:src_valid -> rsp_xbar_demux_009:sink_valid
	wire          id_router_009_src_startofpacket;                                                                                           // id_router_009:src_startofpacket -> rsp_xbar_demux_009:sink_startofpacket
	wire  [106:0] id_router_009_src_data;                                                                                                    // id_router_009:src_data -> rsp_xbar_demux_009:sink_data
	wire   [30:0] id_router_009_src_channel;                                                                                                 // id_router_009:src_channel -> rsp_xbar_demux_009:sink_channel
	wire          id_router_009_src_ready;                                                                                                   // rsp_xbar_demux_009:sink_ready -> id_router_009:src_ready
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;             // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_010:sink_endofpacket
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rp_valid;                   // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_010:sink_valid
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;           // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_010:sink_startofpacket
	wire   [79:0] acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rp_data;                    // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_010:sink_data
	wire          acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rp_ready;                   // id_router_010:sink_ready -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_011:sink_endofpacket
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rp_valid;                                                      // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_011:sink_valid
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                              // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_011:sink_startofpacket
	wire  [106:0] adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rp_data;                                                       // ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_011:sink_data
	wire          adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rp_ready;                                                      // id_router_011:sink_ready -> ADC_DE0_adc_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_011_src_endofpacket;                                                                                             // id_router_011:src_endofpacket -> rsp_xbar_demux_011:sink_endofpacket
	wire          id_router_011_src_valid;                                                                                                   // id_router_011:src_valid -> rsp_xbar_demux_011:sink_valid
	wire          id_router_011_src_startofpacket;                                                                                           // id_router_011:src_startofpacket -> rsp_xbar_demux_011:sink_startofpacket
	wire  [106:0] id_router_011_src_data;                                                                                                    // id_router_011:src_data -> rsp_xbar_demux_011:sink_data
	wire   [30:0] id_router_011_src_channel;                                                                                                 // id_router_011:src_channel -> rsp_xbar_demux_011:sink_channel
	wire          id_router_011_src_ready;                                                                                                   // rsp_xbar_demux_011:sink_ready -> id_router_011:src_ready
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                   // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_012:sink_endofpacket
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                         // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_012:sink_valid
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                 // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_012:sink_startofpacket
	wire  [106:0] encoder_int_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                          // ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_012:sink_data
	wire          encoder_int_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                         // id_router_012:sink_ready -> ENCODER_INT_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_012_src_endofpacket;                                                                                             // id_router_012:src_endofpacket -> rsp_xbar_demux_012:sink_endofpacket
	wire          id_router_012_src_valid;                                                                                                   // id_router_012:src_valid -> rsp_xbar_demux_012:sink_valid
	wire          id_router_012_src_startofpacket;                                                                                           // id_router_012:src_startofpacket -> rsp_xbar_demux_012:sink_startofpacket
	wire  [106:0] id_router_012_src_data;                                                                                                    // id_router_012:src_data -> rsp_xbar_demux_012:sink_data
	wire   [30:0] id_router_012_src_channel;                                                                                                 // id_router_012:src_channel -> rsp_xbar_demux_012:sink_channel
	wire          id_router_012_src_ready;                                                                                                   // rsp_xbar_demux_012:sink_ready -> id_router_012:src_ready
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_013:sink_endofpacket
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                      // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_013:sink_valid
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                              // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_013:sink_startofpacket
	wire  [106:0] encoder_normal_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                       // ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_013:sink_data
	wire          encoder_normal_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                      // id_router_013:sink_ready -> ENCODER_NORMAL_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_013_src_endofpacket;                                                                                             // id_router_013:src_endofpacket -> rsp_xbar_demux_013:sink_endofpacket
	wire          id_router_013_src_valid;                                                                                                   // id_router_013:src_valid -> rsp_xbar_demux_013:sink_valid
	wire          id_router_013_src_startofpacket;                                                                                           // id_router_013:src_startofpacket -> rsp_xbar_demux_013:sink_startofpacket
	wire  [106:0] id_router_013_src_data;                                                                                                    // id_router_013:src_data -> rsp_xbar_demux_013:sink_data
	wire   [30:0] id_router_013_src_channel;                                                                                                 // id_router_013:src_channel -> rsp_xbar_demux_013:sink_channel
	wire          id_router_013_src_ready;                                                                                                   // rsp_xbar_demux_013:sink_ready -> id_router_013:src_ready
	wire          motores_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                       // MOTORES_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_014:sink_endofpacket
	wire          motores_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                             // MOTORES_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_014:sink_valid
	wire          motores_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                     // MOTORES_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_014:sink_startofpacket
	wire  [106:0] motores_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                              // MOTORES_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_014:sink_data
	wire          motores_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                             // id_router_014:sink_ready -> MOTORES_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_014_src_endofpacket;                                                                                             // id_router_014:src_endofpacket -> rsp_xbar_demux_014:sink_endofpacket
	wire          id_router_014_src_valid;                                                                                                   // id_router_014:src_valid -> rsp_xbar_demux_014:sink_valid
	wire          id_router_014_src_startofpacket;                                                                                           // id_router_014:src_startofpacket -> rsp_xbar_demux_014:sink_startofpacket
	wire  [106:0] id_router_014_src_data;                                                                                                    // id_router_014:src_data -> rsp_xbar_demux_014:sink_data
	wire   [30:0] id_router_014_src_channel;                                                                                                 // id_router_014:src_channel -> rsp_xbar_demux_014:sink_channel
	wire          id_router_014_src_ready;                                                                                                   // rsp_xbar_demux_014:sink_ready -> id_router_014:src_ready
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                          // PWM1_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_015:sink_endofpacket
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                                // PWM1_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_015:sink_valid
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                        // PWM1_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_015:sink_startofpacket
	wire  [106:0] pwm1_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                                 // PWM1_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_015:sink_data
	wire          pwm1_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                                // id_router_015:sink_ready -> PWM1_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_015_src_endofpacket;                                                                                             // id_router_015:src_endofpacket -> rsp_xbar_demux_015:sink_endofpacket
	wire          id_router_015_src_valid;                                                                                                   // id_router_015:src_valid -> rsp_xbar_demux_015:sink_valid
	wire          id_router_015_src_startofpacket;                                                                                           // id_router_015:src_startofpacket -> rsp_xbar_demux_015:sink_startofpacket
	wire  [106:0] id_router_015_src_data;                                                                                                    // id_router_015:src_data -> rsp_xbar_demux_015:sink_data
	wire   [30:0] id_router_015_src_channel;                                                                                                 // id_router_015:src_channel -> rsp_xbar_demux_015:sink_channel
	wire          id_router_015_src_ready;                                                                                                   // rsp_xbar_demux_015:sink_ready -> id_router_015:src_ready
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                          // PWM2_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_016:sink_endofpacket
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                                // PWM2_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_016:sink_valid
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                        // PWM2_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_016:sink_startofpacket
	wire  [106:0] pwm2_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                                 // PWM2_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_016:sink_data
	wire          pwm2_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                                // id_router_016:sink_ready -> PWM2_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_016_src_endofpacket;                                                                                             // id_router_016:src_endofpacket -> rsp_xbar_demux_016:sink_endofpacket
	wire          id_router_016_src_valid;                                                                                                   // id_router_016:src_valid -> rsp_xbar_demux_016:sink_valid
	wire          id_router_016_src_startofpacket;                                                                                           // id_router_016:src_startofpacket -> rsp_xbar_demux_016:sink_startofpacket
	wire  [106:0] id_router_016_src_data;                                                                                                    // id_router_016:src_data -> rsp_xbar_demux_016:sink_data
	wire   [30:0] id_router_016_src_channel;                                                                                                 // id_router_016:src_channel -> rsp_xbar_demux_016:sink_channel
	wire          id_router_016_src_ready;                                                                                                   // rsp_xbar_demux_016:sink_ready -> id_router_016:src_ready
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                      // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_017:sink_endofpacket
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                            // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_017:sink_valid
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                    // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_017:sink_startofpacket
	wire  [106:0] ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                             // CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_017:sink_data
	wire          ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                            // id_router_017:sink_ready -> CTRL_I2C_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_017_src_endofpacket;                                                                                             // id_router_017:src_endofpacket -> rsp_xbar_demux_017:sink_endofpacket
	wire          id_router_017_src_valid;                                                                                                   // id_router_017:src_valid -> rsp_xbar_demux_017:sink_valid
	wire          id_router_017_src_startofpacket;                                                                                           // id_router_017:src_startofpacket -> rsp_xbar_demux_017:sink_startofpacket
	wire  [106:0] id_router_017_src_data;                                                                                                    // id_router_017:src_data -> rsp_xbar_demux_017:sink_data
	wire   [30:0] id_router_017_src_channel;                                                                                                 // id_router_017:src_channel -> rsp_xbar_demux_017:sink_channel
	wire          id_router_017_src_ready;                                                                                                   // rsp_xbar_demux_017:sink_ready -> id_router_017:src_ready
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                  // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_018:sink_endofpacket
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                        // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_018:sink_valid
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_018:sink_startofpacket
	wire  [106:0] data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                         // DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_018:sink_data
	wire          data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                        // id_router_018:sink_ready -> DATA_OUT_I2C_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_018_src_endofpacket;                                                                                             // id_router_018:src_endofpacket -> rsp_xbar_demux_018:sink_endofpacket
	wire          id_router_018_src_valid;                                                                                                   // id_router_018:src_valid -> rsp_xbar_demux_018:sink_valid
	wire          id_router_018_src_startofpacket;                                                                                           // id_router_018:src_startofpacket -> rsp_xbar_demux_018:sink_startofpacket
	wire  [106:0] id_router_018_src_data;                                                                                                    // id_router_018:src_data -> rsp_xbar_demux_018:sink_data
	wire   [30:0] id_router_018_src_channel;                                                                                                 // id_router_018:src_channel -> rsp_xbar_demux_018:sink_channel
	wire          id_router_018_src_ready;                                                                                                   // rsp_xbar_demux_018:sink_ready -> id_router_018:src_ready
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                   // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_019:sink_endofpacket
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                         // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_019:sink_valid
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                 // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_019:sink_startofpacket
	wire  [106:0] data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                          // DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_019:sink_data
	wire          data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                         // id_router_019:sink_ready -> DATA_IN_I2C_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_019_src_endofpacket;                                                                                             // id_router_019:src_endofpacket -> rsp_xbar_demux_019:sink_endofpacket
	wire          id_router_019_src_valid;                                                                                                   // id_router_019:src_valid -> rsp_xbar_demux_019:sink_valid
	wire          id_router_019_src_startofpacket;                                                                                           // id_router_019:src_startofpacket -> rsp_xbar_demux_019:sink_startofpacket
	wire  [106:0] id_router_019_src_data;                                                                                                    // id_router_019:src_data -> rsp_xbar_demux_019:sink_data
	wire   [30:0] id_router_019_src_channel;                                                                                                 // id_router_019:src_channel -> rsp_xbar_demux_019:sink_channel
	wire          id_router_019_src_ready;                                                                                                   // rsp_xbar_demux_019:sink_ready -> id_router_019:src_ready
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                      // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_020:sink_endofpacket
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                            // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_020:sink_valid
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                    // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_020:sink_startofpacket
	wire  [106:0] flag_i2c_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                             // FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_020:sink_data
	wire          flag_i2c_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                            // id_router_020:sink_ready -> FLAG_I2C_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_020_src_endofpacket;                                                                                             // id_router_020:src_endofpacket -> rsp_xbar_demux_020:sink_endofpacket
	wire          id_router_020_src_valid;                                                                                                   // id_router_020:src_valid -> rsp_xbar_demux_020:sink_valid
	wire          id_router_020_src_startofpacket;                                                                                           // id_router_020:src_startofpacket -> rsp_xbar_demux_020:sink_startofpacket
	wire  [106:0] id_router_020_src_data;                                                                                                    // id_router_020:src_data -> rsp_xbar_demux_020:sink_data
	wire   [30:0] id_router_020_src_channel;                                                                                                 // id_router_020:src_channel -> rsp_xbar_demux_020:sink_channel
	wire          id_router_020_src_ready;                                                                                                   // rsp_xbar_demux_020:sink_ready -> id_router_020:src_ready
	wire          gps_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                           // GPS_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_021:sink_endofpacket
	wire          gps_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                                 // GPS_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_021:sink_valid
	wire          gps_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                         // GPS_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_021:sink_startofpacket
	wire  [106:0] gps_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                                  // GPS_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_021:sink_data
	wire          gps_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                                 // id_router_021:sink_ready -> GPS_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_021_src_endofpacket;                                                                                             // id_router_021:src_endofpacket -> rsp_xbar_demux_021:sink_endofpacket
	wire          id_router_021_src_valid;                                                                                                   // id_router_021:src_valid -> rsp_xbar_demux_021:sink_valid
	wire          id_router_021_src_startofpacket;                                                                                           // id_router_021:src_startofpacket -> rsp_xbar_demux_021:sink_startofpacket
	wire  [106:0] id_router_021_src_data;                                                                                                    // id_router_021:src_data -> rsp_xbar_demux_021:sink_data
	wire   [30:0] id_router_021_src_channel;                                                                                                 // id_router_021:src_channel -> rsp_xbar_demux_021:sink_channel
	wire          id_router_021_src_ready;                                                                                                   // rsp_xbar_demux_021:sink_ready -> id_router_021:src_ready
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                          // XBEE_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_022:sink_endofpacket
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                                // XBEE_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_022:sink_valid
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                        // XBEE_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_022:sink_startofpacket
	wire  [106:0] xbee_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                                 // XBEE_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_022:sink_data
	wire          xbee_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                                // id_router_022:sink_ready -> XBEE_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_022_src_endofpacket;                                                                                             // id_router_022:src_endofpacket -> rsp_xbar_demux_022:sink_endofpacket
	wire          id_router_022_src_valid;                                                                                                   // id_router_022:src_valid -> rsp_xbar_demux_022:sink_valid
	wire          id_router_022_src_startofpacket;                                                                                           // id_router_022:src_startofpacket -> rsp_xbar_demux_022:sink_startofpacket
	wire  [106:0] id_router_022_src_data;                                                                                                    // id_router_022:src_data -> rsp_xbar_demux_022:sink_data
	wire   [30:0] id_router_022_src_channel;                                                                                                 // id_router_022:src_channel -> rsp_xbar_demux_022:sink_channel
	wire          id_router_022_src_ready;                                                                                                   // rsp_xbar_demux_022:sink_ready -> id_router_022:src_ready
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                         // DIST1_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_023:sink_endofpacket
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                               // DIST1_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_023:sink_valid
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                       // DIST1_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_023:sink_startofpacket
	wire  [106:0] dist1_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                                // DIST1_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_023:sink_data
	wire          dist1_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                               // id_router_023:sink_ready -> DIST1_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_023_src_endofpacket;                                                                                             // id_router_023:src_endofpacket -> rsp_xbar_demux_023:sink_endofpacket
	wire          id_router_023_src_valid;                                                                                                   // id_router_023:src_valid -> rsp_xbar_demux_023:sink_valid
	wire          id_router_023_src_startofpacket;                                                                                           // id_router_023:src_startofpacket -> rsp_xbar_demux_023:sink_startofpacket
	wire  [106:0] id_router_023_src_data;                                                                                                    // id_router_023:src_data -> rsp_xbar_demux_023:sink_data
	wire   [30:0] id_router_023_src_channel;                                                                                                 // id_router_023:src_channel -> rsp_xbar_demux_023:sink_channel
	wire          id_router_023_src_ready;                                                                                                   // rsp_xbar_demux_023:sink_ready -> id_router_023:src_ready
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                         // DIST2_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_024:sink_endofpacket
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                               // DIST2_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_024:sink_valid
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                       // DIST2_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_024:sink_startofpacket
	wire  [106:0] dist2_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                                // DIST2_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_024:sink_data
	wire          dist2_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                               // id_router_024:sink_ready -> DIST2_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_024_src_endofpacket;                                                                                             // id_router_024:src_endofpacket -> rsp_xbar_demux_024:sink_endofpacket
	wire          id_router_024_src_valid;                                                                                                   // id_router_024:src_valid -> rsp_xbar_demux_024:sink_valid
	wire          id_router_024_src_startofpacket;                                                                                           // id_router_024:src_startofpacket -> rsp_xbar_demux_024:sink_startofpacket
	wire  [106:0] id_router_024_src_data;                                                                                                    // id_router_024:src_data -> rsp_xbar_demux_024:sink_data
	wire   [30:0] id_router_024_src_channel;                                                                                                 // id_router_024:src_channel -> rsp_xbar_demux_024:sink_channel
	wire          id_router_024_src_ready;                                                                                                   // rsp_xbar_demux_024:sink_ready -> id_router_024:src_ready
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                         // DIST3_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_025:sink_endofpacket
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                               // DIST3_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_025:sink_valid
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                       // DIST3_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_025:sink_startofpacket
	wire  [106:0] dist3_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                                // DIST3_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_025:sink_data
	wire          dist3_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                               // id_router_025:sink_ready -> DIST3_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_025_src_endofpacket;                                                                                             // id_router_025:src_endofpacket -> rsp_xbar_demux_025:sink_endofpacket
	wire          id_router_025_src_valid;                                                                                                   // id_router_025:src_valid -> rsp_xbar_demux_025:sink_valid
	wire          id_router_025_src_startofpacket;                                                                                           // id_router_025:src_startofpacket -> rsp_xbar_demux_025:sink_startofpacket
	wire  [106:0] id_router_025_src_data;                                                                                                    // id_router_025:src_data -> rsp_xbar_demux_025:sink_data
	wire   [30:0] id_router_025_src_channel;                                                                                                 // id_router_025:src_channel -> rsp_xbar_demux_025:sink_channel
	wire          id_router_025_src_ready;                                                                                                   // rsp_xbar_demux_025:sink_ready -> id_router_025:src_ready
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                         // DIST4_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_026:sink_endofpacket
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                               // DIST4_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_026:sink_valid
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                       // DIST4_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_026:sink_startofpacket
	wire  [106:0] dist4_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                                // DIST4_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_026:sink_data
	wire          dist4_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                               // id_router_026:sink_ready -> DIST4_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_026_src_endofpacket;                                                                                             // id_router_026:src_endofpacket -> rsp_xbar_demux_026:sink_endofpacket
	wire          id_router_026_src_valid;                                                                                                   // id_router_026:src_valid -> rsp_xbar_demux_026:sink_valid
	wire          id_router_026_src_startofpacket;                                                                                           // id_router_026:src_startofpacket -> rsp_xbar_demux_026:sink_startofpacket
	wire  [106:0] id_router_026_src_data;                                                                                                    // id_router_026:src_data -> rsp_xbar_demux_026:sink_data
	wire   [30:0] id_router_026_src_channel;                                                                                                 // id_router_026:src_channel -> rsp_xbar_demux_026:sink_channel
	wire          id_router_026_src_ready;                                                                                                   // rsp_xbar_demux_026:sink_ready -> id_router_026:src_ready
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                         // DIST5_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_027:sink_endofpacket
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                               // DIST5_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_027:sink_valid
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                       // DIST5_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_027:sink_startofpacket
	wire  [106:0] dist5_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                                // DIST5_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_027:sink_data
	wire          dist5_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                               // id_router_027:sink_ready -> DIST5_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_027_src_endofpacket;                                                                                             // id_router_027:src_endofpacket -> rsp_xbar_demux_027:sink_endofpacket
	wire          id_router_027_src_valid;                                                                                                   // id_router_027:src_valid -> rsp_xbar_demux_027:sink_valid
	wire          id_router_027_src_startofpacket;                                                                                           // id_router_027:src_startofpacket -> rsp_xbar_demux_027:sink_startofpacket
	wire  [106:0] id_router_027_src_data;                                                                                                    // id_router_027:src_data -> rsp_xbar_demux_027:sink_data
	wire   [30:0] id_router_027_src_channel;                                                                                                 // id_router_027:src_channel -> rsp_xbar_demux_027:sink_channel
	wire          id_router_027_src_ready;                                                                                                   // rsp_xbar_demux_027:sink_ready -> id_router_027:src_ready
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                         // DIST6_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_028:sink_endofpacket
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                               // DIST6_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_028:sink_valid
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                       // DIST6_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_028:sink_startofpacket
	wire  [106:0] dist6_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                                // DIST6_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_028:sink_data
	wire          dist6_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                               // id_router_028:sink_ready -> DIST6_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_028_src_endofpacket;                                                                                             // id_router_028:src_endofpacket -> rsp_xbar_demux_028:sink_endofpacket
	wire          id_router_028_src_valid;                                                                                                   // id_router_028:src_valid -> rsp_xbar_demux_028:sink_valid
	wire          id_router_028_src_startofpacket;                                                                                           // id_router_028:src_startofpacket -> rsp_xbar_demux_028:sink_startofpacket
	wire  [106:0] id_router_028_src_data;                                                                                                    // id_router_028:src_data -> rsp_xbar_demux_028:sink_data
	wire   [30:0] id_router_028_src_channel;                                                                                                 // id_router_028:src_channel -> rsp_xbar_demux_028:sink_channel
	wire          id_router_028_src_ready;                                                                                                   // rsp_xbar_demux_028:sink_ready -> id_router_028:src_ready
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                         // DIST7_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_029:sink_endofpacket
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                               // DIST7_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_029:sink_valid
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                       // DIST7_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_029:sink_startofpacket
	wire  [106:0] dist7_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                                // DIST7_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_029:sink_data
	wire          dist7_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                               // id_router_029:sink_ready -> DIST7_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_029_src_endofpacket;                                                                                             // id_router_029:src_endofpacket -> rsp_xbar_demux_029:sink_endofpacket
	wire          id_router_029_src_valid;                                                                                                   // id_router_029:src_valid -> rsp_xbar_demux_029:sink_valid
	wire          id_router_029_src_startofpacket;                                                                                           // id_router_029:src_startofpacket -> rsp_xbar_demux_029:sink_startofpacket
	wire  [106:0] id_router_029_src_data;                                                                                                    // id_router_029:src_data -> rsp_xbar_demux_029:sink_data
	wire   [30:0] id_router_029_src_channel;                                                                                                 // id_router_029:src_channel -> rsp_xbar_demux_029:sink_channel
	wire          id_router_029_src_ready;                                                                                                   // rsp_xbar_demux_029:sink_ready -> id_router_029:src_ready
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                                         // DIST8_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_030:sink_endofpacket
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                                               // DIST8_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_030:sink_valid
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                                       // DIST8_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_030:sink_startofpacket
	wire  [106:0] dist8_s1_translator_avalon_universal_slave_0_agent_rp_data;                                                                // DIST8_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_030:sink_data
	wire          dist8_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                                               // id_router_030:sink_ready -> DIST8_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_030_src_endofpacket;                                                                                             // id_router_030:src_endofpacket -> rsp_xbar_demux_030:sink_endofpacket
	wire          id_router_030_src_valid;                                                                                                   // id_router_030:src_valid -> rsp_xbar_demux_030:sink_valid
	wire          id_router_030_src_startofpacket;                                                                                           // id_router_030:src_startofpacket -> rsp_xbar_demux_030:sink_startofpacket
	wire  [106:0] id_router_030_src_data;                                                                                                    // id_router_030:src_data -> rsp_xbar_demux_030:sink_data
	wire   [30:0] id_router_030_src_channel;                                                                                                 // id_router_030:src_channel -> rsp_xbar_demux_030:sink_channel
	wire          id_router_030_src_ready;                                                                                                   // rsp_xbar_demux_030:sink_ready -> id_router_030:src_ready
	wire          addr_router_src_endofpacket;                                                                                               // addr_router:src_endofpacket -> limiter:cmd_sink_endofpacket
	wire          addr_router_src_valid;                                                                                                     // addr_router:src_valid -> limiter:cmd_sink_valid
	wire          addr_router_src_startofpacket;                                                                                             // addr_router:src_startofpacket -> limiter:cmd_sink_startofpacket
	wire  [106:0] addr_router_src_data;                                                                                                      // addr_router:src_data -> limiter:cmd_sink_data
	wire   [30:0] addr_router_src_channel;                                                                                                   // addr_router:src_channel -> limiter:cmd_sink_channel
	wire          addr_router_src_ready;                                                                                                     // limiter:cmd_sink_ready -> addr_router:src_ready
	wire          limiter_cmd_src_endofpacket;                                                                                               // limiter:cmd_src_endofpacket -> cmd_xbar_demux:sink_endofpacket
	wire          limiter_cmd_src_startofpacket;                                                                                             // limiter:cmd_src_startofpacket -> cmd_xbar_demux:sink_startofpacket
	wire  [106:0] limiter_cmd_src_data;                                                                                                      // limiter:cmd_src_data -> cmd_xbar_demux:sink_data
	wire   [30:0] limiter_cmd_src_channel;                                                                                                   // limiter:cmd_src_channel -> cmd_xbar_demux:sink_channel
	wire          limiter_cmd_src_ready;                                                                                                     // cmd_xbar_demux:sink_ready -> limiter:cmd_src_ready
	wire          rsp_xbar_mux_src_endofpacket;                                                                                              // rsp_xbar_mux:src_endofpacket -> limiter:rsp_sink_endofpacket
	wire          rsp_xbar_mux_src_valid;                                                                                                    // rsp_xbar_mux:src_valid -> limiter:rsp_sink_valid
	wire          rsp_xbar_mux_src_startofpacket;                                                                                            // rsp_xbar_mux:src_startofpacket -> limiter:rsp_sink_startofpacket
	wire  [106:0] rsp_xbar_mux_src_data;                                                                                                     // rsp_xbar_mux:src_data -> limiter:rsp_sink_data
	wire   [30:0] rsp_xbar_mux_src_channel;                                                                                                  // rsp_xbar_mux:src_channel -> limiter:rsp_sink_channel
	wire          rsp_xbar_mux_src_ready;                                                                                                    // limiter:rsp_sink_ready -> rsp_xbar_mux:src_ready
	wire          limiter_rsp_src_endofpacket;                                                                                               // limiter:rsp_src_endofpacket -> CPU_instruction_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire          limiter_rsp_src_valid;                                                                                                     // limiter:rsp_src_valid -> CPU_instruction_master_translator_avalon_universal_master_0_agent:rp_valid
	wire          limiter_rsp_src_startofpacket;                                                                                             // limiter:rsp_src_startofpacket -> CPU_instruction_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [106:0] limiter_rsp_src_data;                                                                                                      // limiter:rsp_src_data -> CPU_instruction_master_translator_avalon_universal_master_0_agent:rp_data
	wire   [30:0] limiter_rsp_src_channel;                                                                                                   // limiter:rsp_src_channel -> CPU_instruction_master_translator_avalon_universal_master_0_agent:rp_channel
	wire          limiter_rsp_src_ready;                                                                                                     // CPU_instruction_master_translator_avalon_universal_master_0_agent:rp_ready -> limiter:rsp_src_ready
	wire          burst_adapter_source0_endofpacket;                                                                                         // burst_adapter:source0_endofpacket -> SDRAM_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          burst_adapter_source0_valid;                                                                                               // burst_adapter:source0_valid -> SDRAM_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          burst_adapter_source0_startofpacket;                                                                                       // burst_adapter:source0_startofpacket -> SDRAM_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [88:0] burst_adapter_source0_data;                                                                                                // burst_adapter:source0_data -> SDRAM_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire          burst_adapter_source0_ready;                                                                                               // SDRAM_s1_translator_avalon_universal_slave_0_agent:cp_ready -> burst_adapter:source0_ready
	wire   [30:0] burst_adapter_source0_channel;                                                                                             // burst_adapter:source0_channel -> SDRAM_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          burst_adapter_001_source0_endofpacket;                                                                                     // burst_adapter_001:source0_endofpacket -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          burst_adapter_001_source0_valid;                                                                                           // burst_adapter_001:source0_valid -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire          burst_adapter_001_source0_startofpacket;                                                                                   // burst_adapter_001:source0_startofpacket -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire   [79:0] burst_adapter_001_source0_data;                                                                                            // burst_adapter_001:source0_data -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire          burst_adapter_001_source0_ready;                                                                                           // ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:cp_ready -> burst_adapter_001:source0_ready
	wire   [30:0] burst_adapter_001_source0_channel;                                                                                         // burst_adapter_001:source0_channel -> ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_demux_src0_endofpacket;                                                                                           // cmd_xbar_demux:src0_endofpacket -> cmd_xbar_mux:sink0_endofpacket
	wire          cmd_xbar_demux_src0_valid;                                                                                                 // cmd_xbar_demux:src0_valid -> cmd_xbar_mux:sink0_valid
	wire          cmd_xbar_demux_src0_startofpacket;                                                                                         // cmd_xbar_demux:src0_startofpacket -> cmd_xbar_mux:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_src0_data;                                                                                                  // cmd_xbar_demux:src0_data -> cmd_xbar_mux:sink0_data
	wire   [30:0] cmd_xbar_demux_src0_channel;                                                                                               // cmd_xbar_demux:src0_channel -> cmd_xbar_mux:sink0_channel
	wire          cmd_xbar_demux_src0_ready;                                                                                                 // cmd_xbar_mux:sink0_ready -> cmd_xbar_demux:src0_ready
	wire          cmd_xbar_demux_src1_endofpacket;                                                                                           // cmd_xbar_demux:src1_endofpacket -> cmd_xbar_mux_001:sink0_endofpacket
	wire          cmd_xbar_demux_src1_valid;                                                                                                 // cmd_xbar_demux:src1_valid -> cmd_xbar_mux_001:sink0_valid
	wire          cmd_xbar_demux_src1_startofpacket;                                                                                         // cmd_xbar_demux:src1_startofpacket -> cmd_xbar_mux_001:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_src1_data;                                                                                                  // cmd_xbar_demux:src1_data -> cmd_xbar_mux_001:sink0_data
	wire   [30:0] cmd_xbar_demux_src1_channel;                                                                                               // cmd_xbar_demux:src1_channel -> cmd_xbar_mux_001:sink0_channel
	wire          cmd_xbar_demux_src1_ready;                                                                                                 // cmd_xbar_mux_001:sink0_ready -> cmd_xbar_demux:src1_ready
	wire          cmd_xbar_demux_src2_endofpacket;                                                                                           // cmd_xbar_demux:src2_endofpacket -> cmd_xbar_mux_002:sink0_endofpacket
	wire          cmd_xbar_demux_src2_valid;                                                                                                 // cmd_xbar_demux:src2_valid -> cmd_xbar_mux_002:sink0_valid
	wire          cmd_xbar_demux_src2_startofpacket;                                                                                         // cmd_xbar_demux:src2_startofpacket -> cmd_xbar_mux_002:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_src2_data;                                                                                                  // cmd_xbar_demux:src2_data -> cmd_xbar_mux_002:sink0_data
	wire   [30:0] cmd_xbar_demux_src2_channel;                                                                                               // cmd_xbar_demux:src2_channel -> cmd_xbar_mux_002:sink0_channel
	wire          cmd_xbar_demux_src2_ready;                                                                                                 // cmd_xbar_mux_002:sink0_ready -> cmd_xbar_demux:src2_ready
	wire          cmd_xbar_demux_001_src0_endofpacket;                                                                                       // cmd_xbar_demux_001:src0_endofpacket -> cmd_xbar_mux:sink1_endofpacket
	wire          cmd_xbar_demux_001_src0_valid;                                                                                             // cmd_xbar_demux_001:src0_valid -> cmd_xbar_mux:sink1_valid
	wire          cmd_xbar_demux_001_src0_startofpacket;                                                                                     // cmd_xbar_demux_001:src0_startofpacket -> cmd_xbar_mux:sink1_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src0_data;                                                                                              // cmd_xbar_demux_001:src0_data -> cmd_xbar_mux:sink1_data
	wire   [30:0] cmd_xbar_demux_001_src0_channel;                                                                                           // cmd_xbar_demux_001:src0_channel -> cmd_xbar_mux:sink1_channel
	wire          cmd_xbar_demux_001_src0_ready;                                                                                             // cmd_xbar_mux:sink1_ready -> cmd_xbar_demux_001:src0_ready
	wire          cmd_xbar_demux_001_src1_endofpacket;                                                                                       // cmd_xbar_demux_001:src1_endofpacket -> cmd_xbar_mux_001:sink1_endofpacket
	wire          cmd_xbar_demux_001_src1_valid;                                                                                             // cmd_xbar_demux_001:src1_valid -> cmd_xbar_mux_001:sink1_valid
	wire          cmd_xbar_demux_001_src1_startofpacket;                                                                                     // cmd_xbar_demux_001:src1_startofpacket -> cmd_xbar_mux_001:sink1_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src1_data;                                                                                              // cmd_xbar_demux_001:src1_data -> cmd_xbar_mux_001:sink1_data
	wire   [30:0] cmd_xbar_demux_001_src1_channel;                                                                                           // cmd_xbar_demux_001:src1_channel -> cmd_xbar_mux_001:sink1_channel
	wire          cmd_xbar_demux_001_src1_ready;                                                                                             // cmd_xbar_mux_001:sink1_ready -> cmd_xbar_demux_001:src1_ready
	wire          cmd_xbar_demux_001_src2_endofpacket;                                                                                       // cmd_xbar_demux_001:src2_endofpacket -> cmd_xbar_mux_002:sink1_endofpacket
	wire          cmd_xbar_demux_001_src2_valid;                                                                                             // cmd_xbar_demux_001:src2_valid -> cmd_xbar_mux_002:sink1_valid
	wire          cmd_xbar_demux_001_src2_startofpacket;                                                                                     // cmd_xbar_demux_001:src2_startofpacket -> cmd_xbar_mux_002:sink1_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src2_data;                                                                                              // cmd_xbar_demux_001:src2_data -> cmd_xbar_mux_002:sink1_data
	wire   [30:0] cmd_xbar_demux_001_src2_channel;                                                                                           // cmd_xbar_demux_001:src2_channel -> cmd_xbar_mux_002:sink1_channel
	wire          cmd_xbar_demux_001_src2_ready;                                                                                             // cmd_xbar_mux_002:sink1_ready -> cmd_xbar_demux_001:src2_ready
	wire          cmd_xbar_demux_001_src3_endofpacket;                                                                                       // cmd_xbar_demux_001:src3_endofpacket -> cmd_xbar_mux_003:sink0_endofpacket
	wire          cmd_xbar_demux_001_src3_valid;                                                                                             // cmd_xbar_demux_001:src3_valid -> cmd_xbar_mux_003:sink0_valid
	wire          cmd_xbar_demux_001_src3_startofpacket;                                                                                     // cmd_xbar_demux_001:src3_startofpacket -> cmd_xbar_mux_003:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src3_data;                                                                                              // cmd_xbar_demux_001:src3_data -> cmd_xbar_mux_003:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src3_channel;                                                                                           // cmd_xbar_demux_001:src3_channel -> cmd_xbar_mux_003:sink0_channel
	wire          cmd_xbar_demux_001_src3_ready;                                                                                             // cmd_xbar_mux_003:sink0_ready -> cmd_xbar_demux_001:src3_ready
	wire          cmd_xbar_demux_001_src4_endofpacket;                                                                                       // cmd_xbar_demux_001:src4_endofpacket -> cmd_xbar_mux_004:sink0_endofpacket
	wire          cmd_xbar_demux_001_src4_valid;                                                                                             // cmd_xbar_demux_001:src4_valid -> cmd_xbar_mux_004:sink0_valid
	wire          cmd_xbar_demux_001_src4_startofpacket;                                                                                     // cmd_xbar_demux_001:src4_startofpacket -> cmd_xbar_mux_004:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src4_data;                                                                                              // cmd_xbar_demux_001:src4_data -> cmd_xbar_mux_004:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src4_channel;                                                                                           // cmd_xbar_demux_001:src4_channel -> cmd_xbar_mux_004:sink0_channel
	wire          cmd_xbar_demux_001_src4_ready;                                                                                             // cmd_xbar_mux_004:sink0_ready -> cmd_xbar_demux_001:src4_ready
	wire          cmd_xbar_demux_001_src5_endofpacket;                                                                                       // cmd_xbar_demux_001:src5_endofpacket -> cmd_xbar_mux_005:sink0_endofpacket
	wire          cmd_xbar_demux_001_src5_valid;                                                                                             // cmd_xbar_demux_001:src5_valid -> cmd_xbar_mux_005:sink0_valid
	wire          cmd_xbar_demux_001_src5_startofpacket;                                                                                     // cmd_xbar_demux_001:src5_startofpacket -> cmd_xbar_mux_005:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src5_data;                                                                                              // cmd_xbar_demux_001:src5_data -> cmd_xbar_mux_005:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src5_channel;                                                                                           // cmd_xbar_demux_001:src5_channel -> cmd_xbar_mux_005:sink0_channel
	wire          cmd_xbar_demux_001_src5_ready;                                                                                             // cmd_xbar_mux_005:sink0_ready -> cmd_xbar_demux_001:src5_ready
	wire          cmd_xbar_demux_001_src6_endofpacket;                                                                                       // cmd_xbar_demux_001:src6_endofpacket -> cmd_xbar_mux_006:sink0_endofpacket
	wire          cmd_xbar_demux_001_src6_valid;                                                                                             // cmd_xbar_demux_001:src6_valid -> cmd_xbar_mux_006:sink0_valid
	wire          cmd_xbar_demux_001_src6_startofpacket;                                                                                     // cmd_xbar_demux_001:src6_startofpacket -> cmd_xbar_mux_006:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src6_data;                                                                                              // cmd_xbar_demux_001:src6_data -> cmd_xbar_mux_006:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src6_channel;                                                                                           // cmd_xbar_demux_001:src6_channel -> cmd_xbar_mux_006:sink0_channel
	wire          cmd_xbar_demux_001_src6_ready;                                                                                             // cmd_xbar_mux_006:sink0_ready -> cmd_xbar_demux_001:src6_ready
	wire          cmd_xbar_demux_001_src7_endofpacket;                                                                                       // cmd_xbar_demux_001:src7_endofpacket -> cmd_xbar_mux_007:sink0_endofpacket
	wire          cmd_xbar_demux_001_src7_valid;                                                                                             // cmd_xbar_demux_001:src7_valid -> cmd_xbar_mux_007:sink0_valid
	wire          cmd_xbar_demux_001_src7_startofpacket;                                                                                     // cmd_xbar_demux_001:src7_startofpacket -> cmd_xbar_mux_007:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src7_data;                                                                                              // cmd_xbar_demux_001:src7_data -> cmd_xbar_mux_007:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src7_channel;                                                                                           // cmd_xbar_demux_001:src7_channel -> cmd_xbar_mux_007:sink0_channel
	wire          cmd_xbar_demux_001_src7_ready;                                                                                             // cmd_xbar_mux_007:sink0_ready -> cmd_xbar_demux_001:src7_ready
	wire          cmd_xbar_demux_001_src8_endofpacket;                                                                                       // cmd_xbar_demux_001:src8_endofpacket -> cmd_xbar_mux_008:sink0_endofpacket
	wire          cmd_xbar_demux_001_src8_valid;                                                                                             // cmd_xbar_demux_001:src8_valid -> cmd_xbar_mux_008:sink0_valid
	wire          cmd_xbar_demux_001_src8_startofpacket;                                                                                     // cmd_xbar_demux_001:src8_startofpacket -> cmd_xbar_mux_008:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src8_data;                                                                                              // cmd_xbar_demux_001:src8_data -> cmd_xbar_mux_008:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src8_channel;                                                                                           // cmd_xbar_demux_001:src8_channel -> cmd_xbar_mux_008:sink0_channel
	wire          cmd_xbar_demux_001_src8_ready;                                                                                             // cmd_xbar_mux_008:sink0_ready -> cmd_xbar_demux_001:src8_ready
	wire          cmd_xbar_demux_001_src10_endofpacket;                                                                                      // cmd_xbar_demux_001:src10_endofpacket -> cmd_xbar_mux_010:sink0_endofpacket
	wire          cmd_xbar_demux_001_src10_valid;                                                                                            // cmd_xbar_demux_001:src10_valid -> cmd_xbar_mux_010:sink0_valid
	wire          cmd_xbar_demux_001_src10_startofpacket;                                                                                    // cmd_xbar_demux_001:src10_startofpacket -> cmd_xbar_mux_010:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src10_data;                                                                                             // cmd_xbar_demux_001:src10_data -> cmd_xbar_mux_010:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src10_channel;                                                                                          // cmd_xbar_demux_001:src10_channel -> cmd_xbar_mux_010:sink0_channel
	wire          cmd_xbar_demux_001_src10_ready;                                                                                            // cmd_xbar_mux_010:sink0_ready -> cmd_xbar_demux_001:src10_ready
	wire          cmd_xbar_demux_001_src11_endofpacket;                                                                                      // cmd_xbar_demux_001:src11_endofpacket -> cmd_xbar_mux_011:sink0_endofpacket
	wire          cmd_xbar_demux_001_src11_valid;                                                                                            // cmd_xbar_demux_001:src11_valid -> cmd_xbar_mux_011:sink0_valid
	wire          cmd_xbar_demux_001_src11_startofpacket;                                                                                    // cmd_xbar_demux_001:src11_startofpacket -> cmd_xbar_mux_011:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src11_data;                                                                                             // cmd_xbar_demux_001:src11_data -> cmd_xbar_mux_011:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src11_channel;                                                                                          // cmd_xbar_demux_001:src11_channel -> cmd_xbar_mux_011:sink0_channel
	wire          cmd_xbar_demux_001_src11_ready;                                                                                            // cmd_xbar_mux_011:sink0_ready -> cmd_xbar_demux_001:src11_ready
	wire          cmd_xbar_demux_001_src12_endofpacket;                                                                                      // cmd_xbar_demux_001:src12_endofpacket -> cmd_xbar_mux_012:sink0_endofpacket
	wire          cmd_xbar_demux_001_src12_valid;                                                                                            // cmd_xbar_demux_001:src12_valid -> cmd_xbar_mux_012:sink0_valid
	wire          cmd_xbar_demux_001_src12_startofpacket;                                                                                    // cmd_xbar_demux_001:src12_startofpacket -> cmd_xbar_mux_012:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src12_data;                                                                                             // cmd_xbar_demux_001:src12_data -> cmd_xbar_mux_012:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src12_channel;                                                                                          // cmd_xbar_demux_001:src12_channel -> cmd_xbar_mux_012:sink0_channel
	wire          cmd_xbar_demux_001_src12_ready;                                                                                            // cmd_xbar_mux_012:sink0_ready -> cmd_xbar_demux_001:src12_ready
	wire          cmd_xbar_demux_001_src13_endofpacket;                                                                                      // cmd_xbar_demux_001:src13_endofpacket -> cmd_xbar_mux_013:sink0_endofpacket
	wire          cmd_xbar_demux_001_src13_valid;                                                                                            // cmd_xbar_demux_001:src13_valid -> cmd_xbar_mux_013:sink0_valid
	wire          cmd_xbar_demux_001_src13_startofpacket;                                                                                    // cmd_xbar_demux_001:src13_startofpacket -> cmd_xbar_mux_013:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src13_data;                                                                                             // cmd_xbar_demux_001:src13_data -> cmd_xbar_mux_013:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src13_channel;                                                                                          // cmd_xbar_demux_001:src13_channel -> cmd_xbar_mux_013:sink0_channel
	wire          cmd_xbar_demux_001_src13_ready;                                                                                            // cmd_xbar_mux_013:sink0_ready -> cmd_xbar_demux_001:src13_ready
	wire          cmd_xbar_demux_001_src14_endofpacket;                                                                                      // cmd_xbar_demux_001:src14_endofpacket -> cmd_xbar_mux_014:sink0_endofpacket
	wire          cmd_xbar_demux_001_src14_valid;                                                                                            // cmd_xbar_demux_001:src14_valid -> cmd_xbar_mux_014:sink0_valid
	wire          cmd_xbar_demux_001_src14_startofpacket;                                                                                    // cmd_xbar_demux_001:src14_startofpacket -> cmd_xbar_mux_014:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src14_data;                                                                                             // cmd_xbar_demux_001:src14_data -> cmd_xbar_mux_014:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src14_channel;                                                                                          // cmd_xbar_demux_001:src14_channel -> cmd_xbar_mux_014:sink0_channel
	wire          cmd_xbar_demux_001_src14_ready;                                                                                            // cmd_xbar_mux_014:sink0_ready -> cmd_xbar_demux_001:src14_ready
	wire          cmd_xbar_demux_001_src15_endofpacket;                                                                                      // cmd_xbar_demux_001:src15_endofpacket -> cmd_xbar_mux_015:sink0_endofpacket
	wire          cmd_xbar_demux_001_src15_valid;                                                                                            // cmd_xbar_demux_001:src15_valid -> cmd_xbar_mux_015:sink0_valid
	wire          cmd_xbar_demux_001_src15_startofpacket;                                                                                    // cmd_xbar_demux_001:src15_startofpacket -> cmd_xbar_mux_015:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src15_data;                                                                                             // cmd_xbar_demux_001:src15_data -> cmd_xbar_mux_015:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src15_channel;                                                                                          // cmd_xbar_demux_001:src15_channel -> cmd_xbar_mux_015:sink0_channel
	wire          cmd_xbar_demux_001_src15_ready;                                                                                            // cmd_xbar_mux_015:sink0_ready -> cmd_xbar_demux_001:src15_ready
	wire          cmd_xbar_demux_001_src16_endofpacket;                                                                                      // cmd_xbar_demux_001:src16_endofpacket -> cmd_xbar_mux_016:sink0_endofpacket
	wire          cmd_xbar_demux_001_src16_valid;                                                                                            // cmd_xbar_demux_001:src16_valid -> cmd_xbar_mux_016:sink0_valid
	wire          cmd_xbar_demux_001_src16_startofpacket;                                                                                    // cmd_xbar_demux_001:src16_startofpacket -> cmd_xbar_mux_016:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src16_data;                                                                                             // cmd_xbar_demux_001:src16_data -> cmd_xbar_mux_016:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src16_channel;                                                                                          // cmd_xbar_demux_001:src16_channel -> cmd_xbar_mux_016:sink0_channel
	wire          cmd_xbar_demux_001_src16_ready;                                                                                            // cmd_xbar_mux_016:sink0_ready -> cmd_xbar_demux_001:src16_ready
	wire          cmd_xbar_demux_001_src17_endofpacket;                                                                                      // cmd_xbar_demux_001:src17_endofpacket -> cmd_xbar_mux_017:sink0_endofpacket
	wire          cmd_xbar_demux_001_src17_valid;                                                                                            // cmd_xbar_demux_001:src17_valid -> cmd_xbar_mux_017:sink0_valid
	wire          cmd_xbar_demux_001_src17_startofpacket;                                                                                    // cmd_xbar_demux_001:src17_startofpacket -> cmd_xbar_mux_017:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src17_data;                                                                                             // cmd_xbar_demux_001:src17_data -> cmd_xbar_mux_017:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src17_channel;                                                                                          // cmd_xbar_demux_001:src17_channel -> cmd_xbar_mux_017:sink0_channel
	wire          cmd_xbar_demux_001_src17_ready;                                                                                            // cmd_xbar_mux_017:sink0_ready -> cmd_xbar_demux_001:src17_ready
	wire          cmd_xbar_demux_001_src18_endofpacket;                                                                                      // cmd_xbar_demux_001:src18_endofpacket -> cmd_xbar_mux_018:sink0_endofpacket
	wire          cmd_xbar_demux_001_src18_valid;                                                                                            // cmd_xbar_demux_001:src18_valid -> cmd_xbar_mux_018:sink0_valid
	wire          cmd_xbar_demux_001_src18_startofpacket;                                                                                    // cmd_xbar_demux_001:src18_startofpacket -> cmd_xbar_mux_018:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src18_data;                                                                                             // cmd_xbar_demux_001:src18_data -> cmd_xbar_mux_018:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src18_channel;                                                                                          // cmd_xbar_demux_001:src18_channel -> cmd_xbar_mux_018:sink0_channel
	wire          cmd_xbar_demux_001_src18_ready;                                                                                            // cmd_xbar_mux_018:sink0_ready -> cmd_xbar_demux_001:src18_ready
	wire          cmd_xbar_demux_001_src19_endofpacket;                                                                                      // cmd_xbar_demux_001:src19_endofpacket -> cmd_xbar_mux_019:sink0_endofpacket
	wire          cmd_xbar_demux_001_src19_valid;                                                                                            // cmd_xbar_demux_001:src19_valid -> cmd_xbar_mux_019:sink0_valid
	wire          cmd_xbar_demux_001_src19_startofpacket;                                                                                    // cmd_xbar_demux_001:src19_startofpacket -> cmd_xbar_mux_019:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src19_data;                                                                                             // cmd_xbar_demux_001:src19_data -> cmd_xbar_mux_019:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src19_channel;                                                                                          // cmd_xbar_demux_001:src19_channel -> cmd_xbar_mux_019:sink0_channel
	wire          cmd_xbar_demux_001_src19_ready;                                                                                            // cmd_xbar_mux_019:sink0_ready -> cmd_xbar_demux_001:src19_ready
	wire          cmd_xbar_demux_001_src20_endofpacket;                                                                                      // cmd_xbar_demux_001:src20_endofpacket -> cmd_xbar_mux_020:sink0_endofpacket
	wire          cmd_xbar_demux_001_src20_valid;                                                                                            // cmd_xbar_demux_001:src20_valid -> cmd_xbar_mux_020:sink0_valid
	wire          cmd_xbar_demux_001_src20_startofpacket;                                                                                    // cmd_xbar_demux_001:src20_startofpacket -> cmd_xbar_mux_020:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src20_data;                                                                                             // cmd_xbar_demux_001:src20_data -> cmd_xbar_mux_020:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src20_channel;                                                                                          // cmd_xbar_demux_001:src20_channel -> cmd_xbar_mux_020:sink0_channel
	wire          cmd_xbar_demux_001_src20_ready;                                                                                            // cmd_xbar_mux_020:sink0_ready -> cmd_xbar_demux_001:src20_ready
	wire          cmd_xbar_demux_001_src21_endofpacket;                                                                                      // cmd_xbar_demux_001:src21_endofpacket -> cmd_xbar_mux_021:sink0_endofpacket
	wire          cmd_xbar_demux_001_src21_valid;                                                                                            // cmd_xbar_demux_001:src21_valid -> cmd_xbar_mux_021:sink0_valid
	wire          cmd_xbar_demux_001_src21_startofpacket;                                                                                    // cmd_xbar_demux_001:src21_startofpacket -> cmd_xbar_mux_021:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src21_data;                                                                                             // cmd_xbar_demux_001:src21_data -> cmd_xbar_mux_021:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src21_channel;                                                                                          // cmd_xbar_demux_001:src21_channel -> cmd_xbar_mux_021:sink0_channel
	wire          cmd_xbar_demux_001_src21_ready;                                                                                            // cmd_xbar_mux_021:sink0_ready -> cmd_xbar_demux_001:src21_ready
	wire          cmd_xbar_demux_001_src22_endofpacket;                                                                                      // cmd_xbar_demux_001:src22_endofpacket -> cmd_xbar_mux_022:sink0_endofpacket
	wire          cmd_xbar_demux_001_src22_valid;                                                                                            // cmd_xbar_demux_001:src22_valid -> cmd_xbar_mux_022:sink0_valid
	wire          cmd_xbar_demux_001_src22_startofpacket;                                                                                    // cmd_xbar_demux_001:src22_startofpacket -> cmd_xbar_mux_022:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src22_data;                                                                                             // cmd_xbar_demux_001:src22_data -> cmd_xbar_mux_022:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src22_channel;                                                                                          // cmd_xbar_demux_001:src22_channel -> cmd_xbar_mux_022:sink0_channel
	wire          cmd_xbar_demux_001_src22_ready;                                                                                            // cmd_xbar_mux_022:sink0_ready -> cmd_xbar_demux_001:src22_ready
	wire          cmd_xbar_demux_001_src23_endofpacket;                                                                                      // cmd_xbar_demux_001:src23_endofpacket -> cmd_xbar_mux_023:sink0_endofpacket
	wire          cmd_xbar_demux_001_src23_valid;                                                                                            // cmd_xbar_demux_001:src23_valid -> cmd_xbar_mux_023:sink0_valid
	wire          cmd_xbar_demux_001_src23_startofpacket;                                                                                    // cmd_xbar_demux_001:src23_startofpacket -> cmd_xbar_mux_023:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src23_data;                                                                                             // cmd_xbar_demux_001:src23_data -> cmd_xbar_mux_023:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src23_channel;                                                                                          // cmd_xbar_demux_001:src23_channel -> cmd_xbar_mux_023:sink0_channel
	wire          cmd_xbar_demux_001_src23_ready;                                                                                            // cmd_xbar_mux_023:sink0_ready -> cmd_xbar_demux_001:src23_ready
	wire          cmd_xbar_demux_001_src24_endofpacket;                                                                                      // cmd_xbar_demux_001:src24_endofpacket -> cmd_xbar_mux_024:sink0_endofpacket
	wire          cmd_xbar_demux_001_src24_valid;                                                                                            // cmd_xbar_demux_001:src24_valid -> cmd_xbar_mux_024:sink0_valid
	wire          cmd_xbar_demux_001_src24_startofpacket;                                                                                    // cmd_xbar_demux_001:src24_startofpacket -> cmd_xbar_mux_024:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src24_data;                                                                                             // cmd_xbar_demux_001:src24_data -> cmd_xbar_mux_024:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src24_channel;                                                                                          // cmd_xbar_demux_001:src24_channel -> cmd_xbar_mux_024:sink0_channel
	wire          cmd_xbar_demux_001_src24_ready;                                                                                            // cmd_xbar_mux_024:sink0_ready -> cmd_xbar_demux_001:src24_ready
	wire          cmd_xbar_demux_001_src25_endofpacket;                                                                                      // cmd_xbar_demux_001:src25_endofpacket -> cmd_xbar_mux_025:sink0_endofpacket
	wire          cmd_xbar_demux_001_src25_valid;                                                                                            // cmd_xbar_demux_001:src25_valid -> cmd_xbar_mux_025:sink0_valid
	wire          cmd_xbar_demux_001_src25_startofpacket;                                                                                    // cmd_xbar_demux_001:src25_startofpacket -> cmd_xbar_mux_025:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src25_data;                                                                                             // cmd_xbar_demux_001:src25_data -> cmd_xbar_mux_025:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src25_channel;                                                                                          // cmd_xbar_demux_001:src25_channel -> cmd_xbar_mux_025:sink0_channel
	wire          cmd_xbar_demux_001_src25_ready;                                                                                            // cmd_xbar_mux_025:sink0_ready -> cmd_xbar_demux_001:src25_ready
	wire          cmd_xbar_demux_001_src26_endofpacket;                                                                                      // cmd_xbar_demux_001:src26_endofpacket -> cmd_xbar_mux_026:sink0_endofpacket
	wire          cmd_xbar_demux_001_src26_valid;                                                                                            // cmd_xbar_demux_001:src26_valid -> cmd_xbar_mux_026:sink0_valid
	wire          cmd_xbar_demux_001_src26_startofpacket;                                                                                    // cmd_xbar_demux_001:src26_startofpacket -> cmd_xbar_mux_026:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src26_data;                                                                                             // cmd_xbar_demux_001:src26_data -> cmd_xbar_mux_026:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src26_channel;                                                                                          // cmd_xbar_demux_001:src26_channel -> cmd_xbar_mux_026:sink0_channel
	wire          cmd_xbar_demux_001_src26_ready;                                                                                            // cmd_xbar_mux_026:sink0_ready -> cmd_xbar_demux_001:src26_ready
	wire          cmd_xbar_demux_001_src27_endofpacket;                                                                                      // cmd_xbar_demux_001:src27_endofpacket -> cmd_xbar_mux_027:sink0_endofpacket
	wire          cmd_xbar_demux_001_src27_valid;                                                                                            // cmd_xbar_demux_001:src27_valid -> cmd_xbar_mux_027:sink0_valid
	wire          cmd_xbar_demux_001_src27_startofpacket;                                                                                    // cmd_xbar_demux_001:src27_startofpacket -> cmd_xbar_mux_027:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src27_data;                                                                                             // cmd_xbar_demux_001:src27_data -> cmd_xbar_mux_027:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src27_channel;                                                                                          // cmd_xbar_demux_001:src27_channel -> cmd_xbar_mux_027:sink0_channel
	wire          cmd_xbar_demux_001_src27_ready;                                                                                            // cmd_xbar_mux_027:sink0_ready -> cmd_xbar_demux_001:src27_ready
	wire          cmd_xbar_demux_001_src28_endofpacket;                                                                                      // cmd_xbar_demux_001:src28_endofpacket -> cmd_xbar_mux_028:sink0_endofpacket
	wire          cmd_xbar_demux_001_src28_valid;                                                                                            // cmd_xbar_demux_001:src28_valid -> cmd_xbar_mux_028:sink0_valid
	wire          cmd_xbar_demux_001_src28_startofpacket;                                                                                    // cmd_xbar_demux_001:src28_startofpacket -> cmd_xbar_mux_028:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src28_data;                                                                                             // cmd_xbar_demux_001:src28_data -> cmd_xbar_mux_028:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src28_channel;                                                                                          // cmd_xbar_demux_001:src28_channel -> cmd_xbar_mux_028:sink0_channel
	wire          cmd_xbar_demux_001_src28_ready;                                                                                            // cmd_xbar_mux_028:sink0_ready -> cmd_xbar_demux_001:src28_ready
	wire          cmd_xbar_demux_001_src29_endofpacket;                                                                                      // cmd_xbar_demux_001:src29_endofpacket -> cmd_xbar_mux_029:sink0_endofpacket
	wire          cmd_xbar_demux_001_src29_valid;                                                                                            // cmd_xbar_demux_001:src29_valid -> cmd_xbar_mux_029:sink0_valid
	wire          cmd_xbar_demux_001_src29_startofpacket;                                                                                    // cmd_xbar_demux_001:src29_startofpacket -> cmd_xbar_mux_029:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src29_data;                                                                                             // cmd_xbar_demux_001:src29_data -> cmd_xbar_mux_029:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src29_channel;                                                                                          // cmd_xbar_demux_001:src29_channel -> cmd_xbar_mux_029:sink0_channel
	wire          cmd_xbar_demux_001_src29_ready;                                                                                            // cmd_xbar_mux_029:sink0_ready -> cmd_xbar_demux_001:src29_ready
	wire          cmd_xbar_demux_001_src30_endofpacket;                                                                                      // cmd_xbar_demux_001:src30_endofpacket -> cmd_xbar_mux_030:sink0_endofpacket
	wire          cmd_xbar_demux_001_src30_valid;                                                                                            // cmd_xbar_demux_001:src30_valid -> cmd_xbar_mux_030:sink0_valid
	wire          cmd_xbar_demux_001_src30_startofpacket;                                                                                    // cmd_xbar_demux_001:src30_startofpacket -> cmd_xbar_mux_030:sink0_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src30_data;                                                                                             // cmd_xbar_demux_001:src30_data -> cmd_xbar_mux_030:sink0_data
	wire   [30:0] cmd_xbar_demux_001_src30_channel;                                                                                          // cmd_xbar_demux_001:src30_channel -> cmd_xbar_mux_030:sink0_channel
	wire          cmd_xbar_demux_001_src30_ready;                                                                                            // cmd_xbar_mux_030:sink0_ready -> cmd_xbar_demux_001:src30_ready
	wire          rsp_xbar_demux_src0_endofpacket;                                                                                           // rsp_xbar_demux:src0_endofpacket -> rsp_xbar_mux:sink0_endofpacket
	wire          rsp_xbar_demux_src0_valid;                                                                                                 // rsp_xbar_demux:src0_valid -> rsp_xbar_mux:sink0_valid
	wire          rsp_xbar_demux_src0_startofpacket;                                                                                         // rsp_xbar_demux:src0_startofpacket -> rsp_xbar_mux:sink0_startofpacket
	wire  [106:0] rsp_xbar_demux_src0_data;                                                                                                  // rsp_xbar_demux:src0_data -> rsp_xbar_mux:sink0_data
	wire   [30:0] rsp_xbar_demux_src0_channel;                                                                                               // rsp_xbar_demux:src0_channel -> rsp_xbar_mux:sink0_channel
	wire          rsp_xbar_demux_src0_ready;                                                                                                 // rsp_xbar_mux:sink0_ready -> rsp_xbar_demux:src0_ready
	wire          rsp_xbar_demux_src1_endofpacket;                                                                                           // rsp_xbar_demux:src1_endofpacket -> rsp_xbar_mux_001:sink0_endofpacket
	wire          rsp_xbar_demux_src1_valid;                                                                                                 // rsp_xbar_demux:src1_valid -> rsp_xbar_mux_001:sink0_valid
	wire          rsp_xbar_demux_src1_startofpacket;                                                                                         // rsp_xbar_demux:src1_startofpacket -> rsp_xbar_mux_001:sink0_startofpacket
	wire  [106:0] rsp_xbar_demux_src1_data;                                                                                                  // rsp_xbar_demux:src1_data -> rsp_xbar_mux_001:sink0_data
	wire   [30:0] rsp_xbar_demux_src1_channel;                                                                                               // rsp_xbar_demux:src1_channel -> rsp_xbar_mux_001:sink0_channel
	wire          rsp_xbar_demux_src1_ready;                                                                                                 // rsp_xbar_mux_001:sink0_ready -> rsp_xbar_demux:src1_ready
	wire          rsp_xbar_demux_001_src0_endofpacket;                                                                                       // rsp_xbar_demux_001:src0_endofpacket -> rsp_xbar_mux:sink1_endofpacket
	wire          rsp_xbar_demux_001_src0_valid;                                                                                             // rsp_xbar_demux_001:src0_valid -> rsp_xbar_mux:sink1_valid
	wire          rsp_xbar_demux_001_src0_startofpacket;                                                                                     // rsp_xbar_demux_001:src0_startofpacket -> rsp_xbar_mux:sink1_startofpacket
	wire  [106:0] rsp_xbar_demux_001_src0_data;                                                                                              // rsp_xbar_demux_001:src0_data -> rsp_xbar_mux:sink1_data
	wire   [30:0] rsp_xbar_demux_001_src0_channel;                                                                                           // rsp_xbar_demux_001:src0_channel -> rsp_xbar_mux:sink1_channel
	wire          rsp_xbar_demux_001_src0_ready;                                                                                             // rsp_xbar_mux:sink1_ready -> rsp_xbar_demux_001:src0_ready
	wire          rsp_xbar_demux_001_src1_endofpacket;                                                                                       // rsp_xbar_demux_001:src1_endofpacket -> rsp_xbar_mux_001:sink1_endofpacket
	wire          rsp_xbar_demux_001_src1_valid;                                                                                             // rsp_xbar_demux_001:src1_valid -> rsp_xbar_mux_001:sink1_valid
	wire          rsp_xbar_demux_001_src1_startofpacket;                                                                                     // rsp_xbar_demux_001:src1_startofpacket -> rsp_xbar_mux_001:sink1_startofpacket
	wire  [106:0] rsp_xbar_demux_001_src1_data;                                                                                              // rsp_xbar_demux_001:src1_data -> rsp_xbar_mux_001:sink1_data
	wire   [30:0] rsp_xbar_demux_001_src1_channel;                                                                                           // rsp_xbar_demux_001:src1_channel -> rsp_xbar_mux_001:sink1_channel
	wire          rsp_xbar_demux_001_src1_ready;                                                                                             // rsp_xbar_mux_001:sink1_ready -> rsp_xbar_demux_001:src1_ready
	wire          rsp_xbar_demux_002_src0_endofpacket;                                                                                       // rsp_xbar_demux_002:src0_endofpacket -> rsp_xbar_mux:sink2_endofpacket
	wire          rsp_xbar_demux_002_src0_valid;                                                                                             // rsp_xbar_demux_002:src0_valid -> rsp_xbar_mux:sink2_valid
	wire          rsp_xbar_demux_002_src0_startofpacket;                                                                                     // rsp_xbar_demux_002:src0_startofpacket -> rsp_xbar_mux:sink2_startofpacket
	wire  [106:0] rsp_xbar_demux_002_src0_data;                                                                                              // rsp_xbar_demux_002:src0_data -> rsp_xbar_mux:sink2_data
	wire   [30:0] rsp_xbar_demux_002_src0_channel;                                                                                           // rsp_xbar_demux_002:src0_channel -> rsp_xbar_mux:sink2_channel
	wire          rsp_xbar_demux_002_src0_ready;                                                                                             // rsp_xbar_mux:sink2_ready -> rsp_xbar_demux_002:src0_ready
	wire          rsp_xbar_demux_002_src1_endofpacket;                                                                                       // rsp_xbar_demux_002:src1_endofpacket -> rsp_xbar_mux_001:sink2_endofpacket
	wire          rsp_xbar_demux_002_src1_valid;                                                                                             // rsp_xbar_demux_002:src1_valid -> rsp_xbar_mux_001:sink2_valid
	wire          rsp_xbar_demux_002_src1_startofpacket;                                                                                     // rsp_xbar_demux_002:src1_startofpacket -> rsp_xbar_mux_001:sink2_startofpacket
	wire  [106:0] rsp_xbar_demux_002_src1_data;                                                                                              // rsp_xbar_demux_002:src1_data -> rsp_xbar_mux_001:sink2_data
	wire   [30:0] rsp_xbar_demux_002_src1_channel;                                                                                           // rsp_xbar_demux_002:src1_channel -> rsp_xbar_mux_001:sink2_channel
	wire          rsp_xbar_demux_002_src1_ready;                                                                                             // rsp_xbar_mux_001:sink2_ready -> rsp_xbar_demux_002:src1_ready
	wire          rsp_xbar_demux_003_src0_endofpacket;                                                                                       // rsp_xbar_demux_003:src0_endofpacket -> rsp_xbar_mux_001:sink3_endofpacket
	wire          rsp_xbar_demux_003_src0_valid;                                                                                             // rsp_xbar_demux_003:src0_valid -> rsp_xbar_mux_001:sink3_valid
	wire          rsp_xbar_demux_003_src0_startofpacket;                                                                                     // rsp_xbar_demux_003:src0_startofpacket -> rsp_xbar_mux_001:sink3_startofpacket
	wire  [106:0] rsp_xbar_demux_003_src0_data;                                                                                              // rsp_xbar_demux_003:src0_data -> rsp_xbar_mux_001:sink3_data
	wire   [30:0] rsp_xbar_demux_003_src0_channel;                                                                                           // rsp_xbar_demux_003:src0_channel -> rsp_xbar_mux_001:sink3_channel
	wire          rsp_xbar_demux_003_src0_ready;                                                                                             // rsp_xbar_mux_001:sink3_ready -> rsp_xbar_demux_003:src0_ready
	wire          rsp_xbar_demux_004_src0_endofpacket;                                                                                       // rsp_xbar_demux_004:src0_endofpacket -> rsp_xbar_mux_001:sink4_endofpacket
	wire          rsp_xbar_demux_004_src0_valid;                                                                                             // rsp_xbar_demux_004:src0_valid -> rsp_xbar_mux_001:sink4_valid
	wire          rsp_xbar_demux_004_src0_startofpacket;                                                                                     // rsp_xbar_demux_004:src0_startofpacket -> rsp_xbar_mux_001:sink4_startofpacket
	wire  [106:0] rsp_xbar_demux_004_src0_data;                                                                                              // rsp_xbar_demux_004:src0_data -> rsp_xbar_mux_001:sink4_data
	wire   [30:0] rsp_xbar_demux_004_src0_channel;                                                                                           // rsp_xbar_demux_004:src0_channel -> rsp_xbar_mux_001:sink4_channel
	wire          rsp_xbar_demux_004_src0_ready;                                                                                             // rsp_xbar_mux_001:sink4_ready -> rsp_xbar_demux_004:src0_ready
	wire          rsp_xbar_demux_005_src0_endofpacket;                                                                                       // rsp_xbar_demux_005:src0_endofpacket -> rsp_xbar_mux_001:sink5_endofpacket
	wire          rsp_xbar_demux_005_src0_valid;                                                                                             // rsp_xbar_demux_005:src0_valid -> rsp_xbar_mux_001:sink5_valid
	wire          rsp_xbar_demux_005_src0_startofpacket;                                                                                     // rsp_xbar_demux_005:src0_startofpacket -> rsp_xbar_mux_001:sink5_startofpacket
	wire  [106:0] rsp_xbar_demux_005_src0_data;                                                                                              // rsp_xbar_demux_005:src0_data -> rsp_xbar_mux_001:sink5_data
	wire   [30:0] rsp_xbar_demux_005_src0_channel;                                                                                           // rsp_xbar_demux_005:src0_channel -> rsp_xbar_mux_001:sink5_channel
	wire          rsp_xbar_demux_005_src0_ready;                                                                                             // rsp_xbar_mux_001:sink5_ready -> rsp_xbar_demux_005:src0_ready
	wire          rsp_xbar_demux_006_src0_endofpacket;                                                                                       // rsp_xbar_demux_006:src0_endofpacket -> rsp_xbar_mux_001:sink6_endofpacket
	wire          rsp_xbar_demux_006_src0_valid;                                                                                             // rsp_xbar_demux_006:src0_valid -> rsp_xbar_mux_001:sink6_valid
	wire          rsp_xbar_demux_006_src0_startofpacket;                                                                                     // rsp_xbar_demux_006:src0_startofpacket -> rsp_xbar_mux_001:sink6_startofpacket
	wire  [106:0] rsp_xbar_demux_006_src0_data;                                                                                              // rsp_xbar_demux_006:src0_data -> rsp_xbar_mux_001:sink6_data
	wire   [30:0] rsp_xbar_demux_006_src0_channel;                                                                                           // rsp_xbar_demux_006:src0_channel -> rsp_xbar_mux_001:sink6_channel
	wire          rsp_xbar_demux_006_src0_ready;                                                                                             // rsp_xbar_mux_001:sink6_ready -> rsp_xbar_demux_006:src0_ready
	wire          rsp_xbar_demux_007_src0_endofpacket;                                                                                       // rsp_xbar_demux_007:src0_endofpacket -> rsp_xbar_mux_001:sink7_endofpacket
	wire          rsp_xbar_demux_007_src0_valid;                                                                                             // rsp_xbar_demux_007:src0_valid -> rsp_xbar_mux_001:sink7_valid
	wire          rsp_xbar_demux_007_src0_startofpacket;                                                                                     // rsp_xbar_demux_007:src0_startofpacket -> rsp_xbar_mux_001:sink7_startofpacket
	wire  [106:0] rsp_xbar_demux_007_src0_data;                                                                                              // rsp_xbar_demux_007:src0_data -> rsp_xbar_mux_001:sink7_data
	wire   [30:0] rsp_xbar_demux_007_src0_channel;                                                                                           // rsp_xbar_demux_007:src0_channel -> rsp_xbar_mux_001:sink7_channel
	wire          rsp_xbar_demux_007_src0_ready;                                                                                             // rsp_xbar_mux_001:sink7_ready -> rsp_xbar_demux_007:src0_ready
	wire          rsp_xbar_demux_008_src0_endofpacket;                                                                                       // rsp_xbar_demux_008:src0_endofpacket -> rsp_xbar_mux_001:sink8_endofpacket
	wire          rsp_xbar_demux_008_src0_valid;                                                                                             // rsp_xbar_demux_008:src0_valid -> rsp_xbar_mux_001:sink8_valid
	wire          rsp_xbar_demux_008_src0_startofpacket;                                                                                     // rsp_xbar_demux_008:src0_startofpacket -> rsp_xbar_mux_001:sink8_startofpacket
	wire  [106:0] rsp_xbar_demux_008_src0_data;                                                                                              // rsp_xbar_demux_008:src0_data -> rsp_xbar_mux_001:sink8_data
	wire   [30:0] rsp_xbar_demux_008_src0_channel;                                                                                           // rsp_xbar_demux_008:src0_channel -> rsp_xbar_mux_001:sink8_channel
	wire          rsp_xbar_demux_008_src0_ready;                                                                                             // rsp_xbar_mux_001:sink8_ready -> rsp_xbar_demux_008:src0_ready
	wire          rsp_xbar_demux_010_src0_endofpacket;                                                                                       // rsp_xbar_demux_010:src0_endofpacket -> rsp_xbar_mux_001:sink10_endofpacket
	wire          rsp_xbar_demux_010_src0_valid;                                                                                             // rsp_xbar_demux_010:src0_valid -> rsp_xbar_mux_001:sink10_valid
	wire          rsp_xbar_demux_010_src0_startofpacket;                                                                                     // rsp_xbar_demux_010:src0_startofpacket -> rsp_xbar_mux_001:sink10_startofpacket
	wire  [106:0] rsp_xbar_demux_010_src0_data;                                                                                              // rsp_xbar_demux_010:src0_data -> rsp_xbar_mux_001:sink10_data
	wire   [30:0] rsp_xbar_demux_010_src0_channel;                                                                                           // rsp_xbar_demux_010:src0_channel -> rsp_xbar_mux_001:sink10_channel
	wire          rsp_xbar_demux_010_src0_ready;                                                                                             // rsp_xbar_mux_001:sink10_ready -> rsp_xbar_demux_010:src0_ready
	wire          rsp_xbar_demux_011_src0_endofpacket;                                                                                       // rsp_xbar_demux_011:src0_endofpacket -> rsp_xbar_mux_001:sink11_endofpacket
	wire          rsp_xbar_demux_011_src0_valid;                                                                                             // rsp_xbar_demux_011:src0_valid -> rsp_xbar_mux_001:sink11_valid
	wire          rsp_xbar_demux_011_src0_startofpacket;                                                                                     // rsp_xbar_demux_011:src0_startofpacket -> rsp_xbar_mux_001:sink11_startofpacket
	wire  [106:0] rsp_xbar_demux_011_src0_data;                                                                                              // rsp_xbar_demux_011:src0_data -> rsp_xbar_mux_001:sink11_data
	wire   [30:0] rsp_xbar_demux_011_src0_channel;                                                                                           // rsp_xbar_demux_011:src0_channel -> rsp_xbar_mux_001:sink11_channel
	wire          rsp_xbar_demux_011_src0_ready;                                                                                             // rsp_xbar_mux_001:sink11_ready -> rsp_xbar_demux_011:src0_ready
	wire          rsp_xbar_demux_012_src0_endofpacket;                                                                                       // rsp_xbar_demux_012:src0_endofpacket -> rsp_xbar_mux_001:sink12_endofpacket
	wire          rsp_xbar_demux_012_src0_valid;                                                                                             // rsp_xbar_demux_012:src0_valid -> rsp_xbar_mux_001:sink12_valid
	wire          rsp_xbar_demux_012_src0_startofpacket;                                                                                     // rsp_xbar_demux_012:src0_startofpacket -> rsp_xbar_mux_001:sink12_startofpacket
	wire  [106:0] rsp_xbar_demux_012_src0_data;                                                                                              // rsp_xbar_demux_012:src0_data -> rsp_xbar_mux_001:sink12_data
	wire   [30:0] rsp_xbar_demux_012_src0_channel;                                                                                           // rsp_xbar_demux_012:src0_channel -> rsp_xbar_mux_001:sink12_channel
	wire          rsp_xbar_demux_012_src0_ready;                                                                                             // rsp_xbar_mux_001:sink12_ready -> rsp_xbar_demux_012:src0_ready
	wire          rsp_xbar_demux_013_src0_endofpacket;                                                                                       // rsp_xbar_demux_013:src0_endofpacket -> rsp_xbar_mux_001:sink13_endofpacket
	wire          rsp_xbar_demux_013_src0_valid;                                                                                             // rsp_xbar_demux_013:src0_valid -> rsp_xbar_mux_001:sink13_valid
	wire          rsp_xbar_demux_013_src0_startofpacket;                                                                                     // rsp_xbar_demux_013:src0_startofpacket -> rsp_xbar_mux_001:sink13_startofpacket
	wire  [106:0] rsp_xbar_demux_013_src0_data;                                                                                              // rsp_xbar_demux_013:src0_data -> rsp_xbar_mux_001:sink13_data
	wire   [30:0] rsp_xbar_demux_013_src0_channel;                                                                                           // rsp_xbar_demux_013:src0_channel -> rsp_xbar_mux_001:sink13_channel
	wire          rsp_xbar_demux_013_src0_ready;                                                                                             // rsp_xbar_mux_001:sink13_ready -> rsp_xbar_demux_013:src0_ready
	wire          rsp_xbar_demux_014_src0_endofpacket;                                                                                       // rsp_xbar_demux_014:src0_endofpacket -> rsp_xbar_mux_001:sink14_endofpacket
	wire          rsp_xbar_demux_014_src0_valid;                                                                                             // rsp_xbar_demux_014:src0_valid -> rsp_xbar_mux_001:sink14_valid
	wire          rsp_xbar_demux_014_src0_startofpacket;                                                                                     // rsp_xbar_demux_014:src0_startofpacket -> rsp_xbar_mux_001:sink14_startofpacket
	wire  [106:0] rsp_xbar_demux_014_src0_data;                                                                                              // rsp_xbar_demux_014:src0_data -> rsp_xbar_mux_001:sink14_data
	wire   [30:0] rsp_xbar_demux_014_src0_channel;                                                                                           // rsp_xbar_demux_014:src0_channel -> rsp_xbar_mux_001:sink14_channel
	wire          rsp_xbar_demux_014_src0_ready;                                                                                             // rsp_xbar_mux_001:sink14_ready -> rsp_xbar_demux_014:src0_ready
	wire          rsp_xbar_demux_015_src0_endofpacket;                                                                                       // rsp_xbar_demux_015:src0_endofpacket -> rsp_xbar_mux_001:sink15_endofpacket
	wire          rsp_xbar_demux_015_src0_valid;                                                                                             // rsp_xbar_demux_015:src0_valid -> rsp_xbar_mux_001:sink15_valid
	wire          rsp_xbar_demux_015_src0_startofpacket;                                                                                     // rsp_xbar_demux_015:src0_startofpacket -> rsp_xbar_mux_001:sink15_startofpacket
	wire  [106:0] rsp_xbar_demux_015_src0_data;                                                                                              // rsp_xbar_demux_015:src0_data -> rsp_xbar_mux_001:sink15_data
	wire   [30:0] rsp_xbar_demux_015_src0_channel;                                                                                           // rsp_xbar_demux_015:src0_channel -> rsp_xbar_mux_001:sink15_channel
	wire          rsp_xbar_demux_015_src0_ready;                                                                                             // rsp_xbar_mux_001:sink15_ready -> rsp_xbar_demux_015:src0_ready
	wire          rsp_xbar_demux_016_src0_endofpacket;                                                                                       // rsp_xbar_demux_016:src0_endofpacket -> rsp_xbar_mux_001:sink16_endofpacket
	wire          rsp_xbar_demux_016_src0_valid;                                                                                             // rsp_xbar_demux_016:src0_valid -> rsp_xbar_mux_001:sink16_valid
	wire          rsp_xbar_demux_016_src0_startofpacket;                                                                                     // rsp_xbar_demux_016:src0_startofpacket -> rsp_xbar_mux_001:sink16_startofpacket
	wire  [106:0] rsp_xbar_demux_016_src0_data;                                                                                              // rsp_xbar_demux_016:src0_data -> rsp_xbar_mux_001:sink16_data
	wire   [30:0] rsp_xbar_demux_016_src0_channel;                                                                                           // rsp_xbar_demux_016:src0_channel -> rsp_xbar_mux_001:sink16_channel
	wire          rsp_xbar_demux_016_src0_ready;                                                                                             // rsp_xbar_mux_001:sink16_ready -> rsp_xbar_demux_016:src0_ready
	wire          rsp_xbar_demux_017_src0_endofpacket;                                                                                       // rsp_xbar_demux_017:src0_endofpacket -> rsp_xbar_mux_001:sink17_endofpacket
	wire          rsp_xbar_demux_017_src0_valid;                                                                                             // rsp_xbar_demux_017:src0_valid -> rsp_xbar_mux_001:sink17_valid
	wire          rsp_xbar_demux_017_src0_startofpacket;                                                                                     // rsp_xbar_demux_017:src0_startofpacket -> rsp_xbar_mux_001:sink17_startofpacket
	wire  [106:0] rsp_xbar_demux_017_src0_data;                                                                                              // rsp_xbar_demux_017:src0_data -> rsp_xbar_mux_001:sink17_data
	wire   [30:0] rsp_xbar_demux_017_src0_channel;                                                                                           // rsp_xbar_demux_017:src0_channel -> rsp_xbar_mux_001:sink17_channel
	wire          rsp_xbar_demux_017_src0_ready;                                                                                             // rsp_xbar_mux_001:sink17_ready -> rsp_xbar_demux_017:src0_ready
	wire          rsp_xbar_demux_018_src0_endofpacket;                                                                                       // rsp_xbar_demux_018:src0_endofpacket -> rsp_xbar_mux_001:sink18_endofpacket
	wire          rsp_xbar_demux_018_src0_valid;                                                                                             // rsp_xbar_demux_018:src0_valid -> rsp_xbar_mux_001:sink18_valid
	wire          rsp_xbar_demux_018_src0_startofpacket;                                                                                     // rsp_xbar_demux_018:src0_startofpacket -> rsp_xbar_mux_001:sink18_startofpacket
	wire  [106:0] rsp_xbar_demux_018_src0_data;                                                                                              // rsp_xbar_demux_018:src0_data -> rsp_xbar_mux_001:sink18_data
	wire   [30:0] rsp_xbar_demux_018_src0_channel;                                                                                           // rsp_xbar_demux_018:src0_channel -> rsp_xbar_mux_001:sink18_channel
	wire          rsp_xbar_demux_018_src0_ready;                                                                                             // rsp_xbar_mux_001:sink18_ready -> rsp_xbar_demux_018:src0_ready
	wire          rsp_xbar_demux_019_src0_endofpacket;                                                                                       // rsp_xbar_demux_019:src0_endofpacket -> rsp_xbar_mux_001:sink19_endofpacket
	wire          rsp_xbar_demux_019_src0_valid;                                                                                             // rsp_xbar_demux_019:src0_valid -> rsp_xbar_mux_001:sink19_valid
	wire          rsp_xbar_demux_019_src0_startofpacket;                                                                                     // rsp_xbar_demux_019:src0_startofpacket -> rsp_xbar_mux_001:sink19_startofpacket
	wire  [106:0] rsp_xbar_demux_019_src0_data;                                                                                              // rsp_xbar_demux_019:src0_data -> rsp_xbar_mux_001:sink19_data
	wire   [30:0] rsp_xbar_demux_019_src0_channel;                                                                                           // rsp_xbar_demux_019:src0_channel -> rsp_xbar_mux_001:sink19_channel
	wire          rsp_xbar_demux_019_src0_ready;                                                                                             // rsp_xbar_mux_001:sink19_ready -> rsp_xbar_demux_019:src0_ready
	wire          rsp_xbar_demux_020_src0_endofpacket;                                                                                       // rsp_xbar_demux_020:src0_endofpacket -> rsp_xbar_mux_001:sink20_endofpacket
	wire          rsp_xbar_demux_020_src0_valid;                                                                                             // rsp_xbar_demux_020:src0_valid -> rsp_xbar_mux_001:sink20_valid
	wire          rsp_xbar_demux_020_src0_startofpacket;                                                                                     // rsp_xbar_demux_020:src0_startofpacket -> rsp_xbar_mux_001:sink20_startofpacket
	wire  [106:0] rsp_xbar_demux_020_src0_data;                                                                                              // rsp_xbar_demux_020:src0_data -> rsp_xbar_mux_001:sink20_data
	wire   [30:0] rsp_xbar_demux_020_src0_channel;                                                                                           // rsp_xbar_demux_020:src0_channel -> rsp_xbar_mux_001:sink20_channel
	wire          rsp_xbar_demux_020_src0_ready;                                                                                             // rsp_xbar_mux_001:sink20_ready -> rsp_xbar_demux_020:src0_ready
	wire          rsp_xbar_demux_021_src0_endofpacket;                                                                                       // rsp_xbar_demux_021:src0_endofpacket -> rsp_xbar_mux_001:sink21_endofpacket
	wire          rsp_xbar_demux_021_src0_valid;                                                                                             // rsp_xbar_demux_021:src0_valid -> rsp_xbar_mux_001:sink21_valid
	wire          rsp_xbar_demux_021_src0_startofpacket;                                                                                     // rsp_xbar_demux_021:src0_startofpacket -> rsp_xbar_mux_001:sink21_startofpacket
	wire  [106:0] rsp_xbar_demux_021_src0_data;                                                                                              // rsp_xbar_demux_021:src0_data -> rsp_xbar_mux_001:sink21_data
	wire   [30:0] rsp_xbar_demux_021_src0_channel;                                                                                           // rsp_xbar_demux_021:src0_channel -> rsp_xbar_mux_001:sink21_channel
	wire          rsp_xbar_demux_021_src0_ready;                                                                                             // rsp_xbar_mux_001:sink21_ready -> rsp_xbar_demux_021:src0_ready
	wire          rsp_xbar_demux_022_src0_endofpacket;                                                                                       // rsp_xbar_demux_022:src0_endofpacket -> rsp_xbar_mux_001:sink22_endofpacket
	wire          rsp_xbar_demux_022_src0_valid;                                                                                             // rsp_xbar_demux_022:src0_valid -> rsp_xbar_mux_001:sink22_valid
	wire          rsp_xbar_demux_022_src0_startofpacket;                                                                                     // rsp_xbar_demux_022:src0_startofpacket -> rsp_xbar_mux_001:sink22_startofpacket
	wire  [106:0] rsp_xbar_demux_022_src0_data;                                                                                              // rsp_xbar_demux_022:src0_data -> rsp_xbar_mux_001:sink22_data
	wire   [30:0] rsp_xbar_demux_022_src0_channel;                                                                                           // rsp_xbar_demux_022:src0_channel -> rsp_xbar_mux_001:sink22_channel
	wire          rsp_xbar_demux_022_src0_ready;                                                                                             // rsp_xbar_mux_001:sink22_ready -> rsp_xbar_demux_022:src0_ready
	wire          rsp_xbar_demux_023_src0_endofpacket;                                                                                       // rsp_xbar_demux_023:src0_endofpacket -> rsp_xbar_mux_001:sink23_endofpacket
	wire          rsp_xbar_demux_023_src0_valid;                                                                                             // rsp_xbar_demux_023:src0_valid -> rsp_xbar_mux_001:sink23_valid
	wire          rsp_xbar_demux_023_src0_startofpacket;                                                                                     // rsp_xbar_demux_023:src0_startofpacket -> rsp_xbar_mux_001:sink23_startofpacket
	wire  [106:0] rsp_xbar_demux_023_src0_data;                                                                                              // rsp_xbar_demux_023:src0_data -> rsp_xbar_mux_001:sink23_data
	wire   [30:0] rsp_xbar_demux_023_src0_channel;                                                                                           // rsp_xbar_demux_023:src0_channel -> rsp_xbar_mux_001:sink23_channel
	wire          rsp_xbar_demux_023_src0_ready;                                                                                             // rsp_xbar_mux_001:sink23_ready -> rsp_xbar_demux_023:src0_ready
	wire          rsp_xbar_demux_024_src0_endofpacket;                                                                                       // rsp_xbar_demux_024:src0_endofpacket -> rsp_xbar_mux_001:sink24_endofpacket
	wire          rsp_xbar_demux_024_src0_valid;                                                                                             // rsp_xbar_demux_024:src0_valid -> rsp_xbar_mux_001:sink24_valid
	wire          rsp_xbar_demux_024_src0_startofpacket;                                                                                     // rsp_xbar_demux_024:src0_startofpacket -> rsp_xbar_mux_001:sink24_startofpacket
	wire  [106:0] rsp_xbar_demux_024_src0_data;                                                                                              // rsp_xbar_demux_024:src0_data -> rsp_xbar_mux_001:sink24_data
	wire   [30:0] rsp_xbar_demux_024_src0_channel;                                                                                           // rsp_xbar_demux_024:src0_channel -> rsp_xbar_mux_001:sink24_channel
	wire          rsp_xbar_demux_024_src0_ready;                                                                                             // rsp_xbar_mux_001:sink24_ready -> rsp_xbar_demux_024:src0_ready
	wire          rsp_xbar_demux_025_src0_endofpacket;                                                                                       // rsp_xbar_demux_025:src0_endofpacket -> rsp_xbar_mux_001:sink25_endofpacket
	wire          rsp_xbar_demux_025_src0_valid;                                                                                             // rsp_xbar_demux_025:src0_valid -> rsp_xbar_mux_001:sink25_valid
	wire          rsp_xbar_demux_025_src0_startofpacket;                                                                                     // rsp_xbar_demux_025:src0_startofpacket -> rsp_xbar_mux_001:sink25_startofpacket
	wire  [106:0] rsp_xbar_demux_025_src0_data;                                                                                              // rsp_xbar_demux_025:src0_data -> rsp_xbar_mux_001:sink25_data
	wire   [30:0] rsp_xbar_demux_025_src0_channel;                                                                                           // rsp_xbar_demux_025:src0_channel -> rsp_xbar_mux_001:sink25_channel
	wire          rsp_xbar_demux_025_src0_ready;                                                                                             // rsp_xbar_mux_001:sink25_ready -> rsp_xbar_demux_025:src0_ready
	wire          rsp_xbar_demux_026_src0_endofpacket;                                                                                       // rsp_xbar_demux_026:src0_endofpacket -> rsp_xbar_mux_001:sink26_endofpacket
	wire          rsp_xbar_demux_026_src0_valid;                                                                                             // rsp_xbar_demux_026:src0_valid -> rsp_xbar_mux_001:sink26_valid
	wire          rsp_xbar_demux_026_src0_startofpacket;                                                                                     // rsp_xbar_demux_026:src0_startofpacket -> rsp_xbar_mux_001:sink26_startofpacket
	wire  [106:0] rsp_xbar_demux_026_src0_data;                                                                                              // rsp_xbar_demux_026:src0_data -> rsp_xbar_mux_001:sink26_data
	wire   [30:0] rsp_xbar_demux_026_src0_channel;                                                                                           // rsp_xbar_demux_026:src0_channel -> rsp_xbar_mux_001:sink26_channel
	wire          rsp_xbar_demux_026_src0_ready;                                                                                             // rsp_xbar_mux_001:sink26_ready -> rsp_xbar_demux_026:src0_ready
	wire          rsp_xbar_demux_027_src0_endofpacket;                                                                                       // rsp_xbar_demux_027:src0_endofpacket -> rsp_xbar_mux_001:sink27_endofpacket
	wire          rsp_xbar_demux_027_src0_valid;                                                                                             // rsp_xbar_demux_027:src0_valid -> rsp_xbar_mux_001:sink27_valid
	wire          rsp_xbar_demux_027_src0_startofpacket;                                                                                     // rsp_xbar_demux_027:src0_startofpacket -> rsp_xbar_mux_001:sink27_startofpacket
	wire  [106:0] rsp_xbar_demux_027_src0_data;                                                                                              // rsp_xbar_demux_027:src0_data -> rsp_xbar_mux_001:sink27_data
	wire   [30:0] rsp_xbar_demux_027_src0_channel;                                                                                           // rsp_xbar_demux_027:src0_channel -> rsp_xbar_mux_001:sink27_channel
	wire          rsp_xbar_demux_027_src0_ready;                                                                                             // rsp_xbar_mux_001:sink27_ready -> rsp_xbar_demux_027:src0_ready
	wire          rsp_xbar_demux_028_src0_endofpacket;                                                                                       // rsp_xbar_demux_028:src0_endofpacket -> rsp_xbar_mux_001:sink28_endofpacket
	wire          rsp_xbar_demux_028_src0_valid;                                                                                             // rsp_xbar_demux_028:src0_valid -> rsp_xbar_mux_001:sink28_valid
	wire          rsp_xbar_demux_028_src0_startofpacket;                                                                                     // rsp_xbar_demux_028:src0_startofpacket -> rsp_xbar_mux_001:sink28_startofpacket
	wire  [106:0] rsp_xbar_demux_028_src0_data;                                                                                              // rsp_xbar_demux_028:src0_data -> rsp_xbar_mux_001:sink28_data
	wire   [30:0] rsp_xbar_demux_028_src0_channel;                                                                                           // rsp_xbar_demux_028:src0_channel -> rsp_xbar_mux_001:sink28_channel
	wire          rsp_xbar_demux_028_src0_ready;                                                                                             // rsp_xbar_mux_001:sink28_ready -> rsp_xbar_demux_028:src0_ready
	wire          rsp_xbar_demux_029_src0_endofpacket;                                                                                       // rsp_xbar_demux_029:src0_endofpacket -> rsp_xbar_mux_001:sink29_endofpacket
	wire          rsp_xbar_demux_029_src0_valid;                                                                                             // rsp_xbar_demux_029:src0_valid -> rsp_xbar_mux_001:sink29_valid
	wire          rsp_xbar_demux_029_src0_startofpacket;                                                                                     // rsp_xbar_demux_029:src0_startofpacket -> rsp_xbar_mux_001:sink29_startofpacket
	wire  [106:0] rsp_xbar_demux_029_src0_data;                                                                                              // rsp_xbar_demux_029:src0_data -> rsp_xbar_mux_001:sink29_data
	wire   [30:0] rsp_xbar_demux_029_src0_channel;                                                                                           // rsp_xbar_demux_029:src0_channel -> rsp_xbar_mux_001:sink29_channel
	wire          rsp_xbar_demux_029_src0_ready;                                                                                             // rsp_xbar_mux_001:sink29_ready -> rsp_xbar_demux_029:src0_ready
	wire          rsp_xbar_demux_030_src0_endofpacket;                                                                                       // rsp_xbar_demux_030:src0_endofpacket -> rsp_xbar_mux_001:sink30_endofpacket
	wire          rsp_xbar_demux_030_src0_valid;                                                                                             // rsp_xbar_demux_030:src0_valid -> rsp_xbar_mux_001:sink30_valid
	wire          rsp_xbar_demux_030_src0_startofpacket;                                                                                     // rsp_xbar_demux_030:src0_startofpacket -> rsp_xbar_mux_001:sink30_startofpacket
	wire  [106:0] rsp_xbar_demux_030_src0_data;                                                                                              // rsp_xbar_demux_030:src0_data -> rsp_xbar_mux_001:sink30_data
	wire   [30:0] rsp_xbar_demux_030_src0_channel;                                                                                           // rsp_xbar_demux_030:src0_channel -> rsp_xbar_mux_001:sink30_channel
	wire          rsp_xbar_demux_030_src0_ready;                                                                                             // rsp_xbar_mux_001:sink30_ready -> rsp_xbar_demux_030:src0_ready
	wire          id_router_001_src_endofpacket;                                                                                             // id_router_001:src_endofpacket -> width_adapter:in_endofpacket
	wire          id_router_001_src_valid;                                                                                                   // id_router_001:src_valid -> width_adapter:in_valid
	wire          id_router_001_src_startofpacket;                                                                                           // id_router_001:src_startofpacket -> width_adapter:in_startofpacket
	wire   [88:0] id_router_001_src_data;                                                                                                    // id_router_001:src_data -> width_adapter:in_data
	wire   [30:0] id_router_001_src_channel;                                                                                                 // id_router_001:src_channel -> width_adapter:in_channel
	wire          id_router_001_src_ready;                                                                                                   // width_adapter:in_ready -> id_router_001:src_ready
	wire          width_adapter_src_endofpacket;                                                                                             // width_adapter:out_endofpacket -> rsp_xbar_demux_001:sink_endofpacket
	wire          width_adapter_src_valid;                                                                                                   // width_adapter:out_valid -> rsp_xbar_demux_001:sink_valid
	wire          width_adapter_src_startofpacket;                                                                                           // width_adapter:out_startofpacket -> rsp_xbar_demux_001:sink_startofpacket
	wire  [106:0] width_adapter_src_data;                                                                                                    // width_adapter:out_data -> rsp_xbar_demux_001:sink_data
	wire          width_adapter_src_ready;                                                                                                   // rsp_xbar_demux_001:sink_ready -> width_adapter:out_ready
	wire   [30:0] width_adapter_src_channel;                                                                                                 // width_adapter:out_channel -> rsp_xbar_demux_001:sink_channel
	wire          id_router_010_src_endofpacket;                                                                                             // id_router_010:src_endofpacket -> width_adapter_001:in_endofpacket
	wire          id_router_010_src_valid;                                                                                                   // id_router_010:src_valid -> width_adapter_001:in_valid
	wire          id_router_010_src_startofpacket;                                                                                           // id_router_010:src_startofpacket -> width_adapter_001:in_startofpacket
	wire   [79:0] id_router_010_src_data;                                                                                                    // id_router_010:src_data -> width_adapter_001:in_data
	wire   [30:0] id_router_010_src_channel;                                                                                                 // id_router_010:src_channel -> width_adapter_001:in_channel
	wire          id_router_010_src_ready;                                                                                                   // width_adapter_001:in_ready -> id_router_010:src_ready
	wire          width_adapter_001_src_endofpacket;                                                                                         // width_adapter_001:out_endofpacket -> rsp_xbar_demux_010:sink_endofpacket
	wire          width_adapter_001_src_valid;                                                                                               // width_adapter_001:out_valid -> rsp_xbar_demux_010:sink_valid
	wire          width_adapter_001_src_startofpacket;                                                                                       // width_adapter_001:out_startofpacket -> rsp_xbar_demux_010:sink_startofpacket
	wire  [106:0] width_adapter_001_src_data;                                                                                                // width_adapter_001:out_data -> rsp_xbar_demux_010:sink_data
	wire          width_adapter_001_src_ready;                                                                                               // rsp_xbar_demux_010:sink_ready -> width_adapter_001:out_ready
	wire   [30:0] width_adapter_001_src_channel;                                                                                             // width_adapter_001:out_channel -> rsp_xbar_demux_010:sink_channel
	wire          cmd_xbar_mux_001_src_endofpacket;                                                                                          // cmd_xbar_mux_001:src_endofpacket -> width_adapter_002:in_endofpacket
	wire          cmd_xbar_mux_001_src_valid;                                                                                                // cmd_xbar_mux_001:src_valid -> width_adapter_002:in_valid
	wire          cmd_xbar_mux_001_src_startofpacket;                                                                                        // cmd_xbar_mux_001:src_startofpacket -> width_adapter_002:in_startofpacket
	wire  [106:0] cmd_xbar_mux_001_src_data;                                                                                                 // cmd_xbar_mux_001:src_data -> width_adapter_002:in_data
	wire   [30:0] cmd_xbar_mux_001_src_channel;                                                                                              // cmd_xbar_mux_001:src_channel -> width_adapter_002:in_channel
	wire          cmd_xbar_mux_001_src_ready;                                                                                                // width_adapter_002:in_ready -> cmd_xbar_mux_001:src_ready
	wire          width_adapter_002_src_endofpacket;                                                                                         // width_adapter_002:out_endofpacket -> burst_adapter:sink0_endofpacket
	wire          width_adapter_002_src_valid;                                                                                               // width_adapter_002:out_valid -> burst_adapter:sink0_valid
	wire          width_adapter_002_src_startofpacket;                                                                                       // width_adapter_002:out_startofpacket -> burst_adapter:sink0_startofpacket
	wire   [88:0] width_adapter_002_src_data;                                                                                                // width_adapter_002:out_data -> burst_adapter:sink0_data
	wire          width_adapter_002_src_ready;                                                                                               // burst_adapter:sink0_ready -> width_adapter_002:out_ready
	wire   [30:0] width_adapter_002_src_channel;                                                                                             // width_adapter_002:out_channel -> burst_adapter:sink0_channel
	wire          cmd_xbar_mux_010_src_endofpacket;                                                                                          // cmd_xbar_mux_010:src_endofpacket -> width_adapter_003:in_endofpacket
	wire          cmd_xbar_mux_010_src_valid;                                                                                                // cmd_xbar_mux_010:src_valid -> width_adapter_003:in_valid
	wire          cmd_xbar_mux_010_src_startofpacket;                                                                                        // cmd_xbar_mux_010:src_startofpacket -> width_adapter_003:in_startofpacket
	wire  [106:0] cmd_xbar_mux_010_src_data;                                                                                                 // cmd_xbar_mux_010:src_data -> width_adapter_003:in_data
	wire   [30:0] cmd_xbar_mux_010_src_channel;                                                                                              // cmd_xbar_mux_010:src_channel -> width_adapter_003:in_channel
	wire          cmd_xbar_mux_010_src_ready;                                                                                                // width_adapter_003:in_ready -> cmd_xbar_mux_010:src_ready
	wire          width_adapter_003_src_endofpacket;                                                                                         // width_adapter_003:out_endofpacket -> burst_adapter_001:sink0_endofpacket
	wire          width_adapter_003_src_valid;                                                                                               // width_adapter_003:out_valid -> burst_adapter_001:sink0_valid
	wire          width_adapter_003_src_startofpacket;                                                                                       // width_adapter_003:out_startofpacket -> burst_adapter_001:sink0_startofpacket
	wire   [79:0] width_adapter_003_src_data;                                                                                                // width_adapter_003:out_data -> burst_adapter_001:sink0_data
	wire          width_adapter_003_src_ready;                                                                                               // burst_adapter_001:sink0_ready -> width_adapter_003:out_ready
	wire   [30:0] width_adapter_003_src_channel;                                                                                             // width_adapter_003:out_channel -> burst_adapter_001:sink0_channel
	wire          cmd_xbar_demux_001_src9_endofpacket;                                                                                       // cmd_xbar_demux_001:src9_endofpacket -> crosser:in_endofpacket
	wire          cmd_xbar_demux_001_src9_valid;                                                                                             // cmd_xbar_demux_001:src9_valid -> crosser:in_valid
	wire          cmd_xbar_demux_001_src9_startofpacket;                                                                                     // cmd_xbar_demux_001:src9_startofpacket -> crosser:in_startofpacket
	wire  [106:0] cmd_xbar_demux_001_src9_data;                                                                                              // cmd_xbar_demux_001:src9_data -> crosser:in_data
	wire   [30:0] cmd_xbar_demux_001_src9_channel;                                                                                           // cmd_xbar_demux_001:src9_channel -> crosser:in_channel
	wire          cmd_xbar_demux_001_src9_ready;                                                                                             // crosser:in_ready -> cmd_xbar_demux_001:src9_ready
	wire          crosser_out_endofpacket;                                                                                                   // crosser:out_endofpacket -> cmd_xbar_mux_009:sink0_endofpacket
	wire          crosser_out_valid;                                                                                                         // crosser:out_valid -> cmd_xbar_mux_009:sink0_valid
	wire          crosser_out_startofpacket;                                                                                                 // crosser:out_startofpacket -> cmd_xbar_mux_009:sink0_startofpacket
	wire  [106:0] crosser_out_data;                                                                                                          // crosser:out_data -> cmd_xbar_mux_009:sink0_data
	wire   [30:0] crosser_out_channel;                                                                                                       // crosser:out_channel -> cmd_xbar_mux_009:sink0_channel
	wire          crosser_out_ready;                                                                                                         // cmd_xbar_mux_009:sink0_ready -> crosser:out_ready
	wire          rsp_xbar_demux_009_src0_endofpacket;                                                                                       // rsp_xbar_demux_009:src0_endofpacket -> crosser_001:in_endofpacket
	wire          rsp_xbar_demux_009_src0_valid;                                                                                             // rsp_xbar_demux_009:src0_valid -> crosser_001:in_valid
	wire          rsp_xbar_demux_009_src0_startofpacket;                                                                                     // rsp_xbar_demux_009:src0_startofpacket -> crosser_001:in_startofpacket
	wire  [106:0] rsp_xbar_demux_009_src0_data;                                                                                              // rsp_xbar_demux_009:src0_data -> crosser_001:in_data
	wire   [30:0] rsp_xbar_demux_009_src0_channel;                                                                                           // rsp_xbar_demux_009:src0_channel -> crosser_001:in_channel
	wire          rsp_xbar_demux_009_src0_ready;                                                                                             // crosser_001:in_ready -> rsp_xbar_demux_009:src0_ready
	wire          crosser_001_out_endofpacket;                                                                                               // crosser_001:out_endofpacket -> rsp_xbar_mux_001:sink9_endofpacket
	wire          crosser_001_out_valid;                                                                                                     // crosser_001:out_valid -> rsp_xbar_mux_001:sink9_valid
	wire          crosser_001_out_startofpacket;                                                                                             // crosser_001:out_startofpacket -> rsp_xbar_mux_001:sink9_startofpacket
	wire  [106:0] crosser_001_out_data;                                                                                                      // crosser_001:out_data -> rsp_xbar_mux_001:sink9_data
	wire   [30:0] crosser_001_out_channel;                                                                                                   // crosser_001:out_channel -> rsp_xbar_mux_001:sink9_channel
	wire          crosser_001_out_ready;                                                                                                     // rsp_xbar_mux_001:sink9_ready -> crosser_001:out_ready
	wire   [30:0] limiter_cmd_valid_data;                                                                                                    // limiter:cmd_src_valid -> cmd_xbar_demux:sink_valid

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (27),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (27),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (1),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (1),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) cpu_instruction_master_translator (
		.clk                      (sys_clk_clk_clk),                                                           //                       clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                                   //                     reset.reset
		.uav_address              (cpu_instruction_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (cpu_instruction_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (cpu_instruction_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (cpu_instruction_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (cpu_instruction_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (cpu_instruction_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (cpu_instruction_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (cpu_instruction_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (cpu_instruction_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (cpu_instruction_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (cpu_instruction_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (CPU_instruction_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (CPU_instruction_master_waitrequest),                                        //                          .waitrequest
		.av_read                  (CPU_instruction_master_read),                                               //                          .read
		.av_readdata              (CPU_instruction_master_readdata),                                           //                          .readdata
		.av_readdatavalid         (CPU_instruction_master_readdatavalid),                                      //                          .readdatavalid
		.av_burstcount            (1'b1),                                                                      //               (terminated)
		.av_byteenable            (4'b1111),                                                                   //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                                      //               (terminated)
		.av_begintransfer         (1'b0),                                                                      //               (terminated)
		.av_chipselect            (1'b0),                                                                      //               (terminated)
		.av_write                 (1'b0),                                                                      //               (terminated)
		.av_writedata             (32'b00000000000000000000000000000000),                                      //               (terminated)
		.av_lock                  (1'b0),                                                                      //               (terminated)
		.av_debugaccess           (1'b0),                                                                      //               (terminated)
		.uav_clken                (),                                                                          //               (terminated)
		.av_clken                 (1'b1),                                                                      //               (terminated)
		.uav_response             (2'b00),                                                                     //               (terminated)
		.av_response              (),                                                                          //               (terminated)
		.uav_writeresponserequest (),                                                                          //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                      //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                      //               (terminated)
		.av_writeresponsevalid    ()                                                                           //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (27),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (27),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) cpu_data_master_translator (
		.clk                      (sys_clk_clk_clk),                                                    //                       clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                            //                     reset.reset
		.uav_address              (cpu_data_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (cpu_data_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (cpu_data_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (cpu_data_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (cpu_data_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (cpu_data_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (cpu_data_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (cpu_data_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (cpu_data_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (cpu_data_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (cpu_data_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (CPU_data_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (CPU_data_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable            (CPU_data_master_byteenable),                                         //                          .byteenable
		.av_read                  (CPU_data_master_read),                                               //                          .read
		.av_readdata              (CPU_data_master_readdata),                                           //                          .readdata
		.av_write                 (CPU_data_master_write),                                              //                          .write
		.av_writedata             (CPU_data_master_writedata),                                          //                          .writedata
		.av_debugaccess           (CPU_data_master_debugaccess),                                        //                          .debugaccess
		.av_burstcount            (1'b1),                                                               //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                               //               (terminated)
		.av_begintransfer         (1'b0),                                                               //               (terminated)
		.av_chipselect            (1'b0),                                                               //               (terminated)
		.av_readdatavalid         (),                                                                   //               (terminated)
		.av_lock                  (1'b0),                                                               //               (terminated)
		.uav_clken                (),                                                                   //               (terminated)
		.av_clken                 (1'b1),                                                               //               (terminated)
		.uav_response             (2'b00),                                                              //               (terminated)
		.av_response              (),                                                                   //               (terminated)
		.uav_writeresponserequest (),                                                                   //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                               //               (terminated)
		.av_writeresponserequest  (1'b0),                                                               //               (terminated)
		.av_writeresponsevalid    ()                                                                    //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (9),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) cpu_jtag_debug_module_translator (
		.clk                      (sys_clk_clk_clk),                                                                  //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                                          //                    reset.reset
		.uav_address              (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (CPU_jtag_debug_module_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (CPU_jtag_debug_module_write),                                                      //                         .write
		.av_read                  (CPU_jtag_debug_module_read),                                                       //                         .read
		.av_readdata              (CPU_jtag_debug_module_readdata),                                                   //                         .readdata
		.av_writedata             (CPU_jtag_debug_module_writedata),                                                  //                         .writedata
		.av_byteenable            (CPU_jtag_debug_module_byteenable),                                                 //                         .byteenable
		.av_waitrequest           (CPU_jtag_debug_module_waitrequest),                                                //                         .waitrequest
		.av_debugaccess           (CPU_jtag_debug_module_debugaccess),                                                //                         .debugaccess
		.av_begintransfer         (),                                                                                 //              (terminated)
		.av_beginbursttransfer    (),                                                                                 //              (terminated)
		.av_burstcount            (),                                                                                 //              (terminated)
		.av_readdatavalid         (1'b0),                                                                             //              (terminated)
		.av_writebyteenable       (),                                                                                 //              (terminated)
		.av_lock                  (),                                                                                 //              (terminated)
		.av_chipselect            (),                                                                                 //              (terminated)
		.av_clken                 (),                                                                                 //              (terminated)
		.uav_clken                (1'b0),                                                                             //              (terminated)
		.av_outputenable          (),                                                                                 //              (terminated)
		.uav_response             (),                                                                                 //              (terminated)
		.av_response              (2'b00),                                                                            //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                             //              (terminated)
		.uav_writeresponsevalid   (),                                                                                 //              (terminated)
		.av_writeresponserequest  (),                                                                                 //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                              //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (24),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (16),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (2),
		.UAV_BYTEENABLE_W               (2),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (2),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (1),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (2),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sdram_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                     //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                             //                    reset.reset
		.uav_address              (sdram_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sdram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sdram_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sdram_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sdram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sdram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sdram_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sdram_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sdram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (SDRAM_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (SDRAM_s1_write),                                                      //                         .write
		.av_read                  (SDRAM_s1_read),                                                       //                         .read
		.av_readdata              (SDRAM_s1_readdata),                                                   //                         .readdata
		.av_writedata             (SDRAM_s1_writedata),                                                  //                         .writedata
		.av_byteenable            (SDRAM_s1_byteenable),                                                 //                         .byteenable
		.av_readdatavalid         (SDRAM_s1_readdatavalid),                                              //                         .readdatavalid
		.av_waitrequest           (SDRAM_s1_waitrequest),                                                //                         .waitrequest
		.av_chipselect            (SDRAM_s1_chipselect),                                                 //                         .chipselect
		.av_begintransfer         (),                                                                    //              (terminated)
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (9),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) epcs_epcs_control_port_translator (
		.clk                      (sys_clk_clk_clk),                                                                   //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                                           //                    reset.reset
		.uav_address              (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (EPCS_epcs_control_port_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (EPCS_epcs_control_port_write),                                                      //                         .write
		.av_read                  (EPCS_epcs_control_port_read),                                                       //                         .read
		.av_readdata              (EPCS_epcs_control_port_readdata),                                                   //                         .readdata
		.av_writedata             (EPCS_epcs_control_port_writedata),                                                  //                         .writedata
		.av_chipselect            (EPCS_epcs_control_port_chipselect),                                                 //                         .chipselect
		.av_begintransfer         (),                                                                                  //              (terminated)
		.av_beginbursttransfer    (),                                                                                  //              (terminated)
		.av_burstcount            (),                                                                                  //              (terminated)
		.av_byteenable            (),                                                                                  //              (terminated)
		.av_readdatavalid         (1'b0),                                                                              //              (terminated)
		.av_waitrequest           (1'b0),                                                                              //              (terminated)
		.av_writebyteenable       (),                                                                                  //              (terminated)
		.av_lock                  (),                                                                                  //              (terminated)
		.av_clken                 (),                                                                                  //              (terminated)
		.uav_clken                (1'b0),                                                                              //              (terminated)
		.av_debugaccess           (),                                                                                  //              (terminated)
		.av_outputenable          (),                                                                                  //              (terminated)
		.uav_response             (),                                                                                  //              (terminated)
		.av_response              (2'b00),                                                                             //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                              //              (terminated)
		.uav_writeresponsevalid   (),                                                                                  //              (terminated)
		.av_writeresponserequest  (),                                                                                  //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                               //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_id_control_slave_translator (
		.clk                      (sys_clk_clk_clk),                                                                 //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                                         //                    reset.reset
		.uav_address              (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sys_id_control_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (sys_id_control_slave_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                                //              (terminated)
		.av_read                  (),                                                                                //              (terminated)
		.av_writedata             (),                                                                                //              (terminated)
		.av_begintransfer         (),                                                                                //              (terminated)
		.av_beginbursttransfer    (),                                                                                //              (terminated)
		.av_burstcount            (),                                                                                //              (terminated)
		.av_byteenable            (),                                                                                //              (terminated)
		.av_readdatavalid         (1'b0),                                                                            //              (terminated)
		.av_waitrequest           (1'b0),                                                                            //              (terminated)
		.av_writebyteenable       (),                                                                                //              (terminated)
		.av_lock                  (),                                                                                //              (terminated)
		.av_chipselect            (),                                                                                //              (terminated)
		.av_clken                 (),                                                                                //              (terminated)
		.uav_clken                (1'b0),                                                                            //              (terminated)
		.av_debugaccess           (),                                                                                //              (terminated)
		.av_outputenable          (),                                                                                //              (terminated)
		.uav_response             (),                                                                                //              (terminated)
		.av_response              (2'b00),                                                                           //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                            //              (terminated)
		.uav_writeresponsevalid   (),                                                                                //              (terminated)
		.av_writeresponserequest  (),                                                                                //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                             //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_timer_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                         //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                                 //                    reset.reset
		.uav_address              (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sys_timer_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (sys_timer_s1_write),                                                      //                         .write
		.av_readdata              (sys_timer_s1_readdata),                                                   //                         .readdata
		.av_writedata             (sys_timer_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (sys_timer_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                        //              (terminated)
		.av_begintransfer         (),                                                                        //              (terminated)
		.av_beginbursttransfer    (),                                                                        //              (terminated)
		.av_burstcount            (),                                                                        //              (terminated)
		.av_byteenable            (),                                                                        //              (terminated)
		.av_readdatavalid         (1'b0),                                                                    //              (terminated)
		.av_waitrequest           (1'b0),                                                                    //              (terminated)
		.av_writebyteenable       (),                                                                        //              (terminated)
		.av_lock                  (),                                                                        //              (terminated)
		.av_clken                 (),                                                                        //              (terminated)
		.uav_clken                (1'b0),                                                                    //              (terminated)
		.av_debugaccess           (),                                                                        //              (terminated)
		.av_outputenable          (),                                                                        //              (terminated)
		.uav_response             (),                                                                        //              (terminated)
		.av_response              (2'b00),                                                                   //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                    //              (terminated)
		.uav_writeresponsevalid   (),                                                                        //              (terminated)
		.av_writeresponserequest  (),                                                                        //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                     //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) led_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                   //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                           //                    reset.reset
		.uav_address              (led_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (led_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (led_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (led_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (led_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (led_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (led_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (led_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (led_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (led_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (led_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (LED_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (LED_s1_write),                                                      //                         .write
		.av_readdata              (LED_s1_readdata),                                                   //                         .readdata
		.av_writedata             (LED_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (LED_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                  //              (terminated)
		.av_begintransfer         (),                                                                  //              (terminated)
		.av_beginbursttransfer    (),                                                                  //              (terminated)
		.av_burstcount            (),                                                                  //              (terminated)
		.av_byteenable            (),                                                                  //              (terminated)
		.av_readdatavalid         (1'b0),                                                              //              (terminated)
		.av_waitrequest           (1'b0),                                                              //              (terminated)
		.av_writebyteenable       (),                                                                  //              (terminated)
		.av_lock                  (),                                                                  //              (terminated)
		.av_clken                 (),                                                                  //              (terminated)
		.uav_clken                (1'b0),                                                              //              (terminated)
		.av_debugaccess           (),                                                                  //              (terminated)
		.av_outputenable          (),                                                                  //              (terminated)
		.uav_response             (),                                                                  //              (terminated)
		.av_response              (2'b00),                                                             //              (terminated)
		.uav_writeresponserequest (1'b0),                                                              //              (terminated)
		.uav_writeresponsevalid   (),                                                                  //              (terminated)
		.av_writeresponserequest  (),                                                                  //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                               //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sw_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                  //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                          //                    reset.reset
		.uav_address              (sw_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sw_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sw_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sw_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sw_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sw_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sw_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sw_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sw_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sw_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sw_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (SW_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (SW_s1_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                 //              (terminated)
		.av_read                  (),                                                                 //              (terminated)
		.av_writedata             (),                                                                 //              (terminated)
		.av_begintransfer         (),                                                                 //              (terminated)
		.av_beginbursttransfer    (),                                                                 //              (terminated)
		.av_burstcount            (),                                                                 //              (terminated)
		.av_byteenable            (),                                                                 //              (terminated)
		.av_readdatavalid         (1'b0),                                                             //              (terminated)
		.av_waitrequest           (1'b0),                                                             //              (terminated)
		.av_writebyteenable       (),                                                                 //              (terminated)
		.av_lock                  (),                                                                 //              (terminated)
		.av_chipselect            (),                                                                 //              (terminated)
		.av_clken                 (),                                                                 //              (terminated)
		.uav_clken                (1'b0),                                                             //              (terminated)
		.av_debugaccess           (),                                                                 //              (terminated)
		.av_outputenable          (),                                                                 //              (terminated)
		.uav_response             (),                                                                 //              (terminated)
		.av_response              (2'b00),                                                            //              (terminated)
		.uav_writeresponserequest (1'b0),                                                             //              (terminated)
		.uav_writeresponsevalid   (),                                                                 //              (terminated)
		.av_writeresponserequest  (),                                                                 //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                              //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) key_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                   //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                           //                    reset.reset
		.uav_address              (key_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (key_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (key_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (key_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (key_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (key_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (key_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (key_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (key_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (key_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (key_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (KEY_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (KEY_s1_write),                                                      //                         .write
		.av_readdata              (KEY_s1_readdata),                                                   //                         .readdata
		.av_writedata             (KEY_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (KEY_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                  //              (terminated)
		.av_begintransfer         (),                                                                  //              (terminated)
		.av_beginbursttransfer    (),                                                                  //              (terminated)
		.av_burstcount            (),                                                                  //              (terminated)
		.av_byteenable            (),                                                                  //              (terminated)
		.av_readdatavalid         (1'b0),                                                              //              (terminated)
		.av_waitrequest           (1'b0),                                                              //              (terminated)
		.av_writebyteenable       (),                                                                  //              (terminated)
		.av_lock                  (),                                                                  //              (terminated)
		.av_clken                 (),                                                                  //              (terminated)
		.uav_clken                (1'b0),                                                              //              (terminated)
		.av_debugaccess           (),                                                                  //              (terminated)
		.av_outputenable          (),                                                                  //              (terminated)
		.uav_response             (),                                                                  //              (terminated)
		.av_response              (2'b00),                                                             //              (terminated)
		.uav_writeresponserequest (1'b0),                                                              //              (terminated)
		.uav_writeresponsevalid   (),                                                                  //              (terminated)
		.av_writeresponserequest  (),                                                                  //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                               //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) jtag_avalon_jtag_slave_translator (
		.clk                      (sys_clk_clk_clk),                                                                   //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                                           //                    reset.reset
		.uav_address              (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (JTAG_avalon_jtag_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (JTAG_avalon_jtag_slave_write),                                                      //                         .write
		.av_read                  (JTAG_avalon_jtag_slave_read),                                                       //                         .read
		.av_readdata              (JTAG_avalon_jtag_slave_readdata),                                                   //                         .readdata
		.av_writedata             (JTAG_avalon_jtag_slave_writedata),                                                  //                         .writedata
		.av_waitrequest           (JTAG_avalon_jtag_slave_waitrequest),                                                //                         .waitrequest
		.av_chipselect            (JTAG_avalon_jtag_slave_chipselect),                                                 //                         .chipselect
		.av_begintransfer         (),                                                                                  //              (terminated)
		.av_beginbursttransfer    (),                                                                                  //              (terminated)
		.av_burstcount            (),                                                                                  //              (terminated)
		.av_byteenable            (),                                                                                  //              (terminated)
		.av_readdatavalid         (1'b0),                                                                              //              (terminated)
		.av_writebyteenable       (),                                                                                  //              (terminated)
		.av_lock                  (),                                                                                  //              (terminated)
		.av_clken                 (),                                                                                  //              (terminated)
		.uav_clken                (1'b0),                                                                              //              (terminated)
		.av_debugaccess           (),                                                                                  //              (terminated)
		.av_outputenable          (),                                                                                  //              (terminated)
		.uav_response             (),                                                                                  //              (terminated)
		.av_response              (2'b00),                                                                             //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                              //              (terminated)
		.uav_writeresponsevalid   (),                                                                                  //              (terminated)
		.av_writeresponserequest  (),                                                                                  //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                               //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_pll_pll_slave_translator (
		.clk                      (clk_50_clk_clk),                                                               //                      clk.clk
		.reset                    (sys_pll_inclk_interface_reset_reset_bridge_in_reset_reset),                    //                    reset.reset
		.uav_address              (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sys_pll_pll_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (sys_pll_pll_slave_write),                                                      //                         .write
		.av_read                  (sys_pll_pll_slave_read),                                                       //                         .read
		.av_readdata              (sys_pll_pll_slave_readdata),                                                   //                         .readdata
		.av_writedata             (sys_pll_pll_slave_writedata),                                                  //                         .writedata
		.av_begintransfer         (),                                                                             //              (terminated)
		.av_beginbursttransfer    (),                                                                             //              (terminated)
		.av_burstcount            (),                                                                             //              (terminated)
		.av_byteenable            (),                                                                             //              (terminated)
		.av_readdatavalid         (1'b0),                                                                         //              (terminated)
		.av_waitrequest           (1'b0),                                                                         //              (terminated)
		.av_writebyteenable       (),                                                                             //              (terminated)
		.av_lock                  (),                                                                             //              (terminated)
		.av_chipselect            (),                                                                             //              (terminated)
		.av_clken                 (),                                                                             //              (terminated)
		.uav_clken                (1'b0),                                                                         //              (terminated)
		.av_debugaccess           (),                                                                             //              (terminated)
		.av_outputenable          (),                                                                             //              (terminated)
		.uav_response             (),                                                                             //              (terminated)
		.av_response              (2'b00),                                                                        //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                         //              (terminated)
		.uav_writeresponsevalid   (),                                                                             //              (terminated)
		.av_writeresponserequest  (),                                                                             //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                          //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (8),
		.UAV_DATA_W                     (8),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (1),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (1),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (1),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator (
		.clk                      (sys_clk_clk_clk),                                                                                                 //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                                                                         //                    reset.reset
		.uav_address              (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_write),                                                      //                         .write
		.av_read                  (ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_read),                                                       //                         .read
		.av_readdata              (ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_readdata),                                                   //                         .readdata
		.av_writedata             (ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_writedata),                                                  //                         .writedata
		.av_byteenable            (ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_byteenable),                                                 //                         .byteenable
		.av_waitrequest           (ACELEROMETRO_SPI_avalon_accelerometer_spi_mode_slave_waitrequest),                                                //                         .waitrequest
		.av_begintransfer         (),                                                                                                                //              (terminated)
		.av_beginbursttransfer    (),                                                                                                                //              (terminated)
		.av_burstcount            (),                                                                                                                //              (terminated)
		.av_readdatavalid         (1'b0),                                                                                                            //              (terminated)
		.av_writebyteenable       (),                                                                                                                //              (terminated)
		.av_lock                  (),                                                                                                                //              (terminated)
		.av_chipselect            (),                                                                                                                //              (terminated)
		.av_clken                 (),                                                                                                                //              (terminated)
		.uav_clken                (1'b0),                                                                                                            //              (terminated)
		.av_debugaccess           (),                                                                                                                //              (terminated)
		.av_outputenable          (),                                                                                                                //              (terminated)
		.uav_response             (),                                                                                                                //              (terminated)
		.av_response              (2'b00),                                                                                                           //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                                            //              (terminated)
		.uav_writeresponsevalid   (),                                                                                                                //              (terminated)
		.av_writeresponserequest  (),                                                                                                                //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                                             //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) adc_de0_adc_slave_translator (
		.clk                      (sys_clk_clk_clk),                                                              //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                                      //                    reset.reset
		.uav_address              (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (ADC_DE0_adc_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (ADC_DE0_adc_slave_write),                                                      //                         .write
		.av_read                  (ADC_DE0_adc_slave_read),                                                       //                         .read
		.av_readdata              (ADC_DE0_adc_slave_readdata),                                                   //                         .readdata
		.av_writedata             (ADC_DE0_adc_slave_writedata),                                                  //                         .writedata
		.av_waitrequest           (ADC_DE0_adc_slave_waitrequest),                                                //                         .waitrequest
		.av_begintransfer         (),                                                                             //              (terminated)
		.av_beginbursttransfer    (),                                                                             //              (terminated)
		.av_burstcount            (),                                                                             //              (terminated)
		.av_byteenable            (),                                                                             //              (terminated)
		.av_readdatavalid         (1'b0),                                                                         //              (terminated)
		.av_writebyteenable       (),                                                                             //              (terminated)
		.av_lock                  (),                                                                             //              (terminated)
		.av_chipselect            (),                                                                             //              (terminated)
		.av_clken                 (),                                                                             //              (terminated)
		.uav_clken                (1'b0),                                                                         //              (terminated)
		.av_debugaccess           (),                                                                             //              (terminated)
		.av_outputenable          (),                                                                             //              (terminated)
		.uav_response             (),                                                                             //              (terminated)
		.av_response              (2'b00),                                                                        //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                         //              (terminated)
		.uav_writeresponsevalid   (),                                                                             //              (terminated)
		.av_writeresponserequest  (),                                                                             //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                          //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) encoder_int_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                           //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                                   //                    reset.reset
		.uav_address              (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (ENCODER_INT_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (ENCODER_INT_s1_write),                                                      //                         .write
		.av_readdata              (ENCODER_INT_s1_readdata),                                                   //                         .readdata
		.av_writedata             (ENCODER_INT_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (ENCODER_INT_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                          //              (terminated)
		.av_begintransfer         (),                                                                          //              (terminated)
		.av_beginbursttransfer    (),                                                                          //              (terminated)
		.av_burstcount            (),                                                                          //              (terminated)
		.av_byteenable            (),                                                                          //              (terminated)
		.av_readdatavalid         (1'b0),                                                                      //              (terminated)
		.av_waitrequest           (1'b0),                                                                      //              (terminated)
		.av_writebyteenable       (),                                                                          //              (terminated)
		.av_lock                  (),                                                                          //              (terminated)
		.av_clken                 (),                                                                          //              (terminated)
		.uav_clken                (1'b0),                                                                      //              (terminated)
		.av_debugaccess           (),                                                                          //              (terminated)
		.av_outputenable          (),                                                                          //              (terminated)
		.uav_response             (),                                                                          //              (terminated)
		.av_response              (2'b00),                                                                     //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                      //              (terminated)
		.uav_writeresponsevalid   (),                                                                          //              (terminated)
		.av_writeresponserequest  (),                                                                          //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                       //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) encoder_normal_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                              //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                                      //                    reset.reset
		.uav_address              (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (ENCODER_NORMAL_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (ENCODER_NORMAL_s1_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                             //              (terminated)
		.av_read                  (),                                                                             //              (terminated)
		.av_writedata             (),                                                                             //              (terminated)
		.av_begintransfer         (),                                                                             //              (terminated)
		.av_beginbursttransfer    (),                                                                             //              (terminated)
		.av_burstcount            (),                                                                             //              (terminated)
		.av_byteenable            (),                                                                             //              (terminated)
		.av_readdatavalid         (1'b0),                                                                         //              (terminated)
		.av_waitrequest           (1'b0),                                                                         //              (terminated)
		.av_writebyteenable       (),                                                                             //              (terminated)
		.av_lock                  (),                                                                             //              (terminated)
		.av_chipselect            (),                                                                             //              (terminated)
		.av_clken                 (),                                                                             //              (terminated)
		.uav_clken                (1'b0),                                                                         //              (terminated)
		.av_debugaccess           (),                                                                             //              (terminated)
		.av_outputenable          (),                                                                             //              (terminated)
		.uav_response             (),                                                                             //              (terminated)
		.av_response              (2'b00),                                                                        //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                         //              (terminated)
		.uav_writeresponsevalid   (),                                                                             //              (terminated)
		.av_writeresponserequest  (),                                                                             //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                          //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) motores_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                       //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                               //                    reset.reset
		.uav_address              (motores_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (motores_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (motores_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (motores_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (motores_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (motores_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (motores_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (motores_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (motores_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (motores_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (motores_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (MOTORES_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (MOTORES_s1_write),                                                      //                         .write
		.av_readdata              (MOTORES_s1_readdata),                                                   //                         .readdata
		.av_writedata             (MOTORES_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (MOTORES_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pwm1_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                    //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                            //                    reset.reset
		.uav_address              (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (PWM1_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (PWM1_s1_write),                                                      //                         .write
		.av_readdata              (PWM1_s1_readdata),                                                   //                         .readdata
		.av_writedata             (PWM1_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (PWM1_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                   //              (terminated)
		.av_begintransfer         (),                                                                   //              (terminated)
		.av_beginbursttransfer    (),                                                                   //              (terminated)
		.av_burstcount            (),                                                                   //              (terminated)
		.av_byteenable            (),                                                                   //              (terminated)
		.av_readdatavalid         (1'b0),                                                               //              (terminated)
		.av_waitrequest           (1'b0),                                                               //              (terminated)
		.av_writebyteenable       (),                                                                   //              (terminated)
		.av_lock                  (),                                                                   //              (terminated)
		.av_clken                 (),                                                                   //              (terminated)
		.uav_clken                (1'b0),                                                               //              (terminated)
		.av_debugaccess           (),                                                                   //              (terminated)
		.av_outputenable          (),                                                                   //              (terminated)
		.uav_response             (),                                                                   //              (terminated)
		.av_response              (2'b00),                                                              //              (terminated)
		.uav_writeresponserequest (1'b0),                                                               //              (terminated)
		.uav_writeresponsevalid   (),                                                                   //              (terminated)
		.av_writeresponserequest  (),                                                                   //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pwm2_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                    //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                            //                    reset.reset
		.uav_address              (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (PWM2_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (PWM2_s1_write),                                                      //                         .write
		.av_readdata              (PWM2_s1_readdata),                                                   //                         .readdata
		.av_writedata             (PWM2_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (PWM2_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                   //              (terminated)
		.av_begintransfer         (),                                                                   //              (terminated)
		.av_beginbursttransfer    (),                                                                   //              (terminated)
		.av_burstcount            (),                                                                   //              (terminated)
		.av_byteenable            (),                                                                   //              (terminated)
		.av_readdatavalid         (1'b0),                                                               //              (terminated)
		.av_waitrequest           (1'b0),                                                               //              (terminated)
		.av_writebyteenable       (),                                                                   //              (terminated)
		.av_lock                  (),                                                                   //              (terminated)
		.av_clken                 (),                                                                   //              (terminated)
		.uav_clken                (1'b0),                                                               //              (terminated)
		.av_debugaccess           (),                                                                   //              (terminated)
		.av_outputenable          (),                                                                   //              (terminated)
		.uav_response             (),                                                                   //              (terminated)
		.av_response              (2'b00),                                                              //              (terminated)
		.uav_writeresponserequest (1'b0),                                                               //              (terminated)
		.uav_writeresponsevalid   (),                                                                   //              (terminated)
		.av_writeresponserequest  (),                                                                   //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) ctrl_i2c_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                        //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                                //                    reset.reset
		.uav_address              (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (CTRL_I2C_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (CTRL_I2C_s1_write),                                                      //                         .write
		.av_readdata              (CTRL_I2C_s1_readdata),                                                   //                         .readdata
		.av_writedata             (CTRL_I2C_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (CTRL_I2C_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                       //              (terminated)
		.av_begintransfer         (),                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                       //              (terminated)
		.av_burstcount            (),                                                                       //              (terminated)
		.av_byteenable            (),                                                                       //              (terminated)
		.av_readdatavalid         (1'b0),                                                                   //              (terminated)
		.av_waitrequest           (1'b0),                                                                   //              (terminated)
		.av_writebyteenable       (),                                                                       //              (terminated)
		.av_lock                  (),                                                                       //              (terminated)
		.av_clken                 (),                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                   //              (terminated)
		.av_debugaccess           (),                                                                       //              (terminated)
		.av_outputenable          (),                                                                       //              (terminated)
		.uav_response             (),                                                                       //              (terminated)
		.av_response              (2'b00),                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) data_out_i2c_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                            //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                                    //                    reset.reset
		.uav_address              (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (DATA_OUT_I2C_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (DATA_OUT_I2C_s1_write),                                                      //                         .write
		.av_readdata              (DATA_OUT_I2C_s1_readdata),                                                   //                         .readdata
		.av_writedata             (DATA_OUT_I2C_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (DATA_OUT_I2C_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                           //              (terminated)
		.av_begintransfer         (),                                                                           //              (terminated)
		.av_beginbursttransfer    (),                                                                           //              (terminated)
		.av_burstcount            (),                                                                           //              (terminated)
		.av_byteenable            (),                                                                           //              (terminated)
		.av_readdatavalid         (1'b0),                                                                       //              (terminated)
		.av_waitrequest           (1'b0),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                           //              (terminated)
		.av_lock                  (),                                                                           //              (terminated)
		.av_clken                 (),                                                                           //              (terminated)
		.uav_clken                (1'b0),                                                                       //              (terminated)
		.av_debugaccess           (),                                                                           //              (terminated)
		.av_outputenable          (),                                                                           //              (terminated)
		.uav_response             (),                                                                           //              (terminated)
		.av_response              (2'b00),                                                                      //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                       //              (terminated)
		.uav_writeresponsevalid   (),                                                                           //              (terminated)
		.av_writeresponserequest  (),                                                                           //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) data_in_i2c_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                           //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                                   //                    reset.reset
		.uav_address              (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (DATA_IN_I2C_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (DATA_IN_I2C_s1_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                          //              (terminated)
		.av_read                  (),                                                                          //              (terminated)
		.av_writedata             (),                                                                          //              (terminated)
		.av_begintransfer         (),                                                                          //              (terminated)
		.av_beginbursttransfer    (),                                                                          //              (terminated)
		.av_burstcount            (),                                                                          //              (terminated)
		.av_byteenable            (),                                                                          //              (terminated)
		.av_readdatavalid         (1'b0),                                                                      //              (terminated)
		.av_waitrequest           (1'b0),                                                                      //              (terminated)
		.av_writebyteenable       (),                                                                          //              (terminated)
		.av_lock                  (),                                                                          //              (terminated)
		.av_chipselect            (),                                                                          //              (terminated)
		.av_clken                 (),                                                                          //              (terminated)
		.uav_clken                (1'b0),                                                                      //              (terminated)
		.av_debugaccess           (),                                                                          //              (terminated)
		.av_outputenable          (),                                                                          //              (terminated)
		.uav_response             (),                                                                          //              (terminated)
		.av_response              (2'b00),                                                                     //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                      //              (terminated)
		.uav_writeresponsevalid   (),                                                                          //              (terminated)
		.av_writeresponserequest  (),                                                                          //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                       //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) flag_i2c_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                        //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                                //                    reset.reset
		.uav_address              (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (FLAG_I2C_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (FLAG_I2C_s1_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                       //              (terminated)
		.av_read                  (),                                                                       //              (terminated)
		.av_writedata             (),                                                                       //              (terminated)
		.av_begintransfer         (),                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                       //              (terminated)
		.av_burstcount            (),                                                                       //              (terminated)
		.av_byteenable            (),                                                                       //              (terminated)
		.av_readdatavalid         (1'b0),                                                                   //              (terminated)
		.av_waitrequest           (1'b0),                                                                   //              (terminated)
		.av_writebyteenable       (),                                                                       //              (terminated)
		.av_lock                  (),                                                                       //              (terminated)
		.av_chipselect            (),                                                                       //              (terminated)
		.av_clken                 (),                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                   //              (terminated)
		.av_debugaccess           (),                                                                       //              (terminated)
		.av_outputenable          (),                                                                       //              (terminated)
		.uav_response             (),                                                                       //              (terminated)
		.av_response              (2'b00),                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) gps_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                   //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                           //                    reset.reset
		.uav_address              (gps_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (gps_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (gps_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (gps_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (gps_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (gps_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (gps_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (gps_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (gps_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (gps_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (gps_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (GPS_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (GPS_s1_write),                                                      //                         .write
		.av_read                  (GPS_s1_read),                                                       //                         .read
		.av_readdata              (GPS_s1_readdata),                                                   //                         .readdata
		.av_writedata             (GPS_s1_writedata),                                                  //                         .writedata
		.av_begintransfer         (GPS_s1_begintransfer),                                              //                         .begintransfer
		.av_chipselect            (GPS_s1_chipselect),                                                 //                         .chipselect
		.av_beginbursttransfer    (),                                                                  //              (terminated)
		.av_burstcount            (),                                                                  //              (terminated)
		.av_byteenable            (),                                                                  //              (terminated)
		.av_readdatavalid         (1'b0),                                                              //              (terminated)
		.av_waitrequest           (1'b0),                                                              //              (terminated)
		.av_writebyteenable       (),                                                                  //              (terminated)
		.av_lock                  (),                                                                  //              (terminated)
		.av_clken                 (),                                                                  //              (terminated)
		.uav_clken                (1'b0),                                                              //              (terminated)
		.av_debugaccess           (),                                                                  //              (terminated)
		.av_outputenable          (),                                                                  //              (terminated)
		.uav_response             (),                                                                  //              (terminated)
		.av_response              (2'b00),                                                             //              (terminated)
		.uav_writeresponserequest (1'b0),                                                              //              (terminated)
		.uav_writeresponsevalid   (),                                                                  //              (terminated)
		.av_writeresponserequest  (),                                                                  //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                               //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) xbee_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                    //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                            //                    reset.reset
		.uav_address              (xbee_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (xbee_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (xbee_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (xbee_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (xbee_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (xbee_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (xbee_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (xbee_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (xbee_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (xbee_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (xbee_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (XBEE_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (XBEE_s1_write),                                                      //                         .write
		.av_read                  (XBEE_s1_read),                                                       //                         .read
		.av_readdata              (XBEE_s1_readdata),                                                   //                         .readdata
		.av_writedata             (XBEE_s1_writedata),                                                  //                         .writedata
		.av_begintransfer         (XBEE_s1_begintransfer),                                              //                         .begintransfer
		.av_chipselect            (XBEE_s1_chipselect),                                                 //                         .chipselect
		.av_beginbursttransfer    (),                                                                   //              (terminated)
		.av_burstcount            (),                                                                   //              (terminated)
		.av_byteenable            (),                                                                   //              (terminated)
		.av_readdatavalid         (1'b0),                                                               //              (terminated)
		.av_waitrequest           (1'b0),                                                               //              (terminated)
		.av_writebyteenable       (),                                                                   //              (terminated)
		.av_lock                  (),                                                                   //              (terminated)
		.av_clken                 (),                                                                   //              (terminated)
		.uav_clken                (1'b0),                                                               //              (terminated)
		.av_debugaccess           (),                                                                   //              (terminated)
		.av_outputenable          (),                                                                   //              (terminated)
		.uav_response             (),                                                                   //              (terminated)
		.av_response              (2'b00),                                                              //              (terminated)
		.uav_writeresponserequest (1'b0),                                                               //              (terminated)
		.uav_writeresponsevalid   (),                                                                   //              (terminated)
		.av_writeresponserequest  (),                                                                   //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) dist1_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                     //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                             //                    reset.reset
		.uav_address              (dist1_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (dist1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (dist1_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (dist1_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (dist1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (dist1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (dist1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (dist1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (dist1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (dist1_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (dist1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (DIST1_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (DIST1_s1_write),                                                      //                         .write
		.av_read                  (DIST1_s1_read),                                                       //                         .read
		.av_readdata              (DIST1_s1_readdata),                                                   //                         .readdata
		.av_writedata             (DIST1_s1_writedata),                                                  //                         .writedata
		.av_begintransfer         (DIST1_s1_begintransfer),                                              //                         .begintransfer
		.av_chipselect            (DIST1_s1_chipselect),                                                 //                         .chipselect
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_byteenable            (),                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                //              (terminated)
		.av_waitrequest           (1'b0),                                                                //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) dist2_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                     //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                             //                    reset.reset
		.uav_address              (dist2_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (dist2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (dist2_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (dist2_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (dist2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (dist2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (dist2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (dist2_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (dist2_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (dist2_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (dist2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (DIST2_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (DIST2_s1_write),                                                      //                         .write
		.av_read                  (DIST2_s1_read),                                                       //                         .read
		.av_readdata              (DIST2_s1_readdata),                                                   //                         .readdata
		.av_writedata             (DIST2_s1_writedata),                                                  //                         .writedata
		.av_begintransfer         (DIST2_s1_begintransfer),                                              //                         .begintransfer
		.av_chipselect            (DIST2_s1_chipselect),                                                 //                         .chipselect
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_byteenable            (),                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                //              (terminated)
		.av_waitrequest           (1'b0),                                                                //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) dist3_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                     //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                             //                    reset.reset
		.uav_address              (dist3_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (dist3_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (dist3_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (dist3_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (dist3_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (dist3_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (dist3_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (dist3_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (dist3_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (dist3_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (dist3_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (DIST3_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (DIST3_s1_write),                                                      //                         .write
		.av_read                  (DIST3_s1_read),                                                       //                         .read
		.av_readdata              (DIST3_s1_readdata),                                                   //                         .readdata
		.av_writedata             (DIST3_s1_writedata),                                                  //                         .writedata
		.av_begintransfer         (DIST3_s1_begintransfer),                                              //                         .begintransfer
		.av_chipselect            (DIST3_s1_chipselect),                                                 //                         .chipselect
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_byteenable            (),                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                //              (terminated)
		.av_waitrequest           (1'b0),                                                                //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) dist4_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                     //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                             //                    reset.reset
		.uav_address              (dist4_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (dist4_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (dist4_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (dist4_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (dist4_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (dist4_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (dist4_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (dist4_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (dist4_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (dist4_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (dist4_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (DIST4_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (DIST4_s1_write),                                                      //                         .write
		.av_read                  (DIST4_s1_read),                                                       //                         .read
		.av_readdata              (DIST4_s1_readdata),                                                   //                         .readdata
		.av_writedata             (DIST4_s1_writedata),                                                  //                         .writedata
		.av_begintransfer         (DIST4_s1_begintransfer),                                              //                         .begintransfer
		.av_chipselect            (DIST4_s1_chipselect),                                                 //                         .chipselect
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_byteenable            (),                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                //              (terminated)
		.av_waitrequest           (1'b0),                                                                //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) dist5_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                     //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                             //                    reset.reset
		.uav_address              (dist5_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (dist5_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (dist5_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (dist5_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (dist5_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (dist5_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (dist5_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (dist5_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (dist5_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (dist5_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (dist5_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (DIST5_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (DIST5_s1_write),                                                      //                         .write
		.av_read                  (DIST5_s1_read),                                                       //                         .read
		.av_readdata              (DIST5_s1_readdata),                                                   //                         .readdata
		.av_writedata             (DIST5_s1_writedata),                                                  //                         .writedata
		.av_begintransfer         (DIST5_s1_begintransfer),                                              //                         .begintransfer
		.av_chipselect            (DIST5_s1_chipselect),                                                 //                         .chipselect
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_byteenable            (),                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                //              (terminated)
		.av_waitrequest           (1'b0),                                                                //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) dist6_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                     //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                             //                    reset.reset
		.uav_address              (dist6_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (dist6_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (dist6_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (dist6_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (dist6_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (dist6_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (dist6_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (dist6_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (dist6_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (dist6_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (dist6_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (DIST6_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (DIST6_s1_write),                                                      //                         .write
		.av_read                  (DIST6_s1_read),                                                       //                         .read
		.av_readdata              (DIST6_s1_readdata),                                                   //                         .readdata
		.av_writedata             (DIST6_s1_writedata),                                                  //                         .writedata
		.av_begintransfer         (DIST6_s1_begintransfer),                                              //                         .begintransfer
		.av_chipselect            (DIST6_s1_chipselect),                                                 //                         .chipselect
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_byteenable            (),                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                //              (terminated)
		.av_waitrequest           (1'b0),                                                                //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) dist7_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                     //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                             //                    reset.reset
		.uav_address              (dist7_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (dist7_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (dist7_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (dist7_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (dist7_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (dist7_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (dist7_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (dist7_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (dist7_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (dist7_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (dist7_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (DIST7_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (DIST7_s1_write),                                                      //                         .write
		.av_read                  (DIST7_s1_read),                                                       //                         .read
		.av_readdata              (DIST7_s1_readdata),                                                   //                         .readdata
		.av_writedata             (DIST7_s1_writedata),                                                  //                         .writedata
		.av_begintransfer         (DIST7_s1_begintransfer),                                              //                         .begintransfer
		.av_chipselect            (DIST7_s1_chipselect),                                                 //                         .chipselect
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_byteenable            (),                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                //              (terminated)
		.av_waitrequest           (1'b0),                                                                //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (27),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) dist8_s1_translator (
		.clk                      (sys_clk_clk_clk),                                                     //                      clk.clk
		.reset                    (CPU_reset_n_reset_bridge_in_reset_reset),                             //                    reset.reset
		.uav_address              (dist8_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (dist8_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (dist8_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (dist8_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (dist8_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (dist8_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (dist8_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (dist8_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (dist8_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (dist8_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (dist8_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (DIST8_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (DIST8_s1_write),                                                      //                         .write
		.av_read                  (DIST8_s1_read),                                                       //                         .read
		.av_readdata              (DIST8_s1_readdata),                                                   //                         .readdata
		.av_writedata             (DIST8_s1_writedata),                                                  //                         .writedata
		.av_begintransfer         (DIST8_s1_begintransfer),                                              //                         .begintransfer
		.av_chipselect            (DIST8_s1_chipselect),                                                 //                         .chipselect
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_byteenable            (),                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                //              (terminated)
		.av_waitrequest           (1'b0),                                                                //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_BEGIN_BURST           (82),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_BURST_TYPE_H          (79),
		.PKT_BURST_TYPE_L          (78),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_TRANS_EXCLUSIVE       (68),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_THREAD_ID_H           (94),
		.PKT_THREAD_ID_L           (94),
		.PKT_CACHE_H               (101),
		.PKT_CACHE_L               (98),
		.PKT_DATA_SIDEBAND_H       (81),
		.PKT_DATA_SIDEBAND_L       (81),
		.PKT_QOS_H                 (83),
		.PKT_QOS_L                 (83),
		.PKT_ADDR_SIDEBAND_H       (80),
		.PKT_ADDR_SIDEBAND_L       (80),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_DATA_W                 (107),
		.ST_CHANNEL_W              (31),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (1),
		.BURSTWRAP_VALUE           (3),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) cpu_instruction_master_translator_avalon_universal_master_0_agent (
		.clk                     (sys_clk_clk_clk),                                                                    //       clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.av_address              (cpu_instruction_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (cpu_instruction_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (cpu_instruction_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (cpu_instruction_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (cpu_instruction_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (cpu_instruction_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (cpu_instruction_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (cpu_instruction_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (cpu_instruction_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (cpu_instruction_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (cpu_instruction_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (cpu_instruction_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (cpu_instruction_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (cpu_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (cpu_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (cpu_instruction_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (limiter_rsp_src_valid),                                                              //        rp.valid
		.rp_data                 (limiter_rsp_src_data),                                                               //          .data
		.rp_channel              (limiter_rsp_src_channel),                                                            //          .channel
		.rp_startofpacket        (limiter_rsp_src_startofpacket),                                                      //          .startofpacket
		.rp_endofpacket          (limiter_rsp_src_endofpacket),                                                        //          .endofpacket
		.rp_ready                (limiter_rsp_src_ready),                                                              //          .ready
		.av_response             (),                                                                                   // (terminated)
		.av_writeresponserequest (1'b0),                                                                               // (terminated)
		.av_writeresponsevalid   ()                                                                                    // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_BEGIN_BURST           (82),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_BURST_TYPE_H          (79),
		.PKT_BURST_TYPE_L          (78),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_TRANS_EXCLUSIVE       (68),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_THREAD_ID_H           (94),
		.PKT_THREAD_ID_L           (94),
		.PKT_CACHE_H               (101),
		.PKT_CACHE_L               (98),
		.PKT_DATA_SIDEBAND_H       (81),
		.PKT_DATA_SIDEBAND_L       (81),
		.PKT_QOS_H                 (83),
		.PKT_QOS_L                 (83),
		.PKT_ADDR_SIDEBAND_H       (80),
		.PKT_ADDR_SIDEBAND_L       (80),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_DATA_W                 (107),
		.ST_CHANNEL_W              (31),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (7),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) cpu_data_master_translator_avalon_universal_master_0_agent (
		.clk                     (sys_clk_clk_clk),                                                             //       clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.av_address              (cpu_data_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (cpu_data_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (cpu_data_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (cpu_data_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (cpu_data_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (cpu_data_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (cpu_data_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (cpu_data_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (cpu_data_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (cpu_data_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (cpu_data_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (cpu_data_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (cpu_data_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (cpu_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (cpu_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (cpu_data_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (rsp_xbar_mux_001_src_valid),                                                  //        rp.valid
		.rp_data                 (rsp_xbar_mux_001_src_data),                                                   //          .data
		.rp_channel              (rsp_xbar_mux_001_src_channel),                                                //          .channel
		.rp_startofpacket        (rsp_xbar_mux_001_src_startofpacket),                                          //          .startofpacket
		.rp_endofpacket          (rsp_xbar_mux_001_src_endofpacket),                                            //          .endofpacket
		.rp_ready                (rsp_xbar_mux_001_src_ready),                                                  //          .ready
		.av_response             (),                                                                            // (terminated)
		.av_writeresponserequest (1'b0),                                                                        // (terminated)
		.av_writeresponsevalid   ()                                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                                            //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                                    //       clk_reset.reset
		.m0_address              (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_src_ready),                                                                     //              cp.ready
		.cp_valid                (cmd_xbar_mux_src_valid),                                                                     //                .valid
		.cp_data                 (cmd_xbar_mux_src_data),                                                                      //                .data
		.cp_startofpacket        (cmd_xbar_mux_src_startofpacket),                                                             //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_src_endofpacket),                                                               //                .endofpacket
		.cp_channel              (cmd_xbar_mux_src_channel),                                                                   //                .channel
		.rf_sink_ready           (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                      //     (terminated)
		.m0_writeresponserequest (),                                                                                           //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                        //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                                            //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                                    // clk_reset.reset
		.in_data           (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                      // (terminated)
		.csr_read          (1'b0),                                                                                       // (terminated)
		.csr_write         (1'b0),                                                                                       // (terminated)
		.csr_readdata      (),                                                                                           // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                       // (terminated)
		.almost_full_data  (),                                                                                           // (terminated)
		.almost_empty_data (),                                                                                           // (terminated)
		.in_empty          (1'b0),                                                                                       // (terminated)
		.out_empty         (),                                                                                           // (terminated)
		.in_error          (1'b0),                                                                                       // (terminated)
		.out_error         (),                                                                                           // (terminated)
		.in_channel        (1'b0),                                                                                       // (terminated)
		.out_channel       ()                                                                                            // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (15),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (17),
		.PKT_BYTEEN_L              (16),
		.PKT_ADDR_H                (44),
		.PKT_ADDR_L                (18),
		.PKT_TRANS_COMPRESSED_READ (45),
		.PKT_TRANS_POSTED          (46),
		.PKT_TRANS_WRITE           (47),
		.PKT_TRANS_READ            (48),
		.PKT_TRANS_LOCK            (49),
		.PKT_SRC_ID_H              (70),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (75),
		.PKT_DEST_ID_L             (71),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (54),
		.PKT_BYTE_CNT_H            (53),
		.PKT_BYTE_CNT_L            (51),
		.PKT_PROTECTION_H          (79),
		.PKT_PROTECTION_L          (77),
		.PKT_RESPONSE_STATUS_H     (85),
		.PKT_RESPONSE_STATUS_L     (84),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (86),
		.PKT_ORI_BURST_SIZE_H      (88),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (89),
		.AVS_BURSTCOUNT_W          (2),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sdram_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                               //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                       //       clk_reset.reset
		.m0_address              (sdram_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sdram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sdram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sdram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sdram_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sdram_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sdram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sdram_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sdram_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sdram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sdram_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sdram_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sdram_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sdram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (burst_adapter_source0_ready),                                                   //              cp.ready
		.cp_valid                (burst_adapter_source0_valid),                                                   //                .valid
		.cp_data                 (burst_adapter_source0_data),                                                    //                .data
		.cp_startofpacket        (burst_adapter_source0_startofpacket),                                           //                .startofpacket
		.cp_endofpacket          (burst_adapter_source0_endofpacket),                                             //                .endofpacket
		.cp_channel              (burst_adapter_source0_channel),                                                 //                .channel
		.rf_sink_ready           (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid),       //                .valid
		.rdata_fifo_sink_data    (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),        //                .data
		.rdata_fifo_src_ready    (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (90),
		.FIFO_DEPTH          (8),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                               //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.in_data           (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (18),
		.FIFO_DEPTH          (8),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (3),
		.USE_MEMORY_BLOCKS   (1),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                                         //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.in_data           (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                                   // (terminated)
		.csr_read          (1'b0),                                                                    // (terminated)
		.csr_write         (1'b0),                                                                    // (terminated)
		.csr_readdata      (),                                                                        // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                    // (terminated)
		.almost_full_data  (),                                                                        // (terminated)
		.almost_empty_data (),                                                                        // (terminated)
		.in_startofpacket  (1'b0),                                                                    // (terminated)
		.in_endofpacket    (1'b0),                                                                    // (terminated)
		.out_startofpacket (),                                                                        // (terminated)
		.out_endofpacket   (),                                                                        // (terminated)
		.in_empty          (1'b0),                                                                    // (terminated)
		.out_empty         (),                                                                        // (terminated)
		.in_error          (1'b0),                                                                    // (terminated)
		.out_error         (),                                                                        // (terminated)
		.in_channel        (1'b0),                                                                    // (terminated)
		.out_channel       ()                                                                         // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) epcs_epcs_control_port_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                                             //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                                     //       clk_reset.reset
		.m0_address              (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_002_src_ready),                                                                  //              cp.ready
		.cp_valid                (cmd_xbar_mux_002_src_valid),                                                                  //                .valid
		.cp_data                 (cmd_xbar_mux_002_src_data),                                                                   //                .data
		.cp_startofpacket        (cmd_xbar_mux_002_src_startofpacket),                                                          //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_002_src_endofpacket),                                                            //                .endofpacket
		.cp_channel              (cmd_xbar_mux_002_src_channel),                                                                //                .channel
		.rf_sink_ready           (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                       //     (terminated)
		.m0_writeresponserequest (),                                                                                            //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                         //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                                             //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                                     // clk_reset.reset
		.in_data           (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                       // (terminated)
		.csr_read          (1'b0),                                                                                        // (terminated)
		.csr_write         (1'b0),                                                                                        // (terminated)
		.csr_readdata      (),                                                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                        // (terminated)
		.almost_full_data  (),                                                                                            // (terminated)
		.almost_empty_data (),                                                                                            // (terminated)
		.in_empty          (1'b0),                                                                                        // (terminated)
		.out_empty         (),                                                                                            // (terminated)
		.in_error          (1'b0),                                                                                        // (terminated)
		.out_error         (),                                                                                            // (terminated)
		.in_channel        (1'b0),                                                                                        // (terminated)
		.out_channel       ()                                                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sys_id_control_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                                           //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                                   //       clk_reset.reset
		.m0_address              (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sys_id_control_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_003_src_ready),                                                                //              cp.ready
		.cp_valid                (cmd_xbar_mux_003_src_valid),                                                                //                .valid
		.cp_data                 (cmd_xbar_mux_003_src_data),                                                                 //                .data
		.cp_startofpacket        (cmd_xbar_mux_003_src_startofpacket),                                                        //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_003_src_endofpacket),                                                          //                .endofpacket
		.cp_channel              (cmd_xbar_mux_003_src_channel),                                                              //                .channel
		.rf_sink_ready           (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                     //     (terminated)
		.m0_writeresponserequest (),                                                                                          //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                       //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                                           //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                                   // clk_reset.reset
		.in_data           (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                     // (terminated)
		.csr_read          (1'b0),                                                                                      // (terminated)
		.csr_write         (1'b0),                                                                                      // (terminated)
		.csr_readdata      (),                                                                                          // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                      // (terminated)
		.almost_full_data  (),                                                                                          // (terminated)
		.almost_empty_data (),                                                                                          // (terminated)
		.in_empty          (1'b0),                                                                                      // (terminated)
		.out_empty         (),                                                                                          // (terminated)
		.in_error          (1'b0),                                                                                      // (terminated)
		.out_error         (),                                                                                          // (terminated)
		.in_channel        (1'b0),                                                                                      // (terminated)
		.out_channel       ()                                                                                           // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sys_timer_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                                   //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                           //       clk_reset.reset
		.m0_address              (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sys_timer_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sys_timer_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sys_timer_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sys_timer_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sys_timer_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sys_timer_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_004_src_ready),                                                        //              cp.ready
		.cp_valid                (cmd_xbar_mux_004_src_valid),                                                        //                .valid
		.cp_data                 (cmd_xbar_mux_004_src_data),                                                         //                .data
		.cp_startofpacket        (cmd_xbar_mux_004_src_startofpacket),                                                //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_004_src_endofpacket),                                                  //                .endofpacket
		.cp_channel              (cmd_xbar_mux_004_src_channel),                                                      //                .channel
		.rf_sink_ready           (sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sys_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sys_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sys_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sys_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sys_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sys_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sys_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sys_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sys_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sys_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                             //     (terminated)
		.m0_writeresponserequest (),                                                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                               //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                                   //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.in_data           (sys_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sys_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sys_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sys_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sys_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sys_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                             // (terminated)
		.csr_read          (1'b0),                                                                              // (terminated)
		.csr_write         (1'b0),                                                                              // (terminated)
		.csr_readdata      (),                                                                                  // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                              // (terminated)
		.almost_full_data  (),                                                                                  // (terminated)
		.almost_empty_data (),                                                                                  // (terminated)
		.in_empty          (1'b0),                                                                              // (terminated)
		.out_empty         (),                                                                                  // (terminated)
		.in_error          (1'b0),                                                                              // (terminated)
		.out_error         (),                                                                                  // (terminated)
		.in_channel        (1'b0),                                                                              // (terminated)
		.out_channel       ()                                                                                   // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) led_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                             //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                     //       clk_reset.reset
		.m0_address              (led_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (led_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (led_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (led_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (led_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (led_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (led_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (led_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (led_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (led_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (led_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (led_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (led_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (led_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (led_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (led_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_005_src_ready),                                                  //              cp.ready
		.cp_valid                (cmd_xbar_mux_005_src_valid),                                                  //                .valid
		.cp_data                 (cmd_xbar_mux_005_src_data),                                                   //                .data
		.cp_startofpacket        (cmd_xbar_mux_005_src_startofpacket),                                          //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_005_src_endofpacket),                                            //                .endofpacket
		.cp_channel              (cmd_xbar_mux_005_src_channel),                                                //                .channel
		.rf_sink_ready           (led_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (led_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (led_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (led_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (led_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (led_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (led_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (led_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (led_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (led_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (led_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (led_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (led_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (led_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (led_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (led_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                       //     (terminated)
		.m0_writeresponserequest (),                                                                            //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                         //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) led_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                             //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.in_data           (led_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (led_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (led_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (led_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (led_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (led_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (led_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (led_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (led_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (led_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                       // (terminated)
		.csr_read          (1'b0),                                                                        // (terminated)
		.csr_write         (1'b0),                                                                        // (terminated)
		.csr_readdata      (),                                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                        // (terminated)
		.almost_full_data  (),                                                                            // (terminated)
		.almost_empty_data (),                                                                            // (terminated)
		.in_empty          (1'b0),                                                                        // (terminated)
		.out_empty         (),                                                                            // (terminated)
		.in_error          (1'b0),                                                                        // (terminated)
		.out_error         (),                                                                            // (terminated)
		.in_channel        (1'b0),                                                                        // (terminated)
		.out_channel       ()                                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sw_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                            //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                    //       clk_reset.reset
		.m0_address              (sw_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sw_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sw_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sw_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sw_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sw_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sw_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sw_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sw_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sw_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sw_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sw_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sw_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sw_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sw_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sw_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_006_src_ready),                                                 //              cp.ready
		.cp_valid                (cmd_xbar_mux_006_src_valid),                                                 //                .valid
		.cp_data                 (cmd_xbar_mux_006_src_data),                                                  //                .data
		.cp_startofpacket        (cmd_xbar_mux_006_src_startofpacket),                                         //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_006_src_endofpacket),                                           //                .endofpacket
		.cp_channel              (cmd_xbar_mux_006_src_channel),                                               //                .channel
		.rf_sink_ready           (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                      //     (terminated)
		.m0_writeresponserequest (),                                                                           //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                        //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                            //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                    // clk_reset.reset
		.in_data           (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                      // (terminated)
		.csr_read          (1'b0),                                                                       // (terminated)
		.csr_write         (1'b0),                                                                       // (terminated)
		.csr_readdata      (),                                                                           // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                       // (terminated)
		.almost_full_data  (),                                                                           // (terminated)
		.almost_empty_data (),                                                                           // (terminated)
		.in_empty          (1'b0),                                                                       // (terminated)
		.out_empty         (),                                                                           // (terminated)
		.in_error          (1'b0),                                                                       // (terminated)
		.out_error         (),                                                                           // (terminated)
		.in_channel        (1'b0),                                                                       // (terminated)
		.out_channel       ()                                                                            // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) key_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                             //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                     //       clk_reset.reset
		.m0_address              (key_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (key_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (key_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (key_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (key_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (key_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (key_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (key_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (key_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (key_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (key_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (key_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (key_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (key_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (key_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (key_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_007_src_ready),                                                  //              cp.ready
		.cp_valid                (cmd_xbar_mux_007_src_valid),                                                  //                .valid
		.cp_data                 (cmd_xbar_mux_007_src_data),                                                   //                .data
		.cp_startofpacket        (cmd_xbar_mux_007_src_startofpacket),                                          //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_007_src_endofpacket),                                            //                .endofpacket
		.cp_channel              (cmd_xbar_mux_007_src_channel),                                                //                .channel
		.rf_sink_ready           (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (key_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (key_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (key_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (key_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (key_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                       //     (terminated)
		.m0_writeresponserequest (),                                                                            //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                         //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                             //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.in_data           (key_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (key_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (key_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (key_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (key_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                       // (terminated)
		.csr_read          (1'b0),                                                                        // (terminated)
		.csr_write         (1'b0),                                                                        // (terminated)
		.csr_readdata      (),                                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                        // (terminated)
		.almost_full_data  (),                                                                            // (terminated)
		.almost_empty_data (),                                                                            // (terminated)
		.in_empty          (1'b0),                                                                        // (terminated)
		.out_empty         (),                                                                            // (terminated)
		.in_error          (1'b0),                                                                        // (terminated)
		.out_error         (),                                                                            // (terminated)
		.in_channel        (1'b0),                                                                        // (terminated)
		.out_channel       ()                                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                                             //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                                     //       clk_reset.reset
		.m0_address              (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_008_src_ready),                                                                  //              cp.ready
		.cp_valid                (cmd_xbar_mux_008_src_valid),                                                                  //                .valid
		.cp_data                 (cmd_xbar_mux_008_src_data),                                                                   //                .data
		.cp_startofpacket        (cmd_xbar_mux_008_src_startofpacket),                                                          //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_008_src_endofpacket),                                                            //                .endofpacket
		.cp_channel              (cmd_xbar_mux_008_src_channel),                                                                //                .channel
		.rf_sink_ready           (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                       //     (terminated)
		.m0_writeresponserequest (),                                                                                            //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                         //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                                             //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                                     // clk_reset.reset
		.in_data           (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                       // (terminated)
		.csr_read          (1'b0),                                                                                        // (terminated)
		.csr_write         (1'b0),                                                                                        // (terminated)
		.csr_readdata      (),                                                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                        // (terminated)
		.almost_full_data  (),                                                                                            // (terminated)
		.almost_empty_data (),                                                                                            // (terminated)
		.in_empty          (1'b0),                                                                                        // (terminated)
		.out_empty         (),                                                                                            // (terminated)
		.in_error          (1'b0),                                                                                        // (terminated)
		.out_error         (),                                                                                            // (terminated)
		.in_channel        (1'b0),                                                                                        // (terminated)
		.out_channel       ()                                                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sys_pll_pll_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_50_clk_clk),                                                                         //             clk.clk
		.reset                   (sys_pll_inclk_interface_reset_reset_bridge_in_reset_reset),                              //       clk_reset.reset
		.m0_address              (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_009_src_ready),                                                             //              cp.ready
		.cp_valid                (cmd_xbar_mux_009_src_valid),                                                             //                .valid
		.cp_data                 (cmd_xbar_mux_009_src_data),                                                              //                .data
		.cp_startofpacket        (cmd_xbar_mux_009_src_startofpacket),                                                     //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_009_src_endofpacket),                                                       //                .endofpacket
		.cp_channel              (cmd_xbar_mux_009_src_channel),                                                           //                .channel
		.rf_sink_ready           (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid),       //                .valid
		.rdata_fifo_sink_data    (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),        //                .data
		.rdata_fifo_src_ready    (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                  //     (terminated)
		.m0_writeresponserequest (),                                                                                       //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_50_clk_clk),                                                                         //       clk.clk
		.reset             (sys_pll_inclk_interface_reset_reset_bridge_in_reset_reset),                              // clk_reset.reset
		.in_data           (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                  // (terminated)
		.csr_read          (1'b0),                                                                                   // (terminated)
		.csr_write         (1'b0),                                                                                   // (terminated)
		.csr_readdata      (),                                                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                   // (terminated)
		.almost_full_data  (),                                                                                       // (terminated)
		.almost_empty_data (),                                                                                       // (terminated)
		.in_empty          (1'b0),                                                                                   // (terminated)
		.out_empty         (),                                                                                       // (terminated)
		.in_error          (1'b0),                                                                                   // (terminated)
		.out_error         (),                                                                                       // (terminated)
		.in_channel        (1'b0),                                                                                   // (terminated)
		.out_channel       ()                                                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo (
		.clk               (clk_50_clk_clk),                                                                   //       clk.clk
		.reset             (sys_pll_inclk_interface_reset_reset_bridge_in_reset_reset),                        // clk_reset.reset
		.in_data           (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_startofpacket  (1'b0),                                                                             // (terminated)
		.in_endofpacket    (1'b0),                                                                             // (terminated)
		.out_startofpacket (),                                                                                 // (terminated)
		.out_endofpacket   (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (7),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (55),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_ADDR_H                (35),
		.PKT_ADDR_L                (9),
		.PKT_TRANS_COMPRESSED_READ (36),
		.PKT_TRANS_POSTED          (37),
		.PKT_TRANS_WRITE           (38),
		.PKT_TRANS_READ            (39),
		.PKT_TRANS_LOCK            (40),
		.PKT_SRC_ID_H              (61),
		.PKT_SRC_ID_L              (57),
		.PKT_DEST_ID_H             (66),
		.PKT_DEST_ID_L             (62),
		.PKT_BURSTWRAP_H           (47),
		.PKT_BURSTWRAP_L           (45),
		.PKT_BYTE_CNT_H            (44),
		.PKT_BYTE_CNT_L            (42),
		.PKT_PROTECTION_H          (70),
		.PKT_PROTECTION_L          (68),
		.PKT_RESPONSE_STATUS_H     (76),
		.PKT_RESPONSE_STATUS_L     (75),
		.PKT_BURST_SIZE_H          (50),
		.PKT_BURST_SIZE_L          (48),
		.PKT_ORI_BURST_SIZE_L      (77),
		.PKT_ORI_BURST_SIZE_H      (79),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (80),
		.AVS_BURSTCOUNT_W          (1),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                                                                           //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                                                                   //       clk_reset.reset
		.m0_address              (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (burst_adapter_001_source0_ready),                                                                                           //              cp.ready
		.cp_valid                (burst_adapter_001_source0_valid),                                                                                           //                .valid
		.cp_data                 (burst_adapter_001_source0_data),                                                                                            //                .data
		.cp_startofpacket        (burst_adapter_001_source0_startofpacket),                                                                                   //                .startofpacket
		.cp_endofpacket          (burst_adapter_001_source0_endofpacket),                                                                                     //                .endofpacket
		.cp_channel              (burst_adapter_001_source0_channel),                                                                                         //                .channel
		.rf_sink_ready           (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                                                     //     (terminated)
		.m0_writeresponserequest (),                                                                                                                          //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                                                       //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (81),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                                                                           //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                                                                   // clk_reset.reset
		.in_data           (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                                     // (terminated)
		.csr_read          (1'b0),                                                                                                                      // (terminated)
		.csr_write         (1'b0),                                                                                                                      // (terminated)
		.csr_readdata      (),                                                                                                                          // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                                      // (terminated)
		.almost_full_data  (),                                                                                                                          // (terminated)
		.almost_empty_data (),                                                                                                                          // (terminated)
		.in_empty          (1'b0),                                                                                                                      // (terminated)
		.out_empty         (),                                                                                                                          // (terminated)
		.in_error          (1'b0),                                                                                                                      // (terminated)
		.out_error         (),                                                                                                                          // (terminated)
		.in_channel        (1'b0),                                                                                                                      // (terminated)
		.out_channel       ()                                                                                                                           // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) adc_de0_adc_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                                        //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                                //       clk_reset.reset
		.m0_address              (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_011_src_ready),                                                             //              cp.ready
		.cp_valid                (cmd_xbar_mux_011_src_valid),                                                             //                .valid
		.cp_data                 (cmd_xbar_mux_011_src_data),                                                              //                .data
		.cp_startofpacket        (cmd_xbar_mux_011_src_startofpacket),                                                     //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_011_src_endofpacket),                                                       //                .endofpacket
		.cp_channel              (cmd_xbar_mux_011_src_channel),                                                           //                .channel
		.rf_sink_ready           (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                  //     (terminated)
		.m0_writeresponserequest (),                                                                                       //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                                        //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                                // clk_reset.reset
		.in_data           (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                  // (terminated)
		.csr_read          (1'b0),                                                                                   // (terminated)
		.csr_write         (1'b0),                                                                                   // (terminated)
		.csr_readdata      (),                                                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                   // (terminated)
		.almost_full_data  (),                                                                                       // (terminated)
		.almost_empty_data (),                                                                                       // (terminated)
		.in_empty          (1'b0),                                                                                   // (terminated)
		.out_empty         (),                                                                                       // (terminated)
		.in_error          (1'b0),                                                                                   // (terminated)
		.out_error         (),                                                                                       // (terminated)
		.in_channel        (1'b0),                                                                                   // (terminated)
		.out_channel       ()                                                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) encoder_int_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                                     //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                             //       clk_reset.reset
		.m0_address              (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (encoder_int_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (encoder_int_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (encoder_int_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (encoder_int_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (encoder_int_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (encoder_int_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_012_src_ready),                                                          //              cp.ready
		.cp_valid                (cmd_xbar_mux_012_src_valid),                                                          //                .valid
		.cp_data                 (cmd_xbar_mux_012_src_data),                                                           //                .data
		.cp_startofpacket        (cmd_xbar_mux_012_src_startofpacket),                                                  //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_012_src_endofpacket),                                                    //                .endofpacket
		.cp_channel              (cmd_xbar_mux_012_src_channel),                                                        //                .channel
		.rf_sink_ready           (encoder_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (encoder_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (encoder_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (encoder_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (encoder_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (encoder_int_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (encoder_int_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (encoder_int_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (encoder_int_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (encoder_int_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (encoder_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (encoder_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (encoder_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (encoder_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (encoder_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (encoder_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                               //     (terminated)
		.m0_writeresponserequest (),                                                                                    //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                 //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) encoder_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                                     //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                             // clk_reset.reset
		.in_data           (encoder_int_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (encoder_int_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (encoder_int_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (encoder_int_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (encoder_int_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (encoder_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (encoder_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (encoder_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (encoder_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (encoder_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                               // (terminated)
		.csr_read          (1'b0),                                                                                // (terminated)
		.csr_write         (1'b0),                                                                                // (terminated)
		.csr_readdata      (),                                                                                    // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                // (terminated)
		.almost_full_data  (),                                                                                    // (terminated)
		.almost_empty_data (),                                                                                    // (terminated)
		.in_empty          (1'b0),                                                                                // (terminated)
		.out_empty         (),                                                                                    // (terminated)
		.in_error          (1'b0),                                                                                // (terminated)
		.out_error         (),                                                                                    // (terminated)
		.in_channel        (1'b0),                                                                                // (terminated)
		.out_channel       ()                                                                                     // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) encoder_normal_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                                        //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                                //       clk_reset.reset
		.m0_address              (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (encoder_normal_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_013_src_ready),                                                             //              cp.ready
		.cp_valid                (cmd_xbar_mux_013_src_valid),                                                             //                .valid
		.cp_data                 (cmd_xbar_mux_013_src_data),                                                              //                .data
		.cp_startofpacket        (cmd_xbar_mux_013_src_startofpacket),                                                     //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_013_src_endofpacket),                                                       //                .endofpacket
		.cp_channel              (cmd_xbar_mux_013_src_channel),                                                           //                .channel
		.rf_sink_ready           (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                  //     (terminated)
		.m0_writeresponserequest (),                                                                                       //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) encoder_normal_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                                        //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                                // clk_reset.reset
		.in_data           (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                  // (terminated)
		.csr_read          (1'b0),                                                                                   // (terminated)
		.csr_write         (1'b0),                                                                                   // (terminated)
		.csr_readdata      (),                                                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                   // (terminated)
		.almost_full_data  (),                                                                                       // (terminated)
		.almost_empty_data (),                                                                                       // (terminated)
		.in_empty          (1'b0),                                                                                   // (terminated)
		.out_empty         (),                                                                                       // (terminated)
		.in_error          (1'b0),                                                                                   // (terminated)
		.out_error         (),                                                                                       // (terminated)
		.in_channel        (1'b0),                                                                                   // (terminated)
		.out_channel       ()                                                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) motores_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                                 //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                         //       clk_reset.reset
		.m0_address              (motores_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (motores_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (motores_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (motores_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (motores_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (motores_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (motores_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (motores_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (motores_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (motores_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (motores_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (motores_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (motores_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (motores_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (motores_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (motores_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_014_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_014_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_014_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_014_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_014_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_014_src_channel),                                                    //                .channel
		.rf_sink_ready           (motores_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (motores_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (motores_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (motores_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (motores_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (motores_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (motores_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (motores_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (motores_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (motores_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (motores_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (motores_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (motores_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (motores_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (motores_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (motores_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) motores_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                                 //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                         // clk_reset.reset
		.in_data           (motores_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (motores_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (motores_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (motores_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (motores_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (motores_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (motores_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (motores_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (motores_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (motores_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pwm1_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                              //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                      //       clk_reset.reset
		.m0_address              (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pwm1_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pwm1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pwm1_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pwm1_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pwm1_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pwm1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_015_src_ready),                                                   //              cp.ready
		.cp_valid                (cmd_xbar_mux_015_src_valid),                                                   //                .valid
		.cp_data                 (cmd_xbar_mux_015_src_data),                                                    //                .data
		.cp_startofpacket        (cmd_xbar_mux_015_src_startofpacket),                                           //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_015_src_endofpacket),                                             //                .endofpacket
		.cp_channel              (cmd_xbar_mux_015_src_channel),                                                 //                .channel
		.rf_sink_ready           (pwm1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pwm1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pwm1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pwm1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pwm1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pwm1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pwm1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pwm1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pwm1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pwm1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pwm1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pwm1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (pwm1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (pwm1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pwm1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pwm1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                        //     (terminated)
		.m0_writeresponserequest (),                                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                          //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                              //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                      // clk_reset.reset
		.in_data           (pwm1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pwm1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pwm1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pwm1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pwm1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pwm1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pwm1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pwm1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pwm1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pwm1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                        // (terminated)
		.csr_read          (1'b0),                                                                         // (terminated)
		.csr_write         (1'b0),                                                                         // (terminated)
		.csr_readdata      (),                                                                             // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                         // (terminated)
		.almost_full_data  (),                                                                             // (terminated)
		.almost_empty_data (),                                                                             // (terminated)
		.in_empty          (1'b0),                                                                         // (terminated)
		.out_empty         (),                                                                             // (terminated)
		.in_error          (1'b0),                                                                         // (terminated)
		.out_error         (),                                                                             // (terminated)
		.in_channel        (1'b0),                                                                         // (terminated)
		.out_channel       ()                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pwm2_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                              //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                      //       clk_reset.reset
		.m0_address              (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pwm2_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pwm2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pwm2_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pwm2_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pwm2_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pwm2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_016_src_ready),                                                   //              cp.ready
		.cp_valid                (cmd_xbar_mux_016_src_valid),                                                   //                .valid
		.cp_data                 (cmd_xbar_mux_016_src_data),                                                    //                .data
		.cp_startofpacket        (cmd_xbar_mux_016_src_startofpacket),                                           //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_016_src_endofpacket),                                             //                .endofpacket
		.cp_channel              (cmd_xbar_mux_016_src_channel),                                                 //                .channel
		.rf_sink_ready           (pwm2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pwm2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pwm2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pwm2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pwm2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pwm2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pwm2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pwm2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pwm2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pwm2_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pwm2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pwm2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (pwm2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (pwm2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pwm2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pwm2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                        //     (terminated)
		.m0_writeresponserequest (),                                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                          //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                              //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                      // clk_reset.reset
		.in_data           (pwm2_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pwm2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pwm2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pwm2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pwm2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pwm2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pwm2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pwm2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pwm2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pwm2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                        // (terminated)
		.csr_read          (1'b0),                                                                         // (terminated)
		.csr_write         (1'b0),                                                                         // (terminated)
		.csr_readdata      (),                                                                             // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                         // (terminated)
		.almost_full_data  (),                                                                             // (terminated)
		.almost_empty_data (),                                                                             // (terminated)
		.in_empty          (1'b0),                                                                         // (terminated)
		.out_empty         (),                                                                             // (terminated)
		.in_error          (1'b0),                                                                         // (terminated)
		.out_error         (),                                                                             // (terminated)
		.in_channel        (1'b0),                                                                         // (terminated)
		.out_channel       ()                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) ctrl_i2c_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                                  //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                          //       clk_reset.reset
		.m0_address              (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_017_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_017_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_017_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_017_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_017_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_017_src_channel),                                                     //                .channel
		.rf_sink_ready           (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                                  //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.in_data           (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) data_out_i2c_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                                      //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                              //       clk_reset.reset
		.m0_address              (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_018_src_ready),                                                           //              cp.ready
		.cp_valid                (cmd_xbar_mux_018_src_valid),                                                           //                .valid
		.cp_data                 (cmd_xbar_mux_018_src_data),                                                            //                .data
		.cp_startofpacket        (cmd_xbar_mux_018_src_startofpacket),                                                   //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_018_src_endofpacket),                                                     //                .endofpacket
		.cp_channel              (cmd_xbar_mux_018_src_channel),                                                         //                .channel
		.rf_sink_ready           (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                //     (terminated)
		.m0_writeresponserequest (),                                                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                                      //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                              // clk_reset.reset
		.in_data           (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                 // (terminated)
		.csr_readdata      (),                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated)
		.almost_full_data  (),                                                                                     // (terminated)
		.almost_empty_data (),                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                 // (terminated)
		.out_empty         (),                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                 // (terminated)
		.out_error         (),                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                 // (terminated)
		.out_channel       ()                                                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) data_in_i2c_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                                     //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                             //       clk_reset.reset
		.m0_address              (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_019_src_ready),                                                          //              cp.ready
		.cp_valid                (cmd_xbar_mux_019_src_valid),                                                          //                .valid
		.cp_data                 (cmd_xbar_mux_019_src_data),                                                           //                .data
		.cp_startofpacket        (cmd_xbar_mux_019_src_startofpacket),                                                  //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_019_src_endofpacket),                                                    //                .endofpacket
		.cp_channel              (cmd_xbar_mux_019_src_channel),                                                        //                .channel
		.rf_sink_ready           (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                               //     (terminated)
		.m0_writeresponserequest (),                                                                                    //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                 //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                                     //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                             // clk_reset.reset
		.in_data           (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                               // (terminated)
		.csr_read          (1'b0),                                                                                // (terminated)
		.csr_write         (1'b0),                                                                                // (terminated)
		.csr_readdata      (),                                                                                    // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                // (terminated)
		.almost_full_data  (),                                                                                    // (terminated)
		.almost_empty_data (),                                                                                    // (terminated)
		.in_empty          (1'b0),                                                                                // (terminated)
		.out_empty         (),                                                                                    // (terminated)
		.in_error          (1'b0),                                                                                // (terminated)
		.out_error         (),                                                                                    // (terminated)
		.in_channel        (1'b0),                                                                                // (terminated)
		.out_channel       ()                                                                                     // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) flag_i2c_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                                  //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                          //       clk_reset.reset
		.m0_address              (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (flag_i2c_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_020_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_020_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_020_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_020_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_020_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_020_src_channel),                                                     //                .channel
		.rf_sink_ready           (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) flag_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                                  //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.in_data           (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) gps_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                             //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                     //       clk_reset.reset
		.m0_address              (gps_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (gps_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (gps_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (gps_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (gps_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (gps_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (gps_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (gps_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (gps_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (gps_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (gps_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (gps_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (gps_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (gps_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (gps_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (gps_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_021_src_ready),                                                  //              cp.ready
		.cp_valid                (cmd_xbar_mux_021_src_valid),                                                  //                .valid
		.cp_data                 (cmd_xbar_mux_021_src_data),                                                   //                .data
		.cp_startofpacket        (cmd_xbar_mux_021_src_startofpacket),                                          //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_021_src_endofpacket),                                            //                .endofpacket
		.cp_channel              (cmd_xbar_mux_021_src_channel),                                                //                .channel
		.rf_sink_ready           (gps_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (gps_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (gps_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (gps_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (gps_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (gps_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (gps_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (gps_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (gps_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (gps_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (gps_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (gps_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (gps_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (gps_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (gps_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (gps_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                       //     (terminated)
		.m0_writeresponserequest (),                                                                            //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                         //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) gps_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                             //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.in_data           (gps_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (gps_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (gps_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (gps_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (gps_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (gps_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (gps_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (gps_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (gps_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (gps_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                       // (terminated)
		.csr_read          (1'b0),                                                                        // (terminated)
		.csr_write         (1'b0),                                                                        // (terminated)
		.csr_readdata      (),                                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                        // (terminated)
		.almost_full_data  (),                                                                            // (terminated)
		.almost_empty_data (),                                                                            // (terminated)
		.in_empty          (1'b0),                                                                        // (terminated)
		.out_empty         (),                                                                            // (terminated)
		.in_error          (1'b0),                                                                        // (terminated)
		.out_error         (),                                                                            // (terminated)
		.in_channel        (1'b0),                                                                        // (terminated)
		.out_channel       ()                                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) xbee_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                              //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                      //       clk_reset.reset
		.m0_address              (xbee_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (xbee_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (xbee_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (xbee_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (xbee_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (xbee_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (xbee_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (xbee_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (xbee_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (xbee_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (xbee_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (xbee_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (xbee_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (xbee_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (xbee_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (xbee_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_022_src_ready),                                                   //              cp.ready
		.cp_valid                (cmd_xbar_mux_022_src_valid),                                                   //                .valid
		.cp_data                 (cmd_xbar_mux_022_src_data),                                                    //                .data
		.cp_startofpacket        (cmd_xbar_mux_022_src_startofpacket),                                           //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_022_src_endofpacket),                                             //                .endofpacket
		.cp_channel              (cmd_xbar_mux_022_src_channel),                                                 //                .channel
		.rf_sink_ready           (xbee_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (xbee_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (xbee_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (xbee_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (xbee_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (xbee_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (xbee_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (xbee_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (xbee_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (xbee_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (xbee_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (xbee_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (xbee_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (xbee_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (xbee_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (xbee_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                        //     (terminated)
		.m0_writeresponserequest (),                                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                          //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) xbee_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                              //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                      // clk_reset.reset
		.in_data           (xbee_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (xbee_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (xbee_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (xbee_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (xbee_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (xbee_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (xbee_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (xbee_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (xbee_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (xbee_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                        // (terminated)
		.csr_read          (1'b0),                                                                         // (terminated)
		.csr_write         (1'b0),                                                                         // (terminated)
		.csr_readdata      (),                                                                             // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                         // (terminated)
		.almost_full_data  (),                                                                             // (terminated)
		.almost_empty_data (),                                                                             // (terminated)
		.in_empty          (1'b0),                                                                         // (terminated)
		.out_empty         (),                                                                             // (terminated)
		.in_error          (1'b0),                                                                         // (terminated)
		.out_error         (),                                                                             // (terminated)
		.in_channel        (1'b0),                                                                         // (terminated)
		.out_channel       ()                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) dist1_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                               //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                       //       clk_reset.reset
		.m0_address              (dist1_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (dist1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (dist1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (dist1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (dist1_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (dist1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (dist1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (dist1_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (dist1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (dist1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (dist1_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (dist1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (dist1_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (dist1_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (dist1_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (dist1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_023_src_ready),                                                    //              cp.ready
		.cp_valid                (cmd_xbar_mux_023_src_valid),                                                    //                .valid
		.cp_data                 (cmd_xbar_mux_023_src_data),                                                     //                .data
		.cp_startofpacket        (cmd_xbar_mux_023_src_startofpacket),                                            //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_023_src_endofpacket),                                              //                .endofpacket
		.cp_channel              (cmd_xbar_mux_023_src_channel),                                                  //                .channel
		.rf_sink_ready           (dist1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (dist1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (dist1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (dist1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (dist1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (dist1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (dist1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (dist1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (dist1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (dist1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (dist1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (dist1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (dist1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (dist1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (dist1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (dist1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) dist1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                               //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.in_data           (dist1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (dist1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (dist1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (dist1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (dist1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (dist1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (dist1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (dist1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (dist1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (dist1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) dist2_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                               //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                       //       clk_reset.reset
		.m0_address              (dist2_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (dist2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (dist2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (dist2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (dist2_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (dist2_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (dist2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (dist2_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (dist2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (dist2_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (dist2_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (dist2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (dist2_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (dist2_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (dist2_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (dist2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_024_src_ready),                                                    //              cp.ready
		.cp_valid                (cmd_xbar_mux_024_src_valid),                                                    //                .valid
		.cp_data                 (cmd_xbar_mux_024_src_data),                                                     //                .data
		.cp_startofpacket        (cmd_xbar_mux_024_src_startofpacket),                                            //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_024_src_endofpacket),                                              //                .endofpacket
		.cp_channel              (cmd_xbar_mux_024_src_channel),                                                  //                .channel
		.rf_sink_ready           (dist2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (dist2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (dist2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (dist2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (dist2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (dist2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (dist2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (dist2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (dist2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (dist2_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (dist2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (dist2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (dist2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (dist2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (dist2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (dist2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) dist2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                               //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.in_data           (dist2_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (dist2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (dist2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (dist2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (dist2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (dist2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (dist2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (dist2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (dist2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (dist2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) dist3_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                               //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                       //       clk_reset.reset
		.m0_address              (dist3_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (dist3_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (dist3_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (dist3_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (dist3_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (dist3_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (dist3_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (dist3_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (dist3_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (dist3_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (dist3_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (dist3_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (dist3_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (dist3_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (dist3_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (dist3_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_025_src_ready),                                                    //              cp.ready
		.cp_valid                (cmd_xbar_mux_025_src_valid),                                                    //                .valid
		.cp_data                 (cmd_xbar_mux_025_src_data),                                                     //                .data
		.cp_startofpacket        (cmd_xbar_mux_025_src_startofpacket),                                            //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_025_src_endofpacket),                                              //                .endofpacket
		.cp_channel              (cmd_xbar_mux_025_src_channel),                                                  //                .channel
		.rf_sink_ready           (dist3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (dist3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (dist3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (dist3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (dist3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (dist3_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (dist3_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (dist3_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (dist3_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (dist3_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (dist3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (dist3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (dist3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (dist3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (dist3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (dist3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) dist3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                               //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.in_data           (dist3_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (dist3_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (dist3_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (dist3_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (dist3_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (dist3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (dist3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (dist3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (dist3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (dist3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) dist4_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                               //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                       //       clk_reset.reset
		.m0_address              (dist4_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (dist4_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (dist4_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (dist4_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (dist4_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (dist4_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (dist4_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (dist4_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (dist4_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (dist4_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (dist4_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (dist4_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (dist4_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (dist4_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (dist4_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (dist4_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_026_src_ready),                                                    //              cp.ready
		.cp_valid                (cmd_xbar_mux_026_src_valid),                                                    //                .valid
		.cp_data                 (cmd_xbar_mux_026_src_data),                                                     //                .data
		.cp_startofpacket        (cmd_xbar_mux_026_src_startofpacket),                                            //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_026_src_endofpacket),                                              //                .endofpacket
		.cp_channel              (cmd_xbar_mux_026_src_channel),                                                  //                .channel
		.rf_sink_ready           (dist4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (dist4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (dist4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (dist4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (dist4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (dist4_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (dist4_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (dist4_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (dist4_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (dist4_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (dist4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (dist4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (dist4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (dist4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (dist4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (dist4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) dist4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                               //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.in_data           (dist4_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (dist4_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (dist4_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (dist4_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (dist4_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (dist4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (dist4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (dist4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (dist4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (dist4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) dist5_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                               //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                       //       clk_reset.reset
		.m0_address              (dist5_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (dist5_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (dist5_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (dist5_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (dist5_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (dist5_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (dist5_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (dist5_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (dist5_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (dist5_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (dist5_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (dist5_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (dist5_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (dist5_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (dist5_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (dist5_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_027_src_ready),                                                    //              cp.ready
		.cp_valid                (cmd_xbar_mux_027_src_valid),                                                    //                .valid
		.cp_data                 (cmd_xbar_mux_027_src_data),                                                     //                .data
		.cp_startofpacket        (cmd_xbar_mux_027_src_startofpacket),                                            //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_027_src_endofpacket),                                              //                .endofpacket
		.cp_channel              (cmd_xbar_mux_027_src_channel),                                                  //                .channel
		.rf_sink_ready           (dist5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (dist5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (dist5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (dist5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (dist5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (dist5_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (dist5_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (dist5_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (dist5_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (dist5_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (dist5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (dist5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (dist5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (dist5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (dist5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (dist5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) dist5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                               //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.in_data           (dist5_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (dist5_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (dist5_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (dist5_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (dist5_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (dist5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (dist5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (dist5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (dist5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (dist5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) dist6_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                               //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                       //       clk_reset.reset
		.m0_address              (dist6_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (dist6_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (dist6_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (dist6_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (dist6_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (dist6_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (dist6_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (dist6_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (dist6_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (dist6_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (dist6_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (dist6_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (dist6_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (dist6_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (dist6_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (dist6_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_028_src_ready),                                                    //              cp.ready
		.cp_valid                (cmd_xbar_mux_028_src_valid),                                                    //                .valid
		.cp_data                 (cmd_xbar_mux_028_src_data),                                                     //                .data
		.cp_startofpacket        (cmd_xbar_mux_028_src_startofpacket),                                            //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_028_src_endofpacket),                                              //                .endofpacket
		.cp_channel              (cmd_xbar_mux_028_src_channel),                                                  //                .channel
		.rf_sink_ready           (dist6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (dist6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (dist6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (dist6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (dist6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (dist6_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (dist6_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (dist6_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (dist6_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (dist6_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (dist6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (dist6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (dist6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (dist6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (dist6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (dist6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) dist6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                               //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.in_data           (dist6_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (dist6_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (dist6_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (dist6_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (dist6_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (dist6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (dist6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (dist6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (dist6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (dist6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) dist7_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                               //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                       //       clk_reset.reset
		.m0_address              (dist7_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (dist7_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (dist7_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (dist7_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (dist7_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (dist7_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (dist7_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (dist7_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (dist7_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (dist7_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (dist7_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (dist7_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (dist7_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (dist7_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (dist7_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (dist7_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_029_src_ready),                                                    //              cp.ready
		.cp_valid                (cmd_xbar_mux_029_src_valid),                                                    //                .valid
		.cp_data                 (cmd_xbar_mux_029_src_data),                                                     //                .data
		.cp_startofpacket        (cmd_xbar_mux_029_src_startofpacket),                                            //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_029_src_endofpacket),                                              //                .endofpacket
		.cp_channel              (cmd_xbar_mux_029_src_channel),                                                  //                .channel
		.rf_sink_ready           (dist7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (dist7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (dist7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (dist7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (dist7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (dist7_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (dist7_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (dist7_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (dist7_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (dist7_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (dist7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (dist7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (dist7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (dist7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (dist7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (dist7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) dist7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                               //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.in_data           (dist7_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (dist7_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (dist7_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (dist7_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (dist7_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (dist7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (dist7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (dist7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (dist7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (dist7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (82),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (62),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (63),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.PKT_TRANS_READ            (66),
		.PKT_TRANS_LOCK            (67),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_BURSTWRAP_H           (74),
		.PKT_BURSTWRAP_L           (72),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_PROTECTION_H          (97),
		.PKT_PROTECTION_L          (95),
		.PKT_RESPONSE_STATUS_H     (103),
		.PKT_RESPONSE_STATUS_L     (102),
		.PKT_BURST_SIZE_H          (77),
		.PKT_BURST_SIZE_L          (75),
		.PKT_ORI_BURST_SIZE_L      (104),
		.PKT_ORI_BURST_SIZE_H      (106),
		.ST_CHANNEL_W              (31),
		.ST_DATA_W                 (107),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) dist8_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (sys_clk_clk_clk),                                                               //             clk.clk
		.reset                   (CPU_reset_n_reset_bridge_in_reset_reset),                                       //       clk_reset.reset
		.m0_address              (dist8_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (dist8_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (dist8_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (dist8_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (dist8_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (dist8_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (dist8_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (dist8_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (dist8_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (dist8_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (dist8_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (dist8_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (dist8_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (dist8_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (dist8_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (dist8_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_030_src_ready),                                                    //              cp.ready
		.cp_valid                (cmd_xbar_mux_030_src_valid),                                                    //                .valid
		.cp_data                 (cmd_xbar_mux_030_src_data),                                                     //                .data
		.cp_startofpacket        (cmd_xbar_mux_030_src_startofpacket),                                            //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_030_src_endofpacket),                                              //                .endofpacket
		.cp_channel              (cmd_xbar_mux_030_src_channel),                                                  //                .channel
		.rf_sink_ready           (dist8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (dist8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (dist8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (dist8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (dist8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (dist8_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (dist8_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (dist8_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (dist8_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (dist8_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (dist8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (dist8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (dist8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (dist8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (dist8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (dist8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (108),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) dist8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                               //       clk.clk
		.reset             (CPU_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.in_data           (dist8_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (dist8_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (dist8_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (dist8_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (dist8_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (dist8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (dist8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (dist8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (dist8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (dist8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	NIOS_mm_interconnect_0_addr_router addr_router (
		.sink_ready         (cpu_instruction_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (cpu_instruction_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (cpu_instruction_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (cpu_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (cpu_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                                    //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.src_ready          (addr_router_src_ready),                                                              //       src.ready
		.src_valid          (addr_router_src_valid),                                                              //          .valid
		.src_data           (addr_router_src_data),                                                               //          .data
		.src_channel        (addr_router_src_channel),                                                            //          .channel
		.src_startofpacket  (addr_router_src_startofpacket),                                                      //          .startofpacket
		.src_endofpacket    (addr_router_src_endofpacket)                                                         //          .endofpacket
	);

	NIOS_mm_interconnect_0_addr_router_001 addr_router_001 (
		.sink_ready         (cpu_data_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (cpu_data_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (cpu_data_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (cpu_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (cpu_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                             //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.src_ready          (addr_router_001_src_ready),                                                   //       src.ready
		.src_valid          (addr_router_001_src_valid),                                                   //          .valid
		.src_data           (addr_router_001_src_data),                                                    //          .data
		.src_channel        (addr_router_001_src_channel),                                                 //          .channel
		.src_startofpacket  (addr_router_001_src_startofpacket),                                           //          .startofpacket
		.src_endofpacket    (addr_router_001_src_endofpacket)                                              //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router id_router (
		.sink_ready         (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (cpu_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                                  //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.src_ready          (id_router_src_ready),                                                              //       src.ready
		.src_valid          (id_router_src_valid),                                                              //          .valid
		.src_data           (id_router_src_data),                                                               //          .data
		.src_channel        (id_router_src_channel),                                                            //          .channel
		.src_startofpacket  (id_router_src_startofpacket),                                                      //          .startofpacket
		.src_endofpacket    (id_router_src_endofpacket)                                                         //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_001 id_router_001 (
		.sink_ready         (sdram_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sdram_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sdram_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sdram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sdram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                     //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                             // clk_reset.reset
		.src_ready          (id_router_001_src_ready),                                             //       src.ready
		.src_valid          (id_router_001_src_valid),                                             //          .valid
		.src_data           (id_router_001_src_data),                                              //          .data
		.src_channel        (id_router_001_src_channel),                                           //          .channel
		.src_startofpacket  (id_router_001_src_startofpacket),                                     //          .startofpacket
		.src_endofpacket    (id_router_001_src_endofpacket)                                        //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router id_router_002 (
		.sink_ready         (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (epcs_epcs_control_port_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                                   //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.src_ready          (id_router_002_src_ready),                                                           //       src.ready
		.src_valid          (id_router_002_src_valid),                                                           //          .valid
		.src_data           (id_router_002_src_data),                                                            //          .data
		.src_channel        (id_router_002_src_channel),                                                         //          .channel
		.src_startofpacket  (id_router_002_src_startofpacket),                                                   //          .startofpacket
		.src_endofpacket    (id_router_002_src_endofpacket)                                                      //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_003 (
		.sink_ready         (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sys_id_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                                 //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                                         // clk_reset.reset
		.src_ready          (id_router_003_src_ready),                                                         //       src.ready
		.src_valid          (id_router_003_src_valid),                                                         //          .valid
		.src_data           (id_router_003_src_data),                                                          //          .data
		.src_channel        (id_router_003_src_channel),                                                       //          .channel
		.src_startofpacket  (id_router_003_src_startofpacket),                                                 //          .startofpacket
		.src_endofpacket    (id_router_003_src_endofpacket)                                                    //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_004 (
		.sink_ready         (sys_timer_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sys_timer_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sys_timer_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sys_timer_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sys_timer_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.src_ready          (id_router_004_src_ready),                                                 //       src.ready
		.src_valid          (id_router_004_src_valid),                                                 //          .valid
		.src_data           (id_router_004_src_data),                                                  //          .data
		.src_channel        (id_router_004_src_channel),                                               //          .channel
		.src_startofpacket  (id_router_004_src_startofpacket),                                         //          .startofpacket
		.src_endofpacket    (id_router_004_src_endofpacket)                                            //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_005 (
		.sink_ready         (led_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (led_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (led_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (led_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (led_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                   //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.src_ready          (id_router_005_src_ready),                                           //       src.ready
		.src_valid          (id_router_005_src_valid),                                           //          .valid
		.src_data           (id_router_005_src_data),                                            //          .data
		.src_channel        (id_router_005_src_channel),                                         //          .channel
		.src_startofpacket  (id_router_005_src_startofpacket),                                   //          .startofpacket
		.src_endofpacket    (id_router_005_src_endofpacket)                                      //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_006 (
		.sink_ready         (sw_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sw_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sw_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sw_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sw_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                  //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.src_ready          (id_router_006_src_ready),                                          //       src.ready
		.src_valid          (id_router_006_src_valid),                                          //          .valid
		.src_data           (id_router_006_src_data),                                           //          .data
		.src_channel        (id_router_006_src_channel),                                        //          .channel
		.src_startofpacket  (id_router_006_src_startofpacket),                                  //          .startofpacket
		.src_endofpacket    (id_router_006_src_endofpacket)                                     //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_007 (
		.sink_ready         (key_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (key_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (key_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (key_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (key_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                   //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.src_ready          (id_router_007_src_ready),                                           //       src.ready
		.src_valid          (id_router_007_src_valid),                                           //          .valid
		.src_data           (id_router_007_src_data),                                            //          .data
		.src_channel        (id_router_007_src_channel),                                         //          .channel
		.src_startofpacket  (id_router_007_src_startofpacket),                                   //          .startofpacket
		.src_endofpacket    (id_router_007_src_endofpacket)                                      //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_008 (
		.sink_ready         (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (jtag_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                                   //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.src_ready          (id_router_008_src_ready),                                                           //       src.ready
		.src_valid          (id_router_008_src_valid),                                                           //          .valid
		.src_data           (id_router_008_src_data),                                                            //          .data
		.src_channel        (id_router_008_src_channel),                                                         //          .channel
		.src_startofpacket  (id_router_008_src_startofpacket),                                                   //          .startofpacket
		.src_endofpacket    (id_router_008_src_endofpacket)                                                      //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_009 id_router_009 (
		.sink_ready         (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sys_pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_50_clk_clk),                                                               //       clk.clk
		.reset              (sys_pll_inclk_interface_reset_reset_bridge_in_reset_reset),                    // clk_reset.reset
		.src_ready          (id_router_009_src_ready),                                                      //       src.ready
		.src_valid          (id_router_009_src_valid),                                                      //          .valid
		.src_data           (id_router_009_src_data),                                                       //          .data
		.src_channel        (id_router_009_src_channel),                                                    //          .channel
		.src_startofpacket  (id_router_009_src_startofpacket),                                              //          .startofpacket
		.src_endofpacket    (id_router_009_src_endofpacket)                                                 //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_010 id_router_010 (
		.sink_ready         (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (acelerometro_spi_avalon_accelerometer_spi_mode_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                                                                 //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                                                                         // clk_reset.reset
		.src_ready          (id_router_010_src_ready),                                                                                         //       src.ready
		.src_valid          (id_router_010_src_valid),                                                                                         //          .valid
		.src_data           (id_router_010_src_data),                                                                                          //          .data
		.src_channel        (id_router_010_src_channel),                                                                                       //          .channel
		.src_startofpacket  (id_router_010_src_startofpacket),                                                                                 //          .startofpacket
		.src_endofpacket    (id_router_010_src_endofpacket)                                                                                    //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_011 (
		.sink_ready         (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (adc_de0_adc_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                              //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                                      // clk_reset.reset
		.src_ready          (id_router_011_src_ready),                                                      //       src.ready
		.src_valid          (id_router_011_src_valid),                                                      //          .valid
		.src_data           (id_router_011_src_data),                                                       //          .data
		.src_channel        (id_router_011_src_channel),                                                    //          .channel
		.src_startofpacket  (id_router_011_src_startofpacket),                                              //          .startofpacket
		.src_endofpacket    (id_router_011_src_endofpacket)                                                 //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_012 (
		.sink_ready         (encoder_int_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (encoder_int_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (encoder_int_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (encoder_int_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (encoder_int_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                           //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                                   // clk_reset.reset
		.src_ready          (id_router_012_src_ready),                                                   //       src.ready
		.src_valid          (id_router_012_src_valid),                                                   //          .valid
		.src_data           (id_router_012_src_data),                                                    //          .data
		.src_channel        (id_router_012_src_channel),                                                 //          .channel
		.src_startofpacket  (id_router_012_src_startofpacket),                                           //          .startofpacket
		.src_endofpacket    (id_router_012_src_endofpacket)                                              //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_013 (
		.sink_ready         (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (encoder_normal_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                              //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                                      // clk_reset.reset
		.src_ready          (id_router_013_src_ready),                                                      //       src.ready
		.src_valid          (id_router_013_src_valid),                                                      //          .valid
		.src_data           (id_router_013_src_data),                                                       //          .data
		.src_channel        (id_router_013_src_channel),                                                    //          .channel
		.src_startofpacket  (id_router_013_src_startofpacket),                                              //          .startofpacket
		.src_endofpacket    (id_router_013_src_endofpacket)                                                 //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_014 (
		.sink_ready         (motores_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (motores_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (motores_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (motores_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (motores_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                       //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                               // clk_reset.reset
		.src_ready          (id_router_014_src_ready),                                               //       src.ready
		.src_valid          (id_router_014_src_valid),                                               //          .valid
		.src_data           (id_router_014_src_data),                                                //          .data
		.src_channel        (id_router_014_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_014_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_014_src_endofpacket)                                          //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_015 (
		.sink_ready         (pwm1_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pwm1_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pwm1_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pwm1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pwm1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                    //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                            // clk_reset.reset
		.src_ready          (id_router_015_src_ready),                                            //       src.ready
		.src_valid          (id_router_015_src_valid),                                            //          .valid
		.src_data           (id_router_015_src_data),                                             //          .data
		.src_channel        (id_router_015_src_channel),                                          //          .channel
		.src_startofpacket  (id_router_015_src_startofpacket),                                    //          .startofpacket
		.src_endofpacket    (id_router_015_src_endofpacket)                                       //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_016 (
		.sink_ready         (pwm2_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pwm2_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pwm2_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pwm2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pwm2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                    //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                            // clk_reset.reset
		.src_ready          (id_router_016_src_ready),                                            //       src.ready
		.src_valid          (id_router_016_src_valid),                                            //          .valid
		.src_data           (id_router_016_src_data),                                             //          .data
		.src_channel        (id_router_016_src_channel),                                          //          .channel
		.src_startofpacket  (id_router_016_src_startofpacket),                                    //          .startofpacket
		.src_endofpacket    (id_router_016_src_endofpacket)                                       //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_017 (
		.sink_ready         (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (ctrl_i2c_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                        //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                                // clk_reset.reset
		.src_ready          (id_router_017_src_ready),                                                //       src.ready
		.src_valid          (id_router_017_src_valid),                                                //          .valid
		.src_data           (id_router_017_src_data),                                                 //          .data
		.src_channel        (id_router_017_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_017_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_017_src_endofpacket)                                           //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_018 (
		.sink_ready         (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (data_out_i2c_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                            //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                                    // clk_reset.reset
		.src_ready          (id_router_018_src_ready),                                                    //       src.ready
		.src_valid          (id_router_018_src_valid),                                                    //          .valid
		.src_data           (id_router_018_src_data),                                                     //          .data
		.src_channel        (id_router_018_src_channel),                                                  //          .channel
		.src_startofpacket  (id_router_018_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (id_router_018_src_endofpacket)                                               //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_019 (
		.sink_ready         (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (data_in_i2c_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                           //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                                   // clk_reset.reset
		.src_ready          (id_router_019_src_ready),                                                   //       src.ready
		.src_valid          (id_router_019_src_valid),                                                   //          .valid
		.src_data           (id_router_019_src_data),                                                    //          .data
		.src_channel        (id_router_019_src_channel),                                                 //          .channel
		.src_startofpacket  (id_router_019_src_startofpacket),                                           //          .startofpacket
		.src_endofpacket    (id_router_019_src_endofpacket)                                              //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_020 (
		.sink_ready         (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (flag_i2c_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                        //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                                // clk_reset.reset
		.src_ready          (id_router_020_src_ready),                                                //       src.ready
		.src_valid          (id_router_020_src_valid),                                                //          .valid
		.src_data           (id_router_020_src_data),                                                 //          .data
		.src_channel        (id_router_020_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_020_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_020_src_endofpacket)                                           //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_021 (
		.sink_ready         (gps_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (gps_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (gps_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (gps_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (gps_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                   //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.src_ready          (id_router_021_src_ready),                                           //       src.ready
		.src_valid          (id_router_021_src_valid),                                           //          .valid
		.src_data           (id_router_021_src_data),                                            //          .data
		.src_channel        (id_router_021_src_channel),                                         //          .channel
		.src_startofpacket  (id_router_021_src_startofpacket),                                   //          .startofpacket
		.src_endofpacket    (id_router_021_src_endofpacket)                                      //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_022 (
		.sink_ready         (xbee_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (xbee_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (xbee_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (xbee_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (xbee_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                    //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                            // clk_reset.reset
		.src_ready          (id_router_022_src_ready),                                            //       src.ready
		.src_valid          (id_router_022_src_valid),                                            //          .valid
		.src_data           (id_router_022_src_data),                                             //          .data
		.src_channel        (id_router_022_src_channel),                                          //          .channel
		.src_startofpacket  (id_router_022_src_startofpacket),                                    //          .startofpacket
		.src_endofpacket    (id_router_022_src_endofpacket)                                       //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_023 (
		.sink_ready         (dist1_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (dist1_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (dist1_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (dist1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (dist1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                     //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                             // clk_reset.reset
		.src_ready          (id_router_023_src_ready),                                             //       src.ready
		.src_valid          (id_router_023_src_valid),                                             //          .valid
		.src_data           (id_router_023_src_data),                                              //          .data
		.src_channel        (id_router_023_src_channel),                                           //          .channel
		.src_startofpacket  (id_router_023_src_startofpacket),                                     //          .startofpacket
		.src_endofpacket    (id_router_023_src_endofpacket)                                        //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_024 (
		.sink_ready         (dist2_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (dist2_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (dist2_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (dist2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (dist2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                     //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                             // clk_reset.reset
		.src_ready          (id_router_024_src_ready),                                             //       src.ready
		.src_valid          (id_router_024_src_valid),                                             //          .valid
		.src_data           (id_router_024_src_data),                                              //          .data
		.src_channel        (id_router_024_src_channel),                                           //          .channel
		.src_startofpacket  (id_router_024_src_startofpacket),                                     //          .startofpacket
		.src_endofpacket    (id_router_024_src_endofpacket)                                        //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_025 (
		.sink_ready         (dist3_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (dist3_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (dist3_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (dist3_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (dist3_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                     //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                             // clk_reset.reset
		.src_ready          (id_router_025_src_ready),                                             //       src.ready
		.src_valid          (id_router_025_src_valid),                                             //          .valid
		.src_data           (id_router_025_src_data),                                              //          .data
		.src_channel        (id_router_025_src_channel),                                           //          .channel
		.src_startofpacket  (id_router_025_src_startofpacket),                                     //          .startofpacket
		.src_endofpacket    (id_router_025_src_endofpacket)                                        //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_026 (
		.sink_ready         (dist4_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (dist4_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (dist4_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (dist4_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (dist4_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                     //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                             // clk_reset.reset
		.src_ready          (id_router_026_src_ready),                                             //       src.ready
		.src_valid          (id_router_026_src_valid),                                             //          .valid
		.src_data           (id_router_026_src_data),                                              //          .data
		.src_channel        (id_router_026_src_channel),                                           //          .channel
		.src_startofpacket  (id_router_026_src_startofpacket),                                     //          .startofpacket
		.src_endofpacket    (id_router_026_src_endofpacket)                                        //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_027 (
		.sink_ready         (dist5_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (dist5_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (dist5_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (dist5_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (dist5_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                     //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                             // clk_reset.reset
		.src_ready          (id_router_027_src_ready),                                             //       src.ready
		.src_valid          (id_router_027_src_valid),                                             //          .valid
		.src_data           (id_router_027_src_data),                                              //          .data
		.src_channel        (id_router_027_src_channel),                                           //          .channel
		.src_startofpacket  (id_router_027_src_startofpacket),                                     //          .startofpacket
		.src_endofpacket    (id_router_027_src_endofpacket)                                        //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_028 (
		.sink_ready         (dist6_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (dist6_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (dist6_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (dist6_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (dist6_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                     //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                             // clk_reset.reset
		.src_ready          (id_router_028_src_ready),                                             //       src.ready
		.src_valid          (id_router_028_src_valid),                                             //          .valid
		.src_data           (id_router_028_src_data),                                              //          .data
		.src_channel        (id_router_028_src_channel),                                           //          .channel
		.src_startofpacket  (id_router_028_src_startofpacket),                                     //          .startofpacket
		.src_endofpacket    (id_router_028_src_endofpacket)                                        //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_029 (
		.sink_ready         (dist7_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (dist7_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (dist7_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (dist7_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (dist7_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                     //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                             // clk_reset.reset
		.src_ready          (id_router_029_src_ready),                                             //       src.ready
		.src_valid          (id_router_029_src_valid),                                             //          .valid
		.src_data           (id_router_029_src_data),                                              //          .data
		.src_channel        (id_router_029_src_channel),                                           //          .channel
		.src_startofpacket  (id_router_029_src_startofpacket),                                     //          .startofpacket
		.src_endofpacket    (id_router_029_src_endofpacket)                                        //          .endofpacket
	);

	NIOS_mm_interconnect_0_id_router_003 id_router_030 (
		.sink_ready         (dist8_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (dist8_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (dist8_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (dist8_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (dist8_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                                     //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset),                             // clk_reset.reset
		.src_ready          (id_router_030_src_ready),                                             //       src.ready
		.src_valid          (id_router_030_src_valid),                                             //          .valid
		.src_data           (id_router_030_src_data),                                              //          .data
		.src_channel        (id_router_030_src_channel),                                           //          .channel
		.src_startofpacket  (id_router_030_src_startofpacket),                                     //          .startofpacket
		.src_endofpacket    (id_router_030_src_endofpacket)                                        //          .endofpacket
	);

	altera_merlin_traffic_limiter #(
		.PKT_DEST_ID_H             (93),
		.PKT_DEST_ID_L             (89),
		.PKT_SRC_ID_H              (88),
		.PKT_SRC_ID_L              (84),
		.PKT_TRANS_POSTED          (64),
		.PKT_TRANS_WRITE           (65),
		.MAX_OUTSTANDING_RESPONSES (9),
		.PIPELINED                 (0),
		.ST_DATA_W                 (107),
		.ST_CHANNEL_W              (31),
		.VALID_WIDTH               (31),
		.ENFORCE_ORDER             (1),
		.PREVENT_HAZARDS           (0),
		.PKT_BYTE_CNT_H            (71),
		.PKT_BYTE_CNT_L            (69),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.REORDER                   (0)
	) limiter (
		.clk                    (sys_clk_clk_clk),                         //       clk.clk
		.reset                  (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.cmd_sink_ready         (addr_router_src_ready),                   //  cmd_sink.ready
		.cmd_sink_valid         (addr_router_src_valid),                   //          .valid
		.cmd_sink_data          (addr_router_src_data),                    //          .data
		.cmd_sink_channel       (addr_router_src_channel),                 //          .channel
		.cmd_sink_startofpacket (addr_router_src_startofpacket),           //          .startofpacket
		.cmd_sink_endofpacket   (addr_router_src_endofpacket),             //          .endofpacket
		.cmd_src_ready          (limiter_cmd_src_ready),                   //   cmd_src.ready
		.cmd_src_data           (limiter_cmd_src_data),                    //          .data
		.cmd_src_channel        (limiter_cmd_src_channel),                 //          .channel
		.cmd_src_startofpacket  (limiter_cmd_src_startofpacket),           //          .startofpacket
		.cmd_src_endofpacket    (limiter_cmd_src_endofpacket),             //          .endofpacket
		.rsp_sink_ready         (rsp_xbar_mux_src_ready),                  //  rsp_sink.ready
		.rsp_sink_valid         (rsp_xbar_mux_src_valid),                  //          .valid
		.rsp_sink_channel       (rsp_xbar_mux_src_channel),                //          .channel
		.rsp_sink_data          (rsp_xbar_mux_src_data),                   //          .data
		.rsp_sink_startofpacket (rsp_xbar_mux_src_startofpacket),          //          .startofpacket
		.rsp_sink_endofpacket   (rsp_xbar_mux_src_endofpacket),            //          .endofpacket
		.rsp_src_ready          (limiter_rsp_src_ready),                   //   rsp_src.ready
		.rsp_src_valid          (limiter_rsp_src_valid),                   //          .valid
		.rsp_src_data           (limiter_rsp_src_data),                    //          .data
		.rsp_src_channel        (limiter_rsp_src_channel),                 //          .channel
		.rsp_src_startofpacket  (limiter_rsp_src_startofpacket),           //          .startofpacket
		.rsp_src_endofpacket    (limiter_rsp_src_endofpacket),             //          .endofpacket
		.cmd_src_valid          (limiter_cmd_valid_data)                   // cmd_valid.data
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (44),
		.PKT_ADDR_L                (18),
		.PKT_BEGIN_BURST           (64),
		.PKT_BYTE_CNT_H            (53),
		.PKT_BYTE_CNT_L            (51),
		.PKT_BYTEEN_H              (17),
		.PKT_BYTEEN_L              (16),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_BURST_TYPE_H          (61),
		.PKT_BURST_TYPE_L          (60),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (54),
		.PKT_TRANS_COMPRESSED_READ (45),
		.PKT_TRANS_WRITE           (47),
		.PKT_TRANS_READ            (48),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (0),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (89),
		.ST_CHANNEL_W              (31),
		.OUT_BYTE_CNT_H            (52),
		.OUT_BURSTWRAP_H           (56),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (1),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.BURSTWRAP_CONST_MASK      (3),
		.BURSTWRAP_CONST_VALUE     (3)
	) burst_adapter (
		.clk                   (sys_clk_clk_clk),                         //       cr0.clk
		.reset                 (CPU_reset_n_reset_bridge_in_reset_reset), // cr0_reset.reset
		.sink0_valid           (width_adapter_002_src_valid),             //     sink0.valid
		.sink0_data            (width_adapter_002_src_data),              //          .data
		.sink0_channel         (width_adapter_002_src_channel),           //          .channel
		.sink0_startofpacket   (width_adapter_002_src_startofpacket),     //          .startofpacket
		.sink0_endofpacket     (width_adapter_002_src_endofpacket),       //          .endofpacket
		.sink0_ready           (width_adapter_002_src_ready),             //          .ready
		.source0_valid         (burst_adapter_source0_valid),             //   source0.valid
		.source0_data          (burst_adapter_source0_data),              //          .data
		.source0_channel       (burst_adapter_source0_channel),           //          .channel
		.source0_startofpacket (burst_adapter_source0_startofpacket),     //          .startofpacket
		.source0_endofpacket   (burst_adapter_source0_endofpacket),       //          .endofpacket
		.source0_ready         (burst_adapter_source0_ready)              //          .ready
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (35),
		.PKT_ADDR_L                (9),
		.PKT_BEGIN_BURST           (55),
		.PKT_BYTE_CNT_H            (44),
		.PKT_BYTE_CNT_L            (42),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_BURST_SIZE_H          (50),
		.PKT_BURST_SIZE_L          (48),
		.PKT_BURST_TYPE_H          (52),
		.PKT_BURST_TYPE_L          (51),
		.PKT_BURSTWRAP_H           (47),
		.PKT_BURSTWRAP_L           (45),
		.PKT_TRANS_COMPRESSED_READ (36),
		.PKT_TRANS_WRITE           (38),
		.PKT_TRANS_READ            (39),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (0),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (80),
		.ST_CHANNEL_W              (31),
		.OUT_BYTE_CNT_H            (42),
		.OUT_BURSTWRAP_H           (47),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (1),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.BURSTWRAP_CONST_MASK      (7),
		.BURSTWRAP_CONST_VALUE     (7)
	) burst_adapter_001 (
		.clk                   (sys_clk_clk_clk),                         //       cr0.clk
		.reset                 (CPU_reset_n_reset_bridge_in_reset_reset), // cr0_reset.reset
		.sink0_valid           (width_adapter_003_src_valid),             //     sink0.valid
		.sink0_data            (width_adapter_003_src_data),              //          .data
		.sink0_channel         (width_adapter_003_src_channel),           //          .channel
		.sink0_startofpacket   (width_adapter_003_src_startofpacket),     //          .startofpacket
		.sink0_endofpacket     (width_adapter_003_src_endofpacket),       //          .endofpacket
		.sink0_ready           (width_adapter_003_src_ready),             //          .ready
		.source0_valid         (burst_adapter_001_source0_valid),         //   source0.valid
		.source0_data          (burst_adapter_001_source0_data),          //          .data
		.source0_channel       (burst_adapter_001_source0_channel),       //          .channel
		.source0_startofpacket (burst_adapter_001_source0_startofpacket), //          .startofpacket
		.source0_endofpacket   (burst_adapter_001_source0_endofpacket),   //          .endofpacket
		.source0_ready         (burst_adapter_001_source0_ready)          //          .ready
	);

	NIOS_mm_interconnect_0_cmd_xbar_demux cmd_xbar_demux (
		.clk                (sys_clk_clk_clk),                         //        clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), //  clk_reset.reset
		.sink_ready         (limiter_cmd_src_ready),                   //       sink.ready
		.sink_channel       (limiter_cmd_src_channel),                 //           .channel
		.sink_data          (limiter_cmd_src_data),                    //           .data
		.sink_startofpacket (limiter_cmd_src_startofpacket),           //           .startofpacket
		.sink_endofpacket   (limiter_cmd_src_endofpacket),             //           .endofpacket
		.sink_valid         (limiter_cmd_valid_data),                  // sink_valid.data
		.src0_ready         (cmd_xbar_demux_src0_ready),               //       src0.ready
		.src0_valid         (cmd_xbar_demux_src0_valid),               //           .valid
		.src0_data          (cmd_xbar_demux_src0_data),                //           .data
		.src0_channel       (cmd_xbar_demux_src0_channel),             //           .channel
		.src0_startofpacket (cmd_xbar_demux_src0_startofpacket),       //           .startofpacket
		.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket),         //           .endofpacket
		.src1_ready         (cmd_xbar_demux_src1_ready),               //       src1.ready
		.src1_valid         (cmd_xbar_demux_src1_valid),               //           .valid
		.src1_data          (cmd_xbar_demux_src1_data),                //           .data
		.src1_channel       (cmd_xbar_demux_src1_channel),             //           .channel
		.src1_startofpacket (cmd_xbar_demux_src1_startofpacket),       //           .startofpacket
		.src1_endofpacket   (cmd_xbar_demux_src1_endofpacket),         //           .endofpacket
		.src2_ready         (cmd_xbar_demux_src2_ready),               //       src2.ready
		.src2_valid         (cmd_xbar_demux_src2_valid),               //           .valid
		.src2_data          (cmd_xbar_demux_src2_data),                //           .data
		.src2_channel       (cmd_xbar_demux_src2_channel),             //           .channel
		.src2_startofpacket (cmd_xbar_demux_src2_startofpacket),       //           .startofpacket
		.src2_endofpacket   (cmd_xbar_demux_src2_endofpacket)          //           .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_demux_001 cmd_xbar_demux_001 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready          (addr_router_001_src_ready),               //      sink.ready
		.sink_channel        (addr_router_001_src_channel),             //          .channel
		.sink_data           (addr_router_001_src_data),                //          .data
		.sink_startofpacket  (addr_router_001_src_startofpacket),       //          .startofpacket
		.sink_endofpacket    (addr_router_001_src_endofpacket),         //          .endofpacket
		.sink_valid          (addr_router_001_src_valid),               //          .valid
		.src0_ready          (cmd_xbar_demux_001_src0_ready),           //      src0.ready
		.src0_valid          (cmd_xbar_demux_001_src0_valid),           //          .valid
		.src0_data           (cmd_xbar_demux_001_src0_data),            //          .data
		.src0_channel        (cmd_xbar_demux_001_src0_channel),         //          .channel
		.src0_startofpacket  (cmd_xbar_demux_001_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket    (cmd_xbar_demux_001_src0_endofpacket),     //          .endofpacket
		.src1_ready          (cmd_xbar_demux_001_src1_ready),           //      src1.ready
		.src1_valid          (cmd_xbar_demux_001_src1_valid),           //          .valid
		.src1_data           (cmd_xbar_demux_001_src1_data),            //          .data
		.src1_channel        (cmd_xbar_demux_001_src1_channel),         //          .channel
		.src1_startofpacket  (cmd_xbar_demux_001_src1_startofpacket),   //          .startofpacket
		.src1_endofpacket    (cmd_xbar_demux_001_src1_endofpacket),     //          .endofpacket
		.src2_ready          (cmd_xbar_demux_001_src2_ready),           //      src2.ready
		.src2_valid          (cmd_xbar_demux_001_src2_valid),           //          .valid
		.src2_data           (cmd_xbar_demux_001_src2_data),            //          .data
		.src2_channel        (cmd_xbar_demux_001_src2_channel),         //          .channel
		.src2_startofpacket  (cmd_xbar_demux_001_src2_startofpacket),   //          .startofpacket
		.src2_endofpacket    (cmd_xbar_demux_001_src2_endofpacket),     //          .endofpacket
		.src3_ready          (cmd_xbar_demux_001_src3_ready),           //      src3.ready
		.src3_valid          (cmd_xbar_demux_001_src3_valid),           //          .valid
		.src3_data           (cmd_xbar_demux_001_src3_data),            //          .data
		.src3_channel        (cmd_xbar_demux_001_src3_channel),         //          .channel
		.src3_startofpacket  (cmd_xbar_demux_001_src3_startofpacket),   //          .startofpacket
		.src3_endofpacket    (cmd_xbar_demux_001_src3_endofpacket),     //          .endofpacket
		.src4_ready          (cmd_xbar_demux_001_src4_ready),           //      src4.ready
		.src4_valid          (cmd_xbar_demux_001_src4_valid),           //          .valid
		.src4_data           (cmd_xbar_demux_001_src4_data),            //          .data
		.src4_channel        (cmd_xbar_demux_001_src4_channel),         //          .channel
		.src4_startofpacket  (cmd_xbar_demux_001_src4_startofpacket),   //          .startofpacket
		.src4_endofpacket    (cmd_xbar_demux_001_src4_endofpacket),     //          .endofpacket
		.src5_ready          (cmd_xbar_demux_001_src5_ready),           //      src5.ready
		.src5_valid          (cmd_xbar_demux_001_src5_valid),           //          .valid
		.src5_data           (cmd_xbar_demux_001_src5_data),            //          .data
		.src5_channel        (cmd_xbar_demux_001_src5_channel),         //          .channel
		.src5_startofpacket  (cmd_xbar_demux_001_src5_startofpacket),   //          .startofpacket
		.src5_endofpacket    (cmd_xbar_demux_001_src5_endofpacket),     //          .endofpacket
		.src6_ready          (cmd_xbar_demux_001_src6_ready),           //      src6.ready
		.src6_valid          (cmd_xbar_demux_001_src6_valid),           //          .valid
		.src6_data           (cmd_xbar_demux_001_src6_data),            //          .data
		.src6_channel        (cmd_xbar_demux_001_src6_channel),         //          .channel
		.src6_startofpacket  (cmd_xbar_demux_001_src6_startofpacket),   //          .startofpacket
		.src6_endofpacket    (cmd_xbar_demux_001_src6_endofpacket),     //          .endofpacket
		.src7_ready          (cmd_xbar_demux_001_src7_ready),           //      src7.ready
		.src7_valid          (cmd_xbar_demux_001_src7_valid),           //          .valid
		.src7_data           (cmd_xbar_demux_001_src7_data),            //          .data
		.src7_channel        (cmd_xbar_demux_001_src7_channel),         //          .channel
		.src7_startofpacket  (cmd_xbar_demux_001_src7_startofpacket),   //          .startofpacket
		.src7_endofpacket    (cmd_xbar_demux_001_src7_endofpacket),     //          .endofpacket
		.src8_ready          (cmd_xbar_demux_001_src8_ready),           //      src8.ready
		.src8_valid          (cmd_xbar_demux_001_src8_valid),           //          .valid
		.src8_data           (cmd_xbar_demux_001_src8_data),            //          .data
		.src8_channel        (cmd_xbar_demux_001_src8_channel),         //          .channel
		.src8_startofpacket  (cmd_xbar_demux_001_src8_startofpacket),   //          .startofpacket
		.src8_endofpacket    (cmd_xbar_demux_001_src8_endofpacket),     //          .endofpacket
		.src9_ready          (cmd_xbar_demux_001_src9_ready),           //      src9.ready
		.src9_valid          (cmd_xbar_demux_001_src9_valid),           //          .valid
		.src9_data           (cmd_xbar_demux_001_src9_data),            //          .data
		.src9_channel        (cmd_xbar_demux_001_src9_channel),         //          .channel
		.src9_startofpacket  (cmd_xbar_demux_001_src9_startofpacket),   //          .startofpacket
		.src9_endofpacket    (cmd_xbar_demux_001_src9_endofpacket),     //          .endofpacket
		.src10_ready         (cmd_xbar_demux_001_src10_ready),          //     src10.ready
		.src10_valid         (cmd_xbar_demux_001_src10_valid),          //          .valid
		.src10_data          (cmd_xbar_demux_001_src10_data),           //          .data
		.src10_channel       (cmd_xbar_demux_001_src10_channel),        //          .channel
		.src10_startofpacket (cmd_xbar_demux_001_src10_startofpacket),  //          .startofpacket
		.src10_endofpacket   (cmd_xbar_demux_001_src10_endofpacket),    //          .endofpacket
		.src11_ready         (cmd_xbar_demux_001_src11_ready),          //     src11.ready
		.src11_valid         (cmd_xbar_demux_001_src11_valid),          //          .valid
		.src11_data          (cmd_xbar_demux_001_src11_data),           //          .data
		.src11_channel       (cmd_xbar_demux_001_src11_channel),        //          .channel
		.src11_startofpacket (cmd_xbar_demux_001_src11_startofpacket),  //          .startofpacket
		.src11_endofpacket   (cmd_xbar_demux_001_src11_endofpacket),    //          .endofpacket
		.src12_ready         (cmd_xbar_demux_001_src12_ready),          //     src12.ready
		.src12_valid         (cmd_xbar_demux_001_src12_valid),          //          .valid
		.src12_data          (cmd_xbar_demux_001_src12_data),           //          .data
		.src12_channel       (cmd_xbar_demux_001_src12_channel),        //          .channel
		.src12_startofpacket (cmd_xbar_demux_001_src12_startofpacket),  //          .startofpacket
		.src12_endofpacket   (cmd_xbar_demux_001_src12_endofpacket),    //          .endofpacket
		.src13_ready         (cmd_xbar_demux_001_src13_ready),          //     src13.ready
		.src13_valid         (cmd_xbar_demux_001_src13_valid),          //          .valid
		.src13_data          (cmd_xbar_demux_001_src13_data),           //          .data
		.src13_channel       (cmd_xbar_demux_001_src13_channel),        //          .channel
		.src13_startofpacket (cmd_xbar_demux_001_src13_startofpacket),  //          .startofpacket
		.src13_endofpacket   (cmd_xbar_demux_001_src13_endofpacket),    //          .endofpacket
		.src14_ready         (cmd_xbar_demux_001_src14_ready),          //     src14.ready
		.src14_valid         (cmd_xbar_demux_001_src14_valid),          //          .valid
		.src14_data          (cmd_xbar_demux_001_src14_data),           //          .data
		.src14_channel       (cmd_xbar_demux_001_src14_channel),        //          .channel
		.src14_startofpacket (cmd_xbar_demux_001_src14_startofpacket),  //          .startofpacket
		.src14_endofpacket   (cmd_xbar_demux_001_src14_endofpacket),    //          .endofpacket
		.src15_ready         (cmd_xbar_demux_001_src15_ready),          //     src15.ready
		.src15_valid         (cmd_xbar_demux_001_src15_valid),          //          .valid
		.src15_data          (cmd_xbar_demux_001_src15_data),           //          .data
		.src15_channel       (cmd_xbar_demux_001_src15_channel),        //          .channel
		.src15_startofpacket (cmd_xbar_demux_001_src15_startofpacket),  //          .startofpacket
		.src15_endofpacket   (cmd_xbar_demux_001_src15_endofpacket),    //          .endofpacket
		.src16_ready         (cmd_xbar_demux_001_src16_ready),          //     src16.ready
		.src16_valid         (cmd_xbar_demux_001_src16_valid),          //          .valid
		.src16_data          (cmd_xbar_demux_001_src16_data),           //          .data
		.src16_channel       (cmd_xbar_demux_001_src16_channel),        //          .channel
		.src16_startofpacket (cmd_xbar_demux_001_src16_startofpacket),  //          .startofpacket
		.src16_endofpacket   (cmd_xbar_demux_001_src16_endofpacket),    //          .endofpacket
		.src17_ready         (cmd_xbar_demux_001_src17_ready),          //     src17.ready
		.src17_valid         (cmd_xbar_demux_001_src17_valid),          //          .valid
		.src17_data          (cmd_xbar_demux_001_src17_data),           //          .data
		.src17_channel       (cmd_xbar_demux_001_src17_channel),        //          .channel
		.src17_startofpacket (cmd_xbar_demux_001_src17_startofpacket),  //          .startofpacket
		.src17_endofpacket   (cmd_xbar_demux_001_src17_endofpacket),    //          .endofpacket
		.src18_ready         (cmd_xbar_demux_001_src18_ready),          //     src18.ready
		.src18_valid         (cmd_xbar_demux_001_src18_valid),          //          .valid
		.src18_data          (cmd_xbar_demux_001_src18_data),           //          .data
		.src18_channel       (cmd_xbar_demux_001_src18_channel),        //          .channel
		.src18_startofpacket (cmd_xbar_demux_001_src18_startofpacket),  //          .startofpacket
		.src18_endofpacket   (cmd_xbar_demux_001_src18_endofpacket),    //          .endofpacket
		.src19_ready         (cmd_xbar_demux_001_src19_ready),          //     src19.ready
		.src19_valid         (cmd_xbar_demux_001_src19_valid),          //          .valid
		.src19_data          (cmd_xbar_demux_001_src19_data),           //          .data
		.src19_channel       (cmd_xbar_demux_001_src19_channel),        //          .channel
		.src19_startofpacket (cmd_xbar_demux_001_src19_startofpacket),  //          .startofpacket
		.src19_endofpacket   (cmd_xbar_demux_001_src19_endofpacket),    //          .endofpacket
		.src20_ready         (cmd_xbar_demux_001_src20_ready),          //     src20.ready
		.src20_valid         (cmd_xbar_demux_001_src20_valid),          //          .valid
		.src20_data          (cmd_xbar_demux_001_src20_data),           //          .data
		.src20_channel       (cmd_xbar_demux_001_src20_channel),        //          .channel
		.src20_startofpacket (cmd_xbar_demux_001_src20_startofpacket),  //          .startofpacket
		.src20_endofpacket   (cmd_xbar_demux_001_src20_endofpacket),    //          .endofpacket
		.src21_ready         (cmd_xbar_demux_001_src21_ready),          //     src21.ready
		.src21_valid         (cmd_xbar_demux_001_src21_valid),          //          .valid
		.src21_data          (cmd_xbar_demux_001_src21_data),           //          .data
		.src21_channel       (cmd_xbar_demux_001_src21_channel),        //          .channel
		.src21_startofpacket (cmd_xbar_demux_001_src21_startofpacket),  //          .startofpacket
		.src21_endofpacket   (cmd_xbar_demux_001_src21_endofpacket),    //          .endofpacket
		.src22_ready         (cmd_xbar_demux_001_src22_ready),          //     src22.ready
		.src22_valid         (cmd_xbar_demux_001_src22_valid),          //          .valid
		.src22_data          (cmd_xbar_demux_001_src22_data),           //          .data
		.src22_channel       (cmd_xbar_demux_001_src22_channel),        //          .channel
		.src22_startofpacket (cmd_xbar_demux_001_src22_startofpacket),  //          .startofpacket
		.src22_endofpacket   (cmd_xbar_demux_001_src22_endofpacket),    //          .endofpacket
		.src23_ready         (cmd_xbar_demux_001_src23_ready),          //     src23.ready
		.src23_valid         (cmd_xbar_demux_001_src23_valid),          //          .valid
		.src23_data          (cmd_xbar_demux_001_src23_data),           //          .data
		.src23_channel       (cmd_xbar_demux_001_src23_channel),        //          .channel
		.src23_startofpacket (cmd_xbar_demux_001_src23_startofpacket),  //          .startofpacket
		.src23_endofpacket   (cmd_xbar_demux_001_src23_endofpacket),    //          .endofpacket
		.src24_ready         (cmd_xbar_demux_001_src24_ready),          //     src24.ready
		.src24_valid         (cmd_xbar_demux_001_src24_valid),          //          .valid
		.src24_data          (cmd_xbar_demux_001_src24_data),           //          .data
		.src24_channel       (cmd_xbar_demux_001_src24_channel),        //          .channel
		.src24_startofpacket (cmd_xbar_demux_001_src24_startofpacket),  //          .startofpacket
		.src24_endofpacket   (cmd_xbar_demux_001_src24_endofpacket),    //          .endofpacket
		.src25_ready         (cmd_xbar_demux_001_src25_ready),          //     src25.ready
		.src25_valid         (cmd_xbar_demux_001_src25_valid),          //          .valid
		.src25_data          (cmd_xbar_demux_001_src25_data),           //          .data
		.src25_channel       (cmd_xbar_demux_001_src25_channel),        //          .channel
		.src25_startofpacket (cmd_xbar_demux_001_src25_startofpacket),  //          .startofpacket
		.src25_endofpacket   (cmd_xbar_demux_001_src25_endofpacket),    //          .endofpacket
		.src26_ready         (cmd_xbar_demux_001_src26_ready),          //     src26.ready
		.src26_valid         (cmd_xbar_demux_001_src26_valid),          //          .valid
		.src26_data          (cmd_xbar_demux_001_src26_data),           //          .data
		.src26_channel       (cmd_xbar_demux_001_src26_channel),        //          .channel
		.src26_startofpacket (cmd_xbar_demux_001_src26_startofpacket),  //          .startofpacket
		.src26_endofpacket   (cmd_xbar_demux_001_src26_endofpacket),    //          .endofpacket
		.src27_ready         (cmd_xbar_demux_001_src27_ready),          //     src27.ready
		.src27_valid         (cmd_xbar_demux_001_src27_valid),          //          .valid
		.src27_data          (cmd_xbar_demux_001_src27_data),           //          .data
		.src27_channel       (cmd_xbar_demux_001_src27_channel),        //          .channel
		.src27_startofpacket (cmd_xbar_demux_001_src27_startofpacket),  //          .startofpacket
		.src27_endofpacket   (cmd_xbar_demux_001_src27_endofpacket),    //          .endofpacket
		.src28_ready         (cmd_xbar_demux_001_src28_ready),          //     src28.ready
		.src28_valid         (cmd_xbar_demux_001_src28_valid),          //          .valid
		.src28_data          (cmd_xbar_demux_001_src28_data),           //          .data
		.src28_channel       (cmd_xbar_demux_001_src28_channel),        //          .channel
		.src28_startofpacket (cmd_xbar_demux_001_src28_startofpacket),  //          .startofpacket
		.src28_endofpacket   (cmd_xbar_demux_001_src28_endofpacket),    //          .endofpacket
		.src29_ready         (cmd_xbar_demux_001_src29_ready),          //     src29.ready
		.src29_valid         (cmd_xbar_demux_001_src29_valid),          //          .valid
		.src29_data          (cmd_xbar_demux_001_src29_data),           //          .data
		.src29_channel       (cmd_xbar_demux_001_src29_channel),        //          .channel
		.src29_startofpacket (cmd_xbar_demux_001_src29_startofpacket),  //          .startofpacket
		.src29_endofpacket   (cmd_xbar_demux_001_src29_endofpacket),    //          .endofpacket
		.src30_ready         (cmd_xbar_demux_001_src30_ready),          //     src30.ready
		.src30_valid         (cmd_xbar_demux_001_src30_valid),          //          .valid
		.src30_data          (cmd_xbar_demux_001_src30_data),           //          .data
		.src30_channel       (cmd_xbar_demux_001_src30_channel),        //          .channel
		.src30_startofpacket (cmd_xbar_demux_001_src30_startofpacket),  //          .startofpacket
		.src30_endofpacket   (cmd_xbar_demux_001_src30_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src0_ready),               //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src0_valid),               //          .valid
		.sink0_channel       (cmd_xbar_demux_src0_channel),             //          .channel
		.sink0_data          (cmd_xbar_demux_src0_data),                //          .data
		.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket),         //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src0_ready),           //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src0_valid),           //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src0_channel),         //          .channel
		.sink1_data          (cmd_xbar_demux_001_src0_data),            //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src0_startofpacket),   //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux_001 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_001_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_001_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_001_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_001_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src1_ready),               //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src1_valid),               //          .valid
		.sink0_channel       (cmd_xbar_demux_src1_channel),             //          .channel
		.sink0_data          (cmd_xbar_demux_src1_data),                //          .data
		.sink0_startofpacket (cmd_xbar_demux_src1_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src1_endofpacket),         //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src1_ready),           //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src1_valid),           //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src1_channel),         //          .channel
		.sink1_data          (cmd_xbar_demux_001_src1_data),            //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src1_startofpacket),   //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src1_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux_002 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_002_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_002_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_002_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_002_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_002_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_002_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src2_ready),               //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src2_valid),               //          .valid
		.sink0_channel       (cmd_xbar_demux_src2_channel),             //          .channel
		.sink0_data          (cmd_xbar_demux_src2_data),                //          .data
		.sink0_startofpacket (cmd_xbar_demux_src2_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src2_endofpacket),         //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src2_ready),           //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src2_valid),           //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src2_channel),         //          .channel
		.sink1_data          (cmd_xbar_demux_001_src2_data),            //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src2_startofpacket),   //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src2_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_003 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_003_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_003_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_003_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_003_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_003_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_003_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src3_ready),           //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src3_valid),           //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src3_channel),         //          .channel
		.sink0_data          (cmd_xbar_demux_001_src3_data),            //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src3_startofpacket),   //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src3_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_004 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_004_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_004_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_004_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_004_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_004_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_004_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src4_ready),           //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src4_valid),           //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src4_channel),         //          .channel
		.sink0_data          (cmd_xbar_demux_001_src4_data),            //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src4_startofpacket),   //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src4_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_005 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_005_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_005_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_005_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_005_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_005_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_005_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src5_ready),           //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src5_valid),           //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src5_channel),         //          .channel
		.sink0_data          (cmd_xbar_demux_001_src5_data),            //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src5_startofpacket),   //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src5_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_006 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_006_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_006_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_006_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_006_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_006_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_006_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src6_ready),           //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src6_valid),           //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src6_channel),         //          .channel
		.sink0_data          (cmd_xbar_demux_001_src6_data),            //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src6_startofpacket),   //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src6_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_007 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_007_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_007_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_007_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_007_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_007_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_007_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src7_ready),           //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src7_valid),           //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src7_channel),         //          .channel
		.sink0_data          (cmd_xbar_demux_001_src7_data),            //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src7_startofpacket),   //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src7_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_008 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_008_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_008_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_008_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_008_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_008_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_008_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src8_ready),           //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src8_valid),           //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src8_channel),         //          .channel
		.sink0_data          (cmd_xbar_demux_001_src8_data),            //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src8_startofpacket),   //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src8_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_009 cmd_xbar_mux_009 (
		.clk                 (clk_50_clk_clk),                                            //       clk.clk
		.reset               (sys_pll_inclk_interface_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_009_src_ready),                                //       src.ready
		.src_valid           (cmd_xbar_mux_009_src_valid),                                //          .valid
		.src_data            (cmd_xbar_mux_009_src_data),                                 //          .data
		.src_channel         (cmd_xbar_mux_009_src_channel),                              //          .channel
		.src_startofpacket   (cmd_xbar_mux_009_src_startofpacket),                        //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_009_src_endofpacket),                          //          .endofpacket
		.sink0_ready         (crosser_out_ready),                                         //     sink0.ready
		.sink0_valid         (crosser_out_valid),                                         //          .valid
		.sink0_channel       (crosser_out_channel),                                       //          .channel
		.sink0_data          (crosser_out_data),                                          //          .data
		.sink0_startofpacket (crosser_out_startofpacket),                                 //          .startofpacket
		.sink0_endofpacket   (crosser_out_endofpacket)                                    //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_010 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_010_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_010_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_010_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_010_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_010_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_010_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src10_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src10_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src10_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src10_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src10_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src10_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_011 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_011_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_011_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_011_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_011_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_011_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_011_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src11_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src11_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src11_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src11_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src11_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src11_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_012 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_012_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_012_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_012_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_012_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_012_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_012_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src12_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src12_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src12_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src12_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src12_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src12_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_013 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_013_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_013_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_013_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_013_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_013_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_013_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src13_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src13_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src13_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src13_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src13_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src13_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_014 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_014_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_014_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_014_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_014_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_014_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_014_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src14_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src14_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src14_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src14_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src14_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src14_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_015 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_015_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_015_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_015_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_015_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_015_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_015_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src15_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src15_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src15_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src15_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src15_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src15_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_016 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_016_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_016_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_016_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_016_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_016_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_016_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src16_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src16_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src16_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src16_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src16_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src16_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_017 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_017_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_017_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_017_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_017_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_017_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_017_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src17_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src17_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src17_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src17_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src17_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src17_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_018 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_018_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_018_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_018_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_018_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_018_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_018_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src18_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src18_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src18_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src18_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src18_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src18_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_019 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_019_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_019_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_019_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_019_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_019_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_019_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src19_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src19_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src19_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src19_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src19_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src19_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_020 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_020_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_020_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_020_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_020_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_020_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_020_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src20_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src20_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src20_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src20_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src20_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src20_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_021 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_021_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_021_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_021_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_021_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_021_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_021_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src21_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src21_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src21_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src21_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src21_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src21_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_022 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_022_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_022_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_022_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_022_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_022_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_022_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src22_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src22_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src22_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src22_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src22_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src22_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_023 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_023_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_023_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_023_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_023_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_023_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_023_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src23_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src23_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src23_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src23_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src23_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src23_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_024 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_024_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_024_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_024_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_024_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_024_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_024_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src24_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src24_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src24_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src24_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src24_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src24_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_025 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_025_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_025_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_025_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_025_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_025_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_025_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src25_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src25_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src25_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src25_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src25_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src25_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_026 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_026_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_026_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_026_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_026_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_026_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_026_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src26_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src26_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src26_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src26_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src26_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src26_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_027 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_027_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_027_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_027_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_027_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_027_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_027_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src27_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src27_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src27_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src27_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src27_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src27_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_028 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_028_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_028_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_028_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_028_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_028_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_028_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src28_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src28_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src28_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src28_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src28_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src28_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_029 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_029_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_029_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_029_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_029_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_029_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_029_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src29_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src29_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src29_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src29_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src29_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src29_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_cmd_xbar_mux_003 cmd_xbar_mux_030 (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_030_src_ready),              //       src.ready
		.src_valid           (cmd_xbar_mux_030_src_valid),              //          .valid
		.src_data            (cmd_xbar_mux_030_src_data),               //          .data
		.src_channel         (cmd_xbar_mux_030_src_channel),            //          .channel
		.src_startofpacket   (cmd_xbar_mux_030_src_startofpacket),      //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_030_src_endofpacket),        //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src30_ready),          //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src30_valid),          //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src30_channel),        //          .channel
		.sink0_data          (cmd_xbar_demux_001_src30_data),           //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src30_startofpacket),  //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src30_endofpacket)     //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux rsp_xbar_demux (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_src_ready),                     //      sink.ready
		.sink_channel       (id_router_src_channel),                   //          .channel
		.sink_data          (id_router_src_data),                      //          .data
		.sink_startofpacket (id_router_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket),         //          .endofpacket
		.src1_ready         (rsp_xbar_demux_src1_ready),               //      src1.ready
		.src1_valid         (rsp_xbar_demux_src1_valid),               //          .valid
		.src1_data          (rsp_xbar_demux_src1_data),                //          .data
		.src1_channel       (rsp_xbar_demux_src1_channel),             //          .channel
		.src1_startofpacket (rsp_xbar_demux_src1_startofpacket),       //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_src1_endofpacket)          //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux rsp_xbar_demux_001 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (width_adapter_src_ready),                 //      sink.ready
		.sink_channel       (width_adapter_src_channel),               //          .channel
		.sink_data          (width_adapter_src_data),                  //          .data
		.sink_startofpacket (width_adapter_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (width_adapter_src_endofpacket),           //          .endofpacket
		.sink_valid         (width_adapter_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_001_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_001_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_001_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_001_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket),     //          .endofpacket
		.src1_ready         (rsp_xbar_demux_001_src1_ready),           //      src1.ready
		.src1_valid         (rsp_xbar_demux_001_src1_valid),           //          .valid
		.src1_data          (rsp_xbar_demux_001_src1_data),            //          .data
		.src1_channel       (rsp_xbar_demux_001_src1_channel),         //          .channel
		.src1_startofpacket (rsp_xbar_demux_001_src1_startofpacket),   //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_001_src1_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux rsp_xbar_demux_002 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_002_src_ready),                 //      sink.ready
		.sink_channel       (id_router_002_src_channel),               //          .channel
		.sink_data          (id_router_002_src_data),                  //          .data
		.sink_startofpacket (id_router_002_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_002_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_002_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_002_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_002_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_002_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_002_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_002_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_002_src0_endofpacket),     //          .endofpacket
		.src1_ready         (rsp_xbar_demux_002_src1_ready),           //      src1.ready
		.src1_valid         (rsp_xbar_demux_002_src1_valid),           //          .valid
		.src1_data          (rsp_xbar_demux_002_src1_data),            //          .data
		.src1_channel       (rsp_xbar_demux_002_src1_channel),         //          .channel
		.src1_startofpacket (rsp_xbar_demux_002_src1_startofpacket),   //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_002_src1_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_003 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_003_src_ready),                 //      sink.ready
		.sink_channel       (id_router_003_src_channel),               //          .channel
		.sink_data          (id_router_003_src_data),                  //          .data
		.sink_startofpacket (id_router_003_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_003_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_003_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_003_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_003_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_003_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_003_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_003_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_003_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_004 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_004_src_ready),                 //      sink.ready
		.sink_channel       (id_router_004_src_channel),               //          .channel
		.sink_data          (id_router_004_src_data),                  //          .data
		.sink_startofpacket (id_router_004_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_004_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_004_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_004_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_004_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_004_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_004_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_004_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_004_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_005 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_005_src_ready),                 //      sink.ready
		.sink_channel       (id_router_005_src_channel),               //          .channel
		.sink_data          (id_router_005_src_data),                  //          .data
		.sink_startofpacket (id_router_005_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_005_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_005_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_005_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_005_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_005_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_005_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_005_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_005_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_006 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_006_src_ready),                 //      sink.ready
		.sink_channel       (id_router_006_src_channel),               //          .channel
		.sink_data          (id_router_006_src_data),                  //          .data
		.sink_startofpacket (id_router_006_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_006_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_006_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_006_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_006_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_006_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_006_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_006_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_006_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_007 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_007_src_ready),                 //      sink.ready
		.sink_channel       (id_router_007_src_channel),               //          .channel
		.sink_data          (id_router_007_src_data),                  //          .data
		.sink_startofpacket (id_router_007_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_007_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_007_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_007_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_007_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_007_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_007_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_007_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_007_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_008 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_008_src_ready),                 //      sink.ready
		.sink_channel       (id_router_008_src_channel),               //          .channel
		.sink_data          (id_router_008_src_data),                  //          .data
		.sink_startofpacket (id_router_008_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_008_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_008_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_008_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_008_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_008_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_008_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_008_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_008_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_009 rsp_xbar_demux_009 (
		.clk                (clk_50_clk_clk),                                            //       clk.clk
		.reset              (sys_pll_inclk_interface_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_009_src_ready),                                   //      sink.ready
		.sink_channel       (id_router_009_src_channel),                                 //          .channel
		.sink_data          (id_router_009_src_data),                                    //          .data
		.sink_startofpacket (id_router_009_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (id_router_009_src_endofpacket),                             //          .endofpacket
		.sink_valid         (id_router_009_src_valid),                                   //          .valid
		.src0_ready         (rsp_xbar_demux_009_src0_ready),                             //      src0.ready
		.src0_valid         (rsp_xbar_demux_009_src0_valid),                             //          .valid
		.src0_data          (rsp_xbar_demux_009_src0_data),                              //          .data
		.src0_channel       (rsp_xbar_demux_009_src0_channel),                           //          .channel
		.src0_startofpacket (rsp_xbar_demux_009_src0_startofpacket),                     //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_009_src0_endofpacket)                        //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_010 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (width_adapter_001_src_ready),             //      sink.ready
		.sink_channel       (width_adapter_001_src_channel),           //          .channel
		.sink_data          (width_adapter_001_src_data),              //          .data
		.sink_startofpacket (width_adapter_001_src_startofpacket),     //          .startofpacket
		.sink_endofpacket   (width_adapter_001_src_endofpacket),       //          .endofpacket
		.sink_valid         (width_adapter_001_src_valid),             //          .valid
		.src0_ready         (rsp_xbar_demux_010_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_010_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_010_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_010_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_010_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_010_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_011 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_011_src_ready),                 //      sink.ready
		.sink_channel       (id_router_011_src_channel),               //          .channel
		.sink_data          (id_router_011_src_data),                  //          .data
		.sink_startofpacket (id_router_011_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_011_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_011_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_011_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_011_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_011_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_011_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_011_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_011_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_012 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_012_src_ready),                 //      sink.ready
		.sink_channel       (id_router_012_src_channel),               //          .channel
		.sink_data          (id_router_012_src_data),                  //          .data
		.sink_startofpacket (id_router_012_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_012_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_012_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_012_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_012_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_012_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_012_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_012_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_012_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_013 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_013_src_ready),                 //      sink.ready
		.sink_channel       (id_router_013_src_channel),               //          .channel
		.sink_data          (id_router_013_src_data),                  //          .data
		.sink_startofpacket (id_router_013_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_013_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_013_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_013_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_013_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_013_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_013_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_013_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_013_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_014 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_014_src_ready),                 //      sink.ready
		.sink_channel       (id_router_014_src_channel),               //          .channel
		.sink_data          (id_router_014_src_data),                  //          .data
		.sink_startofpacket (id_router_014_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_014_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_014_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_014_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_014_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_014_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_014_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_014_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_014_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_015 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_015_src_ready),                 //      sink.ready
		.sink_channel       (id_router_015_src_channel),               //          .channel
		.sink_data          (id_router_015_src_data),                  //          .data
		.sink_startofpacket (id_router_015_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_015_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_015_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_015_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_015_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_015_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_015_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_015_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_015_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_016 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_016_src_ready),                 //      sink.ready
		.sink_channel       (id_router_016_src_channel),               //          .channel
		.sink_data          (id_router_016_src_data),                  //          .data
		.sink_startofpacket (id_router_016_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_016_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_016_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_016_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_016_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_016_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_016_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_016_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_016_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_017 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_017_src_ready),                 //      sink.ready
		.sink_channel       (id_router_017_src_channel),               //          .channel
		.sink_data          (id_router_017_src_data),                  //          .data
		.sink_startofpacket (id_router_017_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_017_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_017_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_017_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_017_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_017_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_017_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_017_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_017_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_018 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_018_src_ready),                 //      sink.ready
		.sink_channel       (id_router_018_src_channel),               //          .channel
		.sink_data          (id_router_018_src_data),                  //          .data
		.sink_startofpacket (id_router_018_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_018_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_018_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_018_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_018_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_018_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_018_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_018_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_018_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_019 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_019_src_ready),                 //      sink.ready
		.sink_channel       (id_router_019_src_channel),               //          .channel
		.sink_data          (id_router_019_src_data),                  //          .data
		.sink_startofpacket (id_router_019_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_019_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_019_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_019_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_019_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_019_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_019_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_019_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_019_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_020 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_020_src_ready),                 //      sink.ready
		.sink_channel       (id_router_020_src_channel),               //          .channel
		.sink_data          (id_router_020_src_data),                  //          .data
		.sink_startofpacket (id_router_020_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_020_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_020_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_020_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_020_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_020_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_020_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_020_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_020_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_021 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_021_src_ready),                 //      sink.ready
		.sink_channel       (id_router_021_src_channel),               //          .channel
		.sink_data          (id_router_021_src_data),                  //          .data
		.sink_startofpacket (id_router_021_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_021_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_021_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_021_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_021_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_021_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_021_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_021_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_021_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_022 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_022_src_ready),                 //      sink.ready
		.sink_channel       (id_router_022_src_channel),               //          .channel
		.sink_data          (id_router_022_src_data),                  //          .data
		.sink_startofpacket (id_router_022_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_022_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_022_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_022_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_022_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_022_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_022_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_022_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_022_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_023 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_023_src_ready),                 //      sink.ready
		.sink_channel       (id_router_023_src_channel),               //          .channel
		.sink_data          (id_router_023_src_data),                  //          .data
		.sink_startofpacket (id_router_023_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_023_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_023_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_023_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_023_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_023_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_023_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_023_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_023_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_024 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_024_src_ready),                 //      sink.ready
		.sink_channel       (id_router_024_src_channel),               //          .channel
		.sink_data          (id_router_024_src_data),                  //          .data
		.sink_startofpacket (id_router_024_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_024_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_024_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_024_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_024_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_024_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_024_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_024_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_024_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_025 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_025_src_ready),                 //      sink.ready
		.sink_channel       (id_router_025_src_channel),               //          .channel
		.sink_data          (id_router_025_src_data),                  //          .data
		.sink_startofpacket (id_router_025_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_025_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_025_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_025_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_025_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_025_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_025_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_025_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_025_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_026 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_026_src_ready),                 //      sink.ready
		.sink_channel       (id_router_026_src_channel),               //          .channel
		.sink_data          (id_router_026_src_data),                  //          .data
		.sink_startofpacket (id_router_026_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_026_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_026_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_026_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_026_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_026_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_026_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_026_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_026_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_027 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_027_src_ready),                 //      sink.ready
		.sink_channel       (id_router_027_src_channel),               //          .channel
		.sink_data          (id_router_027_src_data),                  //          .data
		.sink_startofpacket (id_router_027_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_027_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_027_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_027_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_027_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_027_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_027_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_027_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_027_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_028 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_028_src_ready),                 //      sink.ready
		.sink_channel       (id_router_028_src_channel),               //          .channel
		.sink_data          (id_router_028_src_data),                  //          .data
		.sink_startofpacket (id_router_028_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_028_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_028_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_028_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_028_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_028_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_028_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_028_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_028_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_029 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_029_src_ready),                 //      sink.ready
		.sink_channel       (id_router_029_src_channel),               //          .channel
		.sink_data          (id_router_029_src_data),                  //          .data
		.sink_startofpacket (id_router_029_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_029_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_029_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_029_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_029_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_029_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_029_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_029_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_029_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_demux_003 rsp_xbar_demux_030 (
		.clk                (sys_clk_clk_clk),                         //       clk.clk
		.reset              (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_030_src_ready),                 //      sink.ready
		.sink_channel       (id_router_030_src_channel),               //          .channel
		.sink_data          (id_router_030_src_data),                  //          .data
		.sink_startofpacket (id_router_030_src_startofpacket),         //          .startofpacket
		.sink_endofpacket   (id_router_030_src_endofpacket),           //          .endofpacket
		.sink_valid         (id_router_030_src_valid),                 //          .valid
		.src0_ready         (rsp_xbar_demux_030_src0_ready),           //      src0.ready
		.src0_valid         (rsp_xbar_demux_030_src0_valid),           //          .valid
		.src0_data          (rsp_xbar_demux_030_src0_data),            //          .data
		.src0_channel       (rsp_xbar_demux_030_src0_channel),         //          .channel
		.src0_startofpacket (rsp_xbar_demux_030_src0_startofpacket),   //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_030_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_mux rsp_xbar_mux (
		.clk                 (sys_clk_clk_clk),                         //       clk.clk
		.reset               (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_xbar_mux_src_ready),                  //       src.ready
		.src_valid           (rsp_xbar_mux_src_valid),                  //          .valid
		.src_data            (rsp_xbar_mux_src_data),                   //          .data
		.src_channel         (rsp_xbar_mux_src_channel),                //          .channel
		.src_startofpacket   (rsp_xbar_mux_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (rsp_xbar_mux_src_endofpacket),            //          .endofpacket
		.sink0_ready         (rsp_xbar_demux_src0_ready),               //     sink0.ready
		.sink0_valid         (rsp_xbar_demux_src0_valid),               //          .valid
		.sink0_channel       (rsp_xbar_demux_src0_channel),             //          .channel
		.sink0_data          (rsp_xbar_demux_src0_data),                //          .data
		.sink0_startofpacket (rsp_xbar_demux_src0_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (rsp_xbar_demux_src0_endofpacket),         //          .endofpacket
		.sink1_ready         (rsp_xbar_demux_001_src0_ready),           //     sink1.ready
		.sink1_valid         (rsp_xbar_demux_001_src0_valid),           //          .valid
		.sink1_channel       (rsp_xbar_demux_001_src0_channel),         //          .channel
		.sink1_data          (rsp_xbar_demux_001_src0_data),            //          .data
		.sink1_startofpacket (rsp_xbar_demux_001_src0_startofpacket),   //          .startofpacket
		.sink1_endofpacket   (rsp_xbar_demux_001_src0_endofpacket),     //          .endofpacket
		.sink2_ready         (rsp_xbar_demux_002_src0_ready),           //     sink2.ready
		.sink2_valid         (rsp_xbar_demux_002_src0_valid),           //          .valid
		.sink2_channel       (rsp_xbar_demux_002_src0_channel),         //          .channel
		.sink2_data          (rsp_xbar_demux_002_src0_data),            //          .data
		.sink2_startofpacket (rsp_xbar_demux_002_src0_startofpacket),   //          .startofpacket
		.sink2_endofpacket   (rsp_xbar_demux_002_src0_endofpacket)      //          .endofpacket
	);

	NIOS_mm_interconnect_0_rsp_xbar_mux_001 rsp_xbar_mux_001 (
		.clk                  (sys_clk_clk_clk),                         //       clk.clk
		.reset                (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready            (rsp_xbar_mux_001_src_ready),              //       src.ready
		.src_valid            (rsp_xbar_mux_001_src_valid),              //          .valid
		.src_data             (rsp_xbar_mux_001_src_data),               //          .data
		.src_channel          (rsp_xbar_mux_001_src_channel),            //          .channel
		.src_startofpacket    (rsp_xbar_mux_001_src_startofpacket),      //          .startofpacket
		.src_endofpacket      (rsp_xbar_mux_001_src_endofpacket),        //          .endofpacket
		.sink0_ready          (rsp_xbar_demux_src1_ready),               //     sink0.ready
		.sink0_valid          (rsp_xbar_demux_src1_valid),               //          .valid
		.sink0_channel        (rsp_xbar_demux_src1_channel),             //          .channel
		.sink0_data           (rsp_xbar_demux_src1_data),                //          .data
		.sink0_startofpacket  (rsp_xbar_demux_src1_startofpacket),       //          .startofpacket
		.sink0_endofpacket    (rsp_xbar_demux_src1_endofpacket),         //          .endofpacket
		.sink1_ready          (rsp_xbar_demux_001_src1_ready),           //     sink1.ready
		.sink1_valid          (rsp_xbar_demux_001_src1_valid),           //          .valid
		.sink1_channel        (rsp_xbar_demux_001_src1_channel),         //          .channel
		.sink1_data           (rsp_xbar_demux_001_src1_data),            //          .data
		.sink1_startofpacket  (rsp_xbar_demux_001_src1_startofpacket),   //          .startofpacket
		.sink1_endofpacket    (rsp_xbar_demux_001_src1_endofpacket),     //          .endofpacket
		.sink2_ready          (rsp_xbar_demux_002_src1_ready),           //     sink2.ready
		.sink2_valid          (rsp_xbar_demux_002_src1_valid),           //          .valid
		.sink2_channel        (rsp_xbar_demux_002_src1_channel),         //          .channel
		.sink2_data           (rsp_xbar_demux_002_src1_data),            //          .data
		.sink2_startofpacket  (rsp_xbar_demux_002_src1_startofpacket),   //          .startofpacket
		.sink2_endofpacket    (rsp_xbar_demux_002_src1_endofpacket),     //          .endofpacket
		.sink3_ready          (rsp_xbar_demux_003_src0_ready),           //     sink3.ready
		.sink3_valid          (rsp_xbar_demux_003_src0_valid),           //          .valid
		.sink3_channel        (rsp_xbar_demux_003_src0_channel),         //          .channel
		.sink3_data           (rsp_xbar_demux_003_src0_data),            //          .data
		.sink3_startofpacket  (rsp_xbar_demux_003_src0_startofpacket),   //          .startofpacket
		.sink3_endofpacket    (rsp_xbar_demux_003_src0_endofpacket),     //          .endofpacket
		.sink4_ready          (rsp_xbar_demux_004_src0_ready),           //     sink4.ready
		.sink4_valid          (rsp_xbar_demux_004_src0_valid),           //          .valid
		.sink4_channel        (rsp_xbar_demux_004_src0_channel),         //          .channel
		.sink4_data           (rsp_xbar_demux_004_src0_data),            //          .data
		.sink4_startofpacket  (rsp_xbar_demux_004_src0_startofpacket),   //          .startofpacket
		.sink4_endofpacket    (rsp_xbar_demux_004_src0_endofpacket),     //          .endofpacket
		.sink5_ready          (rsp_xbar_demux_005_src0_ready),           //     sink5.ready
		.sink5_valid          (rsp_xbar_demux_005_src0_valid),           //          .valid
		.sink5_channel        (rsp_xbar_demux_005_src0_channel),         //          .channel
		.sink5_data           (rsp_xbar_demux_005_src0_data),            //          .data
		.sink5_startofpacket  (rsp_xbar_demux_005_src0_startofpacket),   //          .startofpacket
		.sink5_endofpacket    (rsp_xbar_demux_005_src0_endofpacket),     //          .endofpacket
		.sink6_ready          (rsp_xbar_demux_006_src0_ready),           //     sink6.ready
		.sink6_valid          (rsp_xbar_demux_006_src0_valid),           //          .valid
		.sink6_channel        (rsp_xbar_demux_006_src0_channel),         //          .channel
		.sink6_data           (rsp_xbar_demux_006_src0_data),            //          .data
		.sink6_startofpacket  (rsp_xbar_demux_006_src0_startofpacket),   //          .startofpacket
		.sink6_endofpacket    (rsp_xbar_demux_006_src0_endofpacket),     //          .endofpacket
		.sink7_ready          (rsp_xbar_demux_007_src0_ready),           //     sink7.ready
		.sink7_valid          (rsp_xbar_demux_007_src0_valid),           //          .valid
		.sink7_channel        (rsp_xbar_demux_007_src0_channel),         //          .channel
		.sink7_data           (rsp_xbar_demux_007_src0_data),            //          .data
		.sink7_startofpacket  (rsp_xbar_demux_007_src0_startofpacket),   //          .startofpacket
		.sink7_endofpacket    (rsp_xbar_demux_007_src0_endofpacket),     //          .endofpacket
		.sink8_ready          (rsp_xbar_demux_008_src0_ready),           //     sink8.ready
		.sink8_valid          (rsp_xbar_demux_008_src0_valid),           //          .valid
		.sink8_channel        (rsp_xbar_demux_008_src0_channel),         //          .channel
		.sink8_data           (rsp_xbar_demux_008_src0_data),            //          .data
		.sink8_startofpacket  (rsp_xbar_demux_008_src0_startofpacket),   //          .startofpacket
		.sink8_endofpacket    (rsp_xbar_demux_008_src0_endofpacket),     //          .endofpacket
		.sink9_ready          (crosser_001_out_ready),                   //     sink9.ready
		.sink9_valid          (crosser_001_out_valid),                   //          .valid
		.sink9_channel        (crosser_001_out_channel),                 //          .channel
		.sink9_data           (crosser_001_out_data),                    //          .data
		.sink9_startofpacket  (crosser_001_out_startofpacket),           //          .startofpacket
		.sink9_endofpacket    (crosser_001_out_endofpacket),             //          .endofpacket
		.sink10_ready         (rsp_xbar_demux_010_src0_ready),           //    sink10.ready
		.sink10_valid         (rsp_xbar_demux_010_src0_valid),           //          .valid
		.sink10_channel       (rsp_xbar_demux_010_src0_channel),         //          .channel
		.sink10_data          (rsp_xbar_demux_010_src0_data),            //          .data
		.sink10_startofpacket (rsp_xbar_demux_010_src0_startofpacket),   //          .startofpacket
		.sink10_endofpacket   (rsp_xbar_demux_010_src0_endofpacket),     //          .endofpacket
		.sink11_ready         (rsp_xbar_demux_011_src0_ready),           //    sink11.ready
		.sink11_valid         (rsp_xbar_demux_011_src0_valid),           //          .valid
		.sink11_channel       (rsp_xbar_demux_011_src0_channel),         //          .channel
		.sink11_data          (rsp_xbar_demux_011_src0_data),            //          .data
		.sink11_startofpacket (rsp_xbar_demux_011_src0_startofpacket),   //          .startofpacket
		.sink11_endofpacket   (rsp_xbar_demux_011_src0_endofpacket),     //          .endofpacket
		.sink12_ready         (rsp_xbar_demux_012_src0_ready),           //    sink12.ready
		.sink12_valid         (rsp_xbar_demux_012_src0_valid),           //          .valid
		.sink12_channel       (rsp_xbar_demux_012_src0_channel),         //          .channel
		.sink12_data          (rsp_xbar_demux_012_src0_data),            //          .data
		.sink12_startofpacket (rsp_xbar_demux_012_src0_startofpacket),   //          .startofpacket
		.sink12_endofpacket   (rsp_xbar_demux_012_src0_endofpacket),     //          .endofpacket
		.sink13_ready         (rsp_xbar_demux_013_src0_ready),           //    sink13.ready
		.sink13_valid         (rsp_xbar_demux_013_src0_valid),           //          .valid
		.sink13_channel       (rsp_xbar_demux_013_src0_channel),         //          .channel
		.sink13_data          (rsp_xbar_demux_013_src0_data),            //          .data
		.sink13_startofpacket (rsp_xbar_demux_013_src0_startofpacket),   //          .startofpacket
		.sink13_endofpacket   (rsp_xbar_demux_013_src0_endofpacket),     //          .endofpacket
		.sink14_ready         (rsp_xbar_demux_014_src0_ready),           //    sink14.ready
		.sink14_valid         (rsp_xbar_demux_014_src0_valid),           //          .valid
		.sink14_channel       (rsp_xbar_demux_014_src0_channel),         //          .channel
		.sink14_data          (rsp_xbar_demux_014_src0_data),            //          .data
		.sink14_startofpacket (rsp_xbar_demux_014_src0_startofpacket),   //          .startofpacket
		.sink14_endofpacket   (rsp_xbar_demux_014_src0_endofpacket),     //          .endofpacket
		.sink15_ready         (rsp_xbar_demux_015_src0_ready),           //    sink15.ready
		.sink15_valid         (rsp_xbar_demux_015_src0_valid),           //          .valid
		.sink15_channel       (rsp_xbar_demux_015_src0_channel),         //          .channel
		.sink15_data          (rsp_xbar_demux_015_src0_data),            //          .data
		.sink15_startofpacket (rsp_xbar_demux_015_src0_startofpacket),   //          .startofpacket
		.sink15_endofpacket   (rsp_xbar_demux_015_src0_endofpacket),     //          .endofpacket
		.sink16_ready         (rsp_xbar_demux_016_src0_ready),           //    sink16.ready
		.sink16_valid         (rsp_xbar_demux_016_src0_valid),           //          .valid
		.sink16_channel       (rsp_xbar_demux_016_src0_channel),         //          .channel
		.sink16_data          (rsp_xbar_demux_016_src0_data),            //          .data
		.sink16_startofpacket (rsp_xbar_demux_016_src0_startofpacket),   //          .startofpacket
		.sink16_endofpacket   (rsp_xbar_demux_016_src0_endofpacket),     //          .endofpacket
		.sink17_ready         (rsp_xbar_demux_017_src0_ready),           //    sink17.ready
		.sink17_valid         (rsp_xbar_demux_017_src0_valid),           //          .valid
		.sink17_channel       (rsp_xbar_demux_017_src0_channel),         //          .channel
		.sink17_data          (rsp_xbar_demux_017_src0_data),            //          .data
		.sink17_startofpacket (rsp_xbar_demux_017_src0_startofpacket),   //          .startofpacket
		.sink17_endofpacket   (rsp_xbar_demux_017_src0_endofpacket),     //          .endofpacket
		.sink18_ready         (rsp_xbar_demux_018_src0_ready),           //    sink18.ready
		.sink18_valid         (rsp_xbar_demux_018_src0_valid),           //          .valid
		.sink18_channel       (rsp_xbar_demux_018_src0_channel),         //          .channel
		.sink18_data          (rsp_xbar_demux_018_src0_data),            //          .data
		.sink18_startofpacket (rsp_xbar_demux_018_src0_startofpacket),   //          .startofpacket
		.sink18_endofpacket   (rsp_xbar_demux_018_src0_endofpacket),     //          .endofpacket
		.sink19_ready         (rsp_xbar_demux_019_src0_ready),           //    sink19.ready
		.sink19_valid         (rsp_xbar_demux_019_src0_valid),           //          .valid
		.sink19_channel       (rsp_xbar_demux_019_src0_channel),         //          .channel
		.sink19_data          (rsp_xbar_demux_019_src0_data),            //          .data
		.sink19_startofpacket (rsp_xbar_demux_019_src0_startofpacket),   //          .startofpacket
		.sink19_endofpacket   (rsp_xbar_demux_019_src0_endofpacket),     //          .endofpacket
		.sink20_ready         (rsp_xbar_demux_020_src0_ready),           //    sink20.ready
		.sink20_valid         (rsp_xbar_demux_020_src0_valid),           //          .valid
		.sink20_channel       (rsp_xbar_demux_020_src0_channel),         //          .channel
		.sink20_data          (rsp_xbar_demux_020_src0_data),            //          .data
		.sink20_startofpacket (rsp_xbar_demux_020_src0_startofpacket),   //          .startofpacket
		.sink20_endofpacket   (rsp_xbar_demux_020_src0_endofpacket),     //          .endofpacket
		.sink21_ready         (rsp_xbar_demux_021_src0_ready),           //    sink21.ready
		.sink21_valid         (rsp_xbar_demux_021_src0_valid),           //          .valid
		.sink21_channel       (rsp_xbar_demux_021_src0_channel),         //          .channel
		.sink21_data          (rsp_xbar_demux_021_src0_data),            //          .data
		.sink21_startofpacket (rsp_xbar_demux_021_src0_startofpacket),   //          .startofpacket
		.sink21_endofpacket   (rsp_xbar_demux_021_src0_endofpacket),     //          .endofpacket
		.sink22_ready         (rsp_xbar_demux_022_src0_ready),           //    sink22.ready
		.sink22_valid         (rsp_xbar_demux_022_src0_valid),           //          .valid
		.sink22_channel       (rsp_xbar_demux_022_src0_channel),         //          .channel
		.sink22_data          (rsp_xbar_demux_022_src0_data),            //          .data
		.sink22_startofpacket (rsp_xbar_demux_022_src0_startofpacket),   //          .startofpacket
		.sink22_endofpacket   (rsp_xbar_demux_022_src0_endofpacket),     //          .endofpacket
		.sink23_ready         (rsp_xbar_demux_023_src0_ready),           //    sink23.ready
		.sink23_valid         (rsp_xbar_demux_023_src0_valid),           //          .valid
		.sink23_channel       (rsp_xbar_demux_023_src0_channel),         //          .channel
		.sink23_data          (rsp_xbar_demux_023_src0_data),            //          .data
		.sink23_startofpacket (rsp_xbar_demux_023_src0_startofpacket),   //          .startofpacket
		.sink23_endofpacket   (rsp_xbar_demux_023_src0_endofpacket),     //          .endofpacket
		.sink24_ready         (rsp_xbar_demux_024_src0_ready),           //    sink24.ready
		.sink24_valid         (rsp_xbar_demux_024_src0_valid),           //          .valid
		.sink24_channel       (rsp_xbar_demux_024_src0_channel),         //          .channel
		.sink24_data          (rsp_xbar_demux_024_src0_data),            //          .data
		.sink24_startofpacket (rsp_xbar_demux_024_src0_startofpacket),   //          .startofpacket
		.sink24_endofpacket   (rsp_xbar_demux_024_src0_endofpacket),     //          .endofpacket
		.sink25_ready         (rsp_xbar_demux_025_src0_ready),           //    sink25.ready
		.sink25_valid         (rsp_xbar_demux_025_src0_valid),           //          .valid
		.sink25_channel       (rsp_xbar_demux_025_src0_channel),         //          .channel
		.sink25_data          (rsp_xbar_demux_025_src0_data),            //          .data
		.sink25_startofpacket (rsp_xbar_demux_025_src0_startofpacket),   //          .startofpacket
		.sink25_endofpacket   (rsp_xbar_demux_025_src0_endofpacket),     //          .endofpacket
		.sink26_ready         (rsp_xbar_demux_026_src0_ready),           //    sink26.ready
		.sink26_valid         (rsp_xbar_demux_026_src0_valid),           //          .valid
		.sink26_channel       (rsp_xbar_demux_026_src0_channel),         //          .channel
		.sink26_data          (rsp_xbar_demux_026_src0_data),            //          .data
		.sink26_startofpacket (rsp_xbar_demux_026_src0_startofpacket),   //          .startofpacket
		.sink26_endofpacket   (rsp_xbar_demux_026_src0_endofpacket),     //          .endofpacket
		.sink27_ready         (rsp_xbar_demux_027_src0_ready),           //    sink27.ready
		.sink27_valid         (rsp_xbar_demux_027_src0_valid),           //          .valid
		.sink27_channel       (rsp_xbar_demux_027_src0_channel),         //          .channel
		.sink27_data          (rsp_xbar_demux_027_src0_data),            //          .data
		.sink27_startofpacket (rsp_xbar_demux_027_src0_startofpacket),   //          .startofpacket
		.sink27_endofpacket   (rsp_xbar_demux_027_src0_endofpacket),     //          .endofpacket
		.sink28_ready         (rsp_xbar_demux_028_src0_ready),           //    sink28.ready
		.sink28_valid         (rsp_xbar_demux_028_src0_valid),           //          .valid
		.sink28_channel       (rsp_xbar_demux_028_src0_channel),         //          .channel
		.sink28_data          (rsp_xbar_demux_028_src0_data),            //          .data
		.sink28_startofpacket (rsp_xbar_demux_028_src0_startofpacket),   //          .startofpacket
		.sink28_endofpacket   (rsp_xbar_demux_028_src0_endofpacket),     //          .endofpacket
		.sink29_ready         (rsp_xbar_demux_029_src0_ready),           //    sink29.ready
		.sink29_valid         (rsp_xbar_demux_029_src0_valid),           //          .valid
		.sink29_channel       (rsp_xbar_demux_029_src0_channel),         //          .channel
		.sink29_data          (rsp_xbar_demux_029_src0_data),            //          .data
		.sink29_startofpacket (rsp_xbar_demux_029_src0_startofpacket),   //          .startofpacket
		.sink29_endofpacket   (rsp_xbar_demux_029_src0_endofpacket),     //          .endofpacket
		.sink30_ready         (rsp_xbar_demux_030_src0_ready),           //    sink30.ready
		.sink30_valid         (rsp_xbar_demux_030_src0_valid),           //          .valid
		.sink30_channel       (rsp_xbar_demux_030_src0_channel),         //          .channel
		.sink30_data          (rsp_xbar_demux_030_src0_data),            //          .data
		.sink30_startofpacket (rsp_xbar_demux_030_src0_startofpacket),   //          .startofpacket
		.sink30_endofpacket   (rsp_xbar_demux_030_src0_endofpacket)      //          .endofpacket
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (44),
		.IN_PKT_ADDR_L                 (18),
		.IN_PKT_DATA_H                 (15),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (17),
		.IN_PKT_BYTEEN_L               (16),
		.IN_PKT_BYTE_CNT_H             (53),
		.IN_PKT_BYTE_CNT_L             (51),
		.IN_PKT_TRANS_COMPRESSED_READ  (45),
		.IN_PKT_BURSTWRAP_H            (56),
		.IN_PKT_BURSTWRAP_L            (54),
		.IN_PKT_BURST_SIZE_H           (59),
		.IN_PKT_BURST_SIZE_L           (57),
		.IN_PKT_RESPONSE_STATUS_H      (85),
		.IN_PKT_RESPONSE_STATUS_L      (84),
		.IN_PKT_TRANS_EXCLUSIVE        (50),
		.IN_PKT_BURST_TYPE_H           (61),
		.IN_PKT_BURST_TYPE_L           (60),
		.IN_PKT_ORI_BURST_SIZE_L       (86),
		.IN_PKT_ORI_BURST_SIZE_H       (88),
		.IN_ST_DATA_W                  (89),
		.OUT_PKT_ADDR_H                (62),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (71),
		.OUT_PKT_BYTE_CNT_L            (69),
		.OUT_PKT_TRANS_COMPRESSED_READ (63),
		.OUT_PKT_BURST_SIZE_H          (77),
		.OUT_PKT_BURST_SIZE_L          (75),
		.OUT_PKT_RESPONSE_STATUS_H     (103),
		.OUT_PKT_RESPONSE_STATUS_L     (102),
		.OUT_PKT_TRANS_EXCLUSIVE       (68),
		.OUT_PKT_BURST_TYPE_H          (79),
		.OUT_PKT_BURST_TYPE_L          (78),
		.OUT_PKT_ORI_BURST_SIZE_L      (104),
		.OUT_PKT_ORI_BURST_SIZE_H      (106),
		.OUT_ST_DATA_W                 (107),
		.ST_CHANNEL_W                  (31),
		.OPTIMIZE_FOR_RSP              (1),
		.RESPONSE_PATH                 (1),
		.CONSTANT_BURST_SIZE           (1),
		.PACKING                       (1)
	) width_adapter (
		.clk                  (sys_clk_clk_clk),                         //       clk.clk
		.reset                (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_valid             (id_router_001_src_valid),                 //      sink.valid
		.in_channel           (id_router_001_src_channel),               //          .channel
		.in_startofpacket     (id_router_001_src_startofpacket),         //          .startofpacket
		.in_endofpacket       (id_router_001_src_endofpacket),           //          .endofpacket
		.in_ready             (id_router_001_src_ready),                 //          .ready
		.in_data              (id_router_001_src_data),                  //          .data
		.out_endofpacket      (width_adapter_src_endofpacket),           //       src.endofpacket
		.out_data             (width_adapter_src_data),                  //          .data
		.out_channel          (width_adapter_src_channel),               //          .channel
		.out_valid            (width_adapter_src_valid),                 //          .valid
		.out_ready            (width_adapter_src_ready),                 //          .ready
		.out_startofpacket    (width_adapter_src_startofpacket),         //          .startofpacket
		.in_command_size_data (3'b000)                                   // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (35),
		.IN_PKT_ADDR_L                 (9),
		.IN_PKT_DATA_H                 (7),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (8),
		.IN_PKT_BYTEEN_L               (8),
		.IN_PKT_BYTE_CNT_H             (44),
		.IN_PKT_BYTE_CNT_L             (42),
		.IN_PKT_TRANS_COMPRESSED_READ  (36),
		.IN_PKT_BURSTWRAP_H            (47),
		.IN_PKT_BURSTWRAP_L            (45),
		.IN_PKT_BURST_SIZE_H           (50),
		.IN_PKT_BURST_SIZE_L           (48),
		.IN_PKT_RESPONSE_STATUS_H      (76),
		.IN_PKT_RESPONSE_STATUS_L      (75),
		.IN_PKT_TRANS_EXCLUSIVE        (41),
		.IN_PKT_BURST_TYPE_H           (52),
		.IN_PKT_BURST_TYPE_L           (51),
		.IN_PKT_ORI_BURST_SIZE_L       (77),
		.IN_PKT_ORI_BURST_SIZE_H       (79),
		.IN_ST_DATA_W                  (80),
		.OUT_PKT_ADDR_H                (62),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (71),
		.OUT_PKT_BYTE_CNT_L            (69),
		.OUT_PKT_TRANS_COMPRESSED_READ (63),
		.OUT_PKT_BURST_SIZE_H          (77),
		.OUT_PKT_BURST_SIZE_L          (75),
		.OUT_PKT_RESPONSE_STATUS_H     (103),
		.OUT_PKT_RESPONSE_STATUS_L     (102),
		.OUT_PKT_TRANS_EXCLUSIVE       (68),
		.OUT_PKT_BURST_TYPE_H          (79),
		.OUT_PKT_BURST_TYPE_L          (78),
		.OUT_PKT_ORI_BURST_SIZE_L      (104),
		.OUT_PKT_ORI_BURST_SIZE_H      (106),
		.OUT_ST_DATA_W                 (107),
		.ST_CHANNEL_W                  (31),
		.OPTIMIZE_FOR_RSP              (1),
		.RESPONSE_PATH                 (1),
		.CONSTANT_BURST_SIZE           (1),
		.PACKING                       (1)
	) width_adapter_001 (
		.clk                  (sys_clk_clk_clk),                         //       clk.clk
		.reset                (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_valid             (id_router_010_src_valid),                 //      sink.valid
		.in_channel           (id_router_010_src_channel),               //          .channel
		.in_startofpacket     (id_router_010_src_startofpacket),         //          .startofpacket
		.in_endofpacket       (id_router_010_src_endofpacket),           //          .endofpacket
		.in_ready             (id_router_010_src_ready),                 //          .ready
		.in_data              (id_router_010_src_data),                  //          .data
		.out_endofpacket      (width_adapter_001_src_endofpacket),       //       src.endofpacket
		.out_data             (width_adapter_001_src_data),              //          .data
		.out_channel          (width_adapter_001_src_channel),           //          .channel
		.out_valid            (width_adapter_001_src_valid),             //          .valid
		.out_ready            (width_adapter_001_src_ready),             //          .ready
		.out_startofpacket    (width_adapter_001_src_startofpacket),     //          .startofpacket
		.in_command_size_data (3'b000)                                   // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (62),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (71),
		.IN_PKT_BYTE_CNT_L             (69),
		.IN_PKT_TRANS_COMPRESSED_READ  (63),
		.IN_PKT_BURSTWRAP_H            (74),
		.IN_PKT_BURSTWRAP_L            (72),
		.IN_PKT_BURST_SIZE_H           (77),
		.IN_PKT_BURST_SIZE_L           (75),
		.IN_PKT_RESPONSE_STATUS_H      (103),
		.IN_PKT_RESPONSE_STATUS_L      (102),
		.IN_PKT_TRANS_EXCLUSIVE        (68),
		.IN_PKT_BURST_TYPE_H           (79),
		.IN_PKT_BURST_TYPE_L           (78),
		.IN_PKT_ORI_BURST_SIZE_L       (104),
		.IN_PKT_ORI_BURST_SIZE_H       (106),
		.IN_ST_DATA_W                  (107),
		.OUT_PKT_ADDR_H                (44),
		.OUT_PKT_ADDR_L                (18),
		.OUT_PKT_DATA_H                (15),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (17),
		.OUT_PKT_BYTEEN_L              (16),
		.OUT_PKT_BYTE_CNT_H            (53),
		.OUT_PKT_BYTE_CNT_L            (51),
		.OUT_PKT_TRANS_COMPRESSED_READ (45),
		.OUT_PKT_BURST_SIZE_H          (59),
		.OUT_PKT_BURST_SIZE_L          (57),
		.OUT_PKT_RESPONSE_STATUS_H     (85),
		.OUT_PKT_RESPONSE_STATUS_L     (84),
		.OUT_PKT_TRANS_EXCLUSIVE       (50),
		.OUT_PKT_BURST_TYPE_H          (61),
		.OUT_PKT_BURST_TYPE_L          (60),
		.OUT_PKT_ORI_BURST_SIZE_L      (86),
		.OUT_PKT_ORI_BURST_SIZE_H      (88),
		.OUT_ST_DATA_W                 (89),
		.ST_CHANNEL_W                  (31),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (0),
		.CONSTANT_BURST_SIZE           (1),
		.PACKING                       (1)
	) width_adapter_002 (
		.clk                  (sys_clk_clk_clk),                         //       clk.clk
		.reset                (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_valid             (cmd_xbar_mux_001_src_valid),              //      sink.valid
		.in_channel           (cmd_xbar_mux_001_src_channel),            //          .channel
		.in_startofpacket     (cmd_xbar_mux_001_src_startofpacket),      //          .startofpacket
		.in_endofpacket       (cmd_xbar_mux_001_src_endofpacket),        //          .endofpacket
		.in_ready             (cmd_xbar_mux_001_src_ready),              //          .ready
		.in_data              (cmd_xbar_mux_001_src_data),               //          .data
		.out_endofpacket      (width_adapter_002_src_endofpacket),       //       src.endofpacket
		.out_data             (width_adapter_002_src_data),              //          .data
		.out_channel          (width_adapter_002_src_channel),           //          .channel
		.out_valid            (width_adapter_002_src_valid),             //          .valid
		.out_ready            (width_adapter_002_src_ready),             //          .ready
		.out_startofpacket    (width_adapter_002_src_startofpacket),     //          .startofpacket
		.in_command_size_data (3'b000)                                   // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (62),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (71),
		.IN_PKT_BYTE_CNT_L             (69),
		.IN_PKT_TRANS_COMPRESSED_READ  (63),
		.IN_PKT_BURSTWRAP_H            (74),
		.IN_PKT_BURSTWRAP_L            (72),
		.IN_PKT_BURST_SIZE_H           (77),
		.IN_PKT_BURST_SIZE_L           (75),
		.IN_PKT_RESPONSE_STATUS_H      (103),
		.IN_PKT_RESPONSE_STATUS_L      (102),
		.IN_PKT_TRANS_EXCLUSIVE        (68),
		.IN_PKT_BURST_TYPE_H           (79),
		.IN_PKT_BURST_TYPE_L           (78),
		.IN_PKT_ORI_BURST_SIZE_L       (104),
		.IN_PKT_ORI_BURST_SIZE_H       (106),
		.IN_ST_DATA_W                  (107),
		.OUT_PKT_ADDR_H                (35),
		.OUT_PKT_ADDR_L                (9),
		.OUT_PKT_DATA_H                (7),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (8),
		.OUT_PKT_BYTEEN_L              (8),
		.OUT_PKT_BYTE_CNT_H            (44),
		.OUT_PKT_BYTE_CNT_L            (42),
		.OUT_PKT_TRANS_COMPRESSED_READ (36),
		.OUT_PKT_BURST_SIZE_H          (50),
		.OUT_PKT_BURST_SIZE_L          (48),
		.OUT_PKT_RESPONSE_STATUS_H     (76),
		.OUT_PKT_RESPONSE_STATUS_L     (75),
		.OUT_PKT_TRANS_EXCLUSIVE       (41),
		.OUT_PKT_BURST_TYPE_H          (52),
		.OUT_PKT_BURST_TYPE_L          (51),
		.OUT_PKT_ORI_BURST_SIZE_L      (77),
		.OUT_PKT_ORI_BURST_SIZE_H      (79),
		.OUT_ST_DATA_W                 (80),
		.ST_CHANNEL_W                  (31),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (0),
		.CONSTANT_BURST_SIZE           (1),
		.PACKING                       (1)
	) width_adapter_003 (
		.clk                  (sys_clk_clk_clk),                         //       clk.clk
		.reset                (CPU_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_valid             (cmd_xbar_mux_010_src_valid),              //      sink.valid
		.in_channel           (cmd_xbar_mux_010_src_channel),            //          .channel
		.in_startofpacket     (cmd_xbar_mux_010_src_startofpacket),      //          .startofpacket
		.in_endofpacket       (cmd_xbar_mux_010_src_endofpacket),        //          .endofpacket
		.in_ready             (cmd_xbar_mux_010_src_ready),              //          .ready
		.in_data              (cmd_xbar_mux_010_src_data),               //          .data
		.out_endofpacket      (width_adapter_003_src_endofpacket),       //       src.endofpacket
		.out_data             (width_adapter_003_src_data),              //          .data
		.out_channel          (width_adapter_003_src_channel),           //          .channel
		.out_valid            (width_adapter_003_src_valid),             //          .valid
		.out_ready            (width_adapter_003_src_ready),             //          .ready
		.out_startofpacket    (width_adapter_003_src_startofpacket),     //          .startofpacket
		.in_command_size_data (3'b000)                                   // (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (107),
		.BITS_PER_SYMBOL     (107),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (31),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser (
		.in_clk            (sys_clk_clk_clk),                                           //        in_clk.clk
		.in_reset          (CPU_reset_n_reset_bridge_in_reset_reset),                   //  in_clk_reset.reset
		.out_clk           (clk_50_clk_clk),                                            //       out_clk.clk
		.out_reset         (sys_pll_inclk_interface_reset_reset_bridge_in_reset_reset), // out_clk_reset.reset
		.in_ready          (cmd_xbar_demux_001_src9_ready),                             //            in.ready
		.in_valid          (cmd_xbar_demux_001_src9_valid),                             //              .valid
		.in_startofpacket  (cmd_xbar_demux_001_src9_startofpacket),                     //              .startofpacket
		.in_endofpacket    (cmd_xbar_demux_001_src9_endofpacket),                       //              .endofpacket
		.in_channel        (cmd_xbar_demux_001_src9_channel),                           //              .channel
		.in_data           (cmd_xbar_demux_001_src9_data),                              //              .data
		.out_ready         (crosser_out_ready),                                         //           out.ready
		.out_valid         (crosser_out_valid),                                         //              .valid
		.out_startofpacket (crosser_out_startofpacket),                                 //              .startofpacket
		.out_endofpacket   (crosser_out_endofpacket),                                   //              .endofpacket
		.out_channel       (crosser_out_channel),                                       //              .channel
		.out_data          (crosser_out_data),                                          //              .data
		.in_empty          (1'b0),                                                      //   (terminated)
		.in_error          (1'b0),                                                      //   (terminated)
		.out_empty         (),                                                          //   (terminated)
		.out_error         ()                                                           //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (107),
		.BITS_PER_SYMBOL     (107),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (31),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_001 (
		.in_clk            (clk_50_clk_clk),                                            //        in_clk.clk
		.in_reset          (sys_pll_inclk_interface_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset
		.out_clk           (sys_clk_clk_clk),                                           //       out_clk.clk
		.out_reset         (CPU_reset_n_reset_bridge_in_reset_reset),                   // out_clk_reset.reset
		.in_ready          (rsp_xbar_demux_009_src0_ready),                             //            in.ready
		.in_valid          (rsp_xbar_demux_009_src0_valid),                             //              .valid
		.in_startofpacket  (rsp_xbar_demux_009_src0_startofpacket),                     //              .startofpacket
		.in_endofpacket    (rsp_xbar_demux_009_src0_endofpacket),                       //              .endofpacket
		.in_channel        (rsp_xbar_demux_009_src0_channel),                           //              .channel
		.in_data           (rsp_xbar_demux_009_src0_data),                              //              .data
		.out_ready         (crosser_001_out_ready),                                     //           out.ready
		.out_valid         (crosser_001_out_valid),                                     //              .valid
		.out_startofpacket (crosser_001_out_startofpacket),                             //              .startofpacket
		.out_endofpacket   (crosser_001_out_endofpacket),                               //              .endofpacket
		.out_channel       (crosser_001_out_channel),                                   //              .channel
		.out_data          (crosser_001_out_data),                                      //              .data
		.in_empty          (1'b0),                                                      //   (terminated)
		.in_error          (1'b0),                                                      //   (terminated)
		.out_empty         (),                                                          //   (terminated)
		.out_error         ()                                                           //   (terminated)
	);

endmodule
